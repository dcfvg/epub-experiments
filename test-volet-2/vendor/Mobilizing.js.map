{"version":3,"file":"Mobilizing.js","sources":["../src/js/Mobilizing/helpers/Misc.js","../src/js/Mobilizing/audio/AudioBuffer.js","../src/js/Mobilizing/Base.js","../src/js/Mobilizing/helpers/EventEmitter.js","../src/js/Mobilizing/Component.js","../src/js/Mobilizing/audio/AudioSource.js","../src/js/Mobilizing/core/Color.js","../src/js/Mobilizing/core/Euler.js","../src/js/Mobilizing/core/Matrix3.js","../src/js/Mobilizing/core/Matrix4.js","../src/js/Mobilizing/core/Quaternion.js","../src/js/Mobilizing/core/Rect.js","../src/js/Mobilizing/core/Vector2.js","../src/js/Mobilizing/core/Vector3.js","../src/js/Mobilizing/helpers/Math.js","../src/js/Mobilizing/helpers/Debug.js","../src/js/Mobilizing/time/Time.js","../src/js/Mobilizing/helpers/Animation.js","../src/js/Mobilizing/scene/Material.js","../src/js/Mobilizing/scene/Camera.js","../src/js/Mobilizing/scene/Light.js","../src/js/Mobilizing/texture/Texture.js","../src/js/Mobilizing/shape/Label.js","../src/js/Mobilizing/scene/Transform.js","../src/js/Mobilizing/shape/Mesh.js","../src/js/Mobilizing/helpers/Csg.js","../src/js/Mobilizing/helpers/Device.js","../src/js/Mobilizing/helpers/BatteryStatus.js","../src/js/Mobilizing/input/Keyboard.js","../src/js/Mobilizing/helpers/DOM.js","../src/js/Mobilizing/input/Mouse.js","../src/js/Mobilizing/input/Touch.js","../src/js/Mobilizing/input/Motion.js","../src/js/Mobilizing/input/Orientation.js","../src/js/Mobilizing/input/GPS.js","../src/js/Mobilizing/helpers/MeshFX.js","../src/js/Mobilizing/helpers/Midi.js","../src/js/Mobilizing/helpers/Profiler.js","../src/js/Mobilizing/net/Ajax.js","../src/js/Mobilizing/helpers/OBJ.js","../src/js/Mobilizing/helpers/Loader.js","../src/js/Mobilizing/ComponentProxy.js","../src/js/Mobilizing/Context.js","../src/js/Mobilizing/helpers/Runner.js","../src/js/Mobilizing/helpers/Pointer.js","../src/js/Mobilizing/net/PubSub.js","../src/js/Mobilizing/physics/PhysicsEngine.js","../src/js/Mobilizing/renderer/Engine3D.js","../src/js/Mobilizing/renderer/Renderer3D.js","../src/js/Mobilizing/renderer/RendererAudio.js","../src/js/Mobilizing/scene/Font.js","../src/js/Mobilizing/scene/LODGroup.js","../src/js/Mobilizing/text/TextUtils.js","../src/js/Mobilizing/text/RichText.js","../src/js/Mobilizing/texture/CanvasTexture.js","../src/js/Mobilizing/texture/DOMNodeTexture.js","../src/js/Mobilizing/texture/ImageSequenceTexture.js","../src/js/Mobilizing/texture/RenderTexture.js","../src/js/Mobilizing/texture/VideoTexture.js","../src/js/Mobilizing/time/Timer.js","../src/js/Mobilizing/time/NTP.js","../src/js/Mobilizing/ui/Clickable.js","../src/js/Mobilizing/ui/Button.js","../src/js/Mobilizing/ui/ButtonGroup.js","../src/js/Mobilizing/ui/TextField.js","../src/js/Mobilizing/context/EasyContext.js","../src/js/Mobilizing.js"],"sourcesContent":["\n/**\n * Method to retreive a value from an object if available, or a default value\n * Used in class constructors\n *\n * @method getOrDefault\n * @param {Object} object The object to retreive the value from if available\n * @param {String} key The object's key from which the value should be looked up\n * @param {Mixed} defaultValue The default value to return if the object does not contain the given key, or if the value accociated with the key is undefined\n * @return {Mixed} The retreived a value or the default one\n */\nfunction getOrDefault(object, key, defaultValue) {\n    return ((object !== undefined) && (key in object)) ? object[key] : defaultValue;\n}\n\n/**\n * Method to retreive a value from an object if available, or the return value of a function with optional arguments\n * Used in class constructors\n *\n * @method getOrExec\n * @param {Object} object The object to retreive the value from if available\n * @param {String} key The object's key from which the value should be looked up\n * @param {Function} fn The function to call if no value was found\n * @param {Mixed} [...args] Optional arguments to send with the function\n * @return {Mixed} The retreived a value or the function's return one\n*/\nfunction getOrExec(object, key, fn, ...args) {\n    return ((object !== undefined) && (key in object)) ? object[key] : fn(...args);\n}\n\n/**\n * Method to retreive a value from an object if available, or instantiate a class with optional arguments\n * Used in class constructors\n *\n * @method getOrCreate\n * @param {Object} object The object to retreive the value from if available\n * @param {String} key The object's key from which the value should be looked up\n * @param {Class} cls The class to instantiate if no value was found\n * @param {Mixed} [...args] Optional arguments to send to the class's constructor\n * @return {Mixed} The retreived a value or the new class instance\n*/\nfunction getOrCreate(object, key, cls, ...args) {\n    return ((object !== undefined) && (key in object)) ? object[key] : new cls(...args);\n}\n\n/**\n * Method to force a class to have only one instance\n *\n * @method singletonize\n * @param {class} def The definition of the class\n */\nfunction singletonize(def){\n\n    let instance;\n\n    return function(...args){\n\n        if(instance === undefined){\n            instance = new def(...args);\n        }\n        return instance;\n    }\n}\n\n/**\n * Method to convert a string to Base64. Used internally to convert loaded raw data to img. Wrote by  phil@philten.com - http://www.philten.com\n * @private\n * @method encode64\n * @param {String} inputStr\n * @author phil@philten.com - http://www.philten.com\n * Date: 2010/12/15\n * version: 1.0\n * url french: http://www.philten.com/fr-xmlhttprequest-image\n * url english: http://www.philten.com/us-xmlhttprequest-image\n */\nfunction encode64(inputStr)\n{\n    var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    var outputStr = \"\";\n    var i = 0;\n\n    while (i<inputStr.length)\n    {\n        //all three \"& 0xff\" added below are there to fix a known bug\n        //with bytes returned by xhr.responseText\n        var byte1 = inputStr.charCodeAt(i++) & 0xff;\n        var byte2 = inputStr.charCodeAt(i++) & 0xff;\n        var byte3 = inputStr.charCodeAt(i++) & 0xff;\n\n        var enc1 = byte1 >> 2;\n        var enc2 = ((byte1 & 3) << 4) | (byte2 >> 4);\n\n        var enc3, enc4;\n        if (isNaN(byte2))\n        {\n            enc3 = enc4 = 64;\n        }\n        else\n        {\n            enc3 = ((byte2 & 15) << 2) | (byte3 >> 6);\n            if (isNaN(byte3))\n            {\n                enc4 = 64;\n            }\n            else\n            {\n                enc4 = byte3 & 63;\n            }\n        }\n\n        outputStr +=  b64.charAt(enc1) + b64.charAt(enc2) + b64.charAt(enc3) + b64.charAt(enc4);\n    }\n\n    return outputStr;\n}\n\n/**\n * Converts a DOMString to an ArrayBuffer (raw data binary).\n * \n * @method stringToArrayBuffer\n * @param {DOMString} str a string returned by a XMLHTTPRequest (responseText)\n * @return {ArrayBuffer} the resulting ArrayBuffer\n */\nfunction stringToArrayBuffer(str){\n    //var s = this.encode_utf8(str);\n    //var buf = new ArrayBuffer(s.length);\n    var buffer = new ArrayBuffer(str.length);\n    var bufView = new Uint8Array(buffer);\n    //for (var i=0, strLen=str.length; i<strLen; i++) {\n    for (var i=0, strLen=str.length; i<strLen; i++) {\n        //bufView[i] = s.charCodeAt(i);\n        bufView[i] = str.charCodeAt(i);\n    }\n    return buffer;\n}\n\n/**\n * Extract the MimeType from the URL string of image files. Used internally for texture loading\n * @private\n * @method getMimeType\n * @param {String} url\n * @param {String} mimeType from the url\n */\nfunction getMimeType(url){\n\n    var mimeType = null;\n\n    var extension = (function(url){\n\n        if (url.lastIndexOf(\".\") > 0) {\n            return url.substr(url.lastIndexOf(\".\")).toLowerCase();\n        }\n\n    })(url);\n\n    if( extension === \".jpg\" || extension === \".jpeg\"){\n        mimeType = \"jpeg\";\n    }else if( extension === \".tiff\" || extension === \".tif\"){\n        mimeType = \"tiff\";\n    }else if(extension === \".png\"){\n        mimeType = \"png\";\n    }else if(extension === \".gif\"){\n        mimeType = \"gif\";\n    }\n\n    console.log(\"extension \" + extension, \"mimeType \" + mimeType);\n\n    return mimeType;\n}\n\n// module exports\nexport { getOrDefault, getOrExec, getOrCreate, singletonize };","import {getOrDefault} from \"../helpers/Misc\";\n\nclass AudioBuffer\n{\n    /**\n     AudioBuffer Class. Encapsulates the concept of buffer of Audio data. You can load, depending on the platform, various audio file formats, like WAV, MP3 or OGG. See the Web Audio API documentation. requires the Web Audio API.\n\n     @class AudioBuffer\n     @constructor\n     @param {Object} params the parameters object\n     @param {RendererAudio} params.renderer The audio renderer\n     @param {ArrayBuffer} params.arrayBuffer the raw arraybuffer, already loaded, to give to the audio context\n     @param {Function} params.decodedCallback the callback function to call when Audio Context has decoded the sound file's raw  arrayBuffer\n     @example \n     */\n    constructor(params)\n    {\n        this.renderer = getOrDefault(params, \"renderer\", undefined);\n        this.arrayBuffer = getOrDefault(params, \"arrayBuffer\", undefined);\n        this.decodedCallback = getOrDefault(params, \"decodedCallback\", undefined);\n        \n        if(this.arrayBuffer)\n        {\n            this.renderer.audioContext.decodeAudioData(this.arrayBuffer,\n                                                       function(buffer){\n                this.buffer = buffer;\n                this.decodedCallback();\n\n            }.bind(this));\n        }\n    }\n\n    /**\n    * Return the underlying WebAudio audio buffer\n    * @method getInternalAudioBuffer\n    * @return {Buffer} webAudio buffer\n    */\n    getInternalAudioBuffer()\n    {\n        return this.buffer;\n    }\n}\n\n// module exports\nexport { AudioBuffer };","import {getOrDefault} from './helpers/Misc';\n\nclass Base {\n\n    /**\n     * A base class\n     * Used for all classes that need access to a Mobilizing context\n     *\n     * @class Base\n     * @constructor\n     * @param {Object} params Config parameters\n     * @param {Context} params.context The Mobilizing Context\n    */    \n    constructor(params){\n        /**\n        * A reference to the Mobilizing context\n        *\n        * @property {Context} _context\n        * @private\n        */\n        this._context = getOrDefault(params, \"context\", null);\n        \n        this._name = \"unnamed\"; //object name\n        this._id = Date.now() + \"_\" + Math.floor(Math.random()*1000000); //FIXME : generate unique id\n    }\n\n    /**\n    * Set the Mobilizing context\n    *\n    * @method setContext\n    * @param {Context} context The Mobilizing Context\n    */\n    setContext(context){\n        this._context = context;\n    }\n\n    /**\n    * Get the Mobilizing context\n    *\n    * @method getContext\n    * @return {Context} The Mobilizing context\n    */\n    getContext(){\n        return this._context;\n    }\n    \n    /**\n     * Set the Object name\n     *\n     * @method setName\n     * @param {string} name The Object name\n     */\n    setName(name){\n        this._name = name;\n    }\n    \n    /**\n     * Get the Object name\n     *\n     * @method getContext\n     * @return {string} The Object name\n     */\n    getName(){\n        return this._name;\n    }\n    \n    /**\n     * Get the Object unique ID\n     *\n     * @method getID\n     * @return {int} The Object ID\n     */\n    getID(){\n        return this._id;\n    }\n    \n}\n\n// module exports\nexport { Base };\n","import {getOrDefault} from './Misc';\n\nclass EventEmitter\n{\n    /**\n    * EventEmitter is a helper class to handle event emission\n    *\n    * @class EventEmitter\n    * @constructor\n    * @param {Object} params The parameters object\n    * @param {Mixed} [params.scope] The scope to use for callbacks, should usually be set to the class instance using the EventEmitter. Defaults to the EventEmitter instance if not specified\n    */\n    constructor(params)\n    {\n        this._scope = getOrDefault(params, \"scope\", this);\n        \n        this.listeners = {};\n    }\n\n    /**\n    * Add an event listener\n    *\n    * @method on\n    * @param {String} type The event type to listen to\n    * @param {Function} callback The callback to call when the event is captured\n     * @chainable\n    */\n    on(type, callback)\n    {\n        if (typeof this.listeners[type] === \"undefined\")\n        {\n            this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(callback);\n\n        return this;\n    }\n\n    /**\n     * Remove an event listener\n     *\n     * @method off\n     * @param {String} type The event type to stop listen to\n     * @param {Function} [callback] The callback function associated with the listener. If not specified, all listeners will be removed\n     * @chainable\n     */\n    off(type, callback)\n    {\n        var listeners;\n\n        if(this.listeners[type] instanceof Array)\n        {\n            if(typeof callback === 'undefined')\n            {\n                this.listeners[type] = {};\n            }\n            else\n            {\n                listeners = this.listeners[type];\n                for (var i=0, len=listeners.length; i < len; i++)\n                {\n                    if (listeners[i] === callback){\n                        listeners.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Trigger an event\n     *\n     * @method trigger\n     * @param {String} type The event type\n     * @param {Mixed} [...data] Data to send along with the event\n     * @chainable\n     */\n    trigger(type, ...data)\n    {\n        var listeners;\n\n        if(this.listeners[type] instanceof Array)\n        {\n            listeners = this.listeners[type];\n\n            listeners.forEach((listener) => {\n                listener.call(this._scope, ...data);\n            });\n        }\n\n        return this;\n    }\n}\n\n// module exports\nexport { EventEmitter };\n","import {Base} from './Base';\nimport {EventEmitter} from './helpers/EventEmitter';\n\nclass Component extends Base{\n\n    /**\n     * The generic componment class\n     * Used for all Mobilizing components such as input helpers, renderers, etc\n     *\n     * @class Component\n     * @extends Base\n     * @constructor\n     * @param {Object} params Config parameters\n     * @param {Context} params.context The Mobilizing Context\n    */    \n    constructor(params)\n    {    \n        super(params);\n\n        /**\n        * Whether the component is active or not\n        *\n        * @property {Boolean} _active\n        * @private\n        */\n        this._active = false;\n\n        /**\n        * Whether the component's setup has been called\n        *\n        * @property {Boolean} _setupDone\n        * @private\n        */\n        this._setupDone = false;\n\n        /**\n        * An event emmiter used to send custom events\n        *\n        * @property {EventEmitter} events\n        */\n        this.events = new EventEmitter({\"scope\": this});\n\n        /*\n         * Array of all the children component attached to this component.\n         * Used to conceive component chains for easy management\n         * @private\n         * @property {Array} nexts\n         */\n        this._nexts = [];\n    }\n\n    /**\n    * Calls the setup if it has not already been called\n    * This method should not be called \n    * This is where all the initialization (such as adding event listeners)should be done\n    * It is called automatically by an internal Mobilizing mechanism and should thus not be called directly\n    *\n    * @method runSetup\n    */\n    /*\n    runSetup()\n    {\n        if(!this._setupDone){\n            this._setupDone = true;\n\n            this.setup();\n        }   \n    }\n     */\n\n    /**\n    * Set's up the component\n    * This empty method is usually overriden to perform setup actions for the component\n    * This is where all the initialization (such as adding event listeners)should be done\n    * It is called automatically by an internal Mobilizing mechanism and should thus not be called directly\n    *\n    * @method setup\n    */\n    setup()\n    {\n        if(!this._setupDone)\n        {\n            this._setupDone = true;\n        }\n    }\n\n    /**\n    * preLoad the component\n    * This empty method is usually overriden to perform setup actions for the component.\n    * The preLoad is designed to be called before any other method, even setup.\n    * In the case of user scripts, it is used to preload all needed datas before the setup (pictures, font, etc.)\n    * It is called automatically by an internal Mobilizing mechanism and should thus not be called directly\n    * \n    * @method preLoad\n    */\n    preLoad()\n    {\n    }\n\n    /**\n    * Activate the component\n    * A call to this method calls the setup method if it has not been run yet\n    *\n    * @method on\n    */\n    on()\n    {\n        this._active = true;\n    }\n\n    /**\n    * Deactivate the component\n    *\n    * @method off\n    */\n    off()\n    {\n        this._active = false;\n    }\n\n    /**\n     * @method byPass\n     * TODO!\n     */\n    byPass()\n    {\n        //how to bypass ?\n    }\n    \n    /**\n    * Get the activation status of the component\n    *\n    * @method getStatus\n    * @return {Boolean} True if active, false otherwise\n    */\n    getStatus()\n    {\n        return this._active;\n    }\n\n    /**\n    * Run code before the update of all components is run\n    * This empty method is usually overriden to perform pre-update actions for the component\n    * It is called once per component by an internal Mobilizing mechanism\n    *\n    * @method preUpdate\n    */\n    preUpdate()\n    {\n    }\n\n    /**\n    * Update the component\n    * This empty method is usually overriden to perform update actions for the component\n    * It is called periodically by an internal Mobilizing mechanism\n    *\n    * @method update\n    */\n    update()\n    {\n    }\n\n    /**\n    * Run code after the update of all components is run\n    * This empty method is usually overriden to perform post-update actions for the component\n    * It is called periodically by an internal Mobilizing mechanism\n    *\n    * @method postUpdate\n    */\n    postUpdate()\n    {\n    }\n\n    /**\n    * Adds a component to this chained component array\n    * \n    * @method chain\n    * @param {Component} component the component to chain\n    */\n    chain(component)\n    {\n        this._nexts.push(component);\n    }\n\n    /**\n    * Returns the array of attached children components\n    * \n    * @method getChainedComponents\n    * @return {Array} children arrays\n    */\n    getChainedComponents()\n    {\n        return this._nexts;\n    }\n}\n\n// module exports\nexport { Component };\n","import {Component} from \"../Component\";\nimport {getOrDefault} from \"../helpers/Misc\";\n\nclass AudioSource extends Component\n{\n    /**\n     * \n     * AudioSource Class. Encapsulates the concept of Audio source, a sound-emitting entity with a given position in space. requires the Web Audio API.\n     *  \n     * @class AudioSource\n     * @constructor\n     * @extends Component\n     * @param {Object} params the parameters object\n     * @param {RendererAudio} params.renderer The AudioRenderer \n    */\n    constructor(params)\n    {\n        super(params);\n        \n        this.renderer = getOrDefault(params,\"renderer\", undefined);\n        this.panner;\n\n        if (this.renderer.audioContext !== undefined)\n        {\n            this.panner = this.renderer.audioContext.createPanner();\n            this.panner.panningModel = 'HRTF';\n            this.panner.distanceModel = 'exponential';\n            this.panner.refDistance = 10;\n            this.panner.maxDistance = 10000;\n            this.panner.rolloffFactor = 1;\n            this.panner.coneInnerAngle = 360;\n            this.panner.coneOuterAngle = 0;\n            this.panner.coneOuterGain = 0;\n        }\n        this.is3D = false;\n        this.loop = false;\n    }\n\n    /**\n    * Sets the reference distance for sound attenuation through space\n    * @method setRefDistance\n    * @param {Number} val\n    */\n    setRefDistance(val)\n    {\n        this.panner.refDistance = val;\n    }\n\n    /**\n    * Sets the maximum distance for sound propagation in space\n    * @method setMaxDistance\n    * @param {Number} val\n    */\n    setMaxDistance(val)\n    {\n        this.panner.maxDistance = val;\n    }\n\n    /**\n     set the current AudioSource buffer\n     @method setBuffer\n     @param {Object} buffer the AudioBuffer we want the source to play.\n     */\n    setBuffer(buffer)\n    {\n        this.buffer = buffer;\n    }\n\n    /**\n    * set 3D propagation\n    * @method set3D\n    * @param {Boolean} enabled\n    */\n    set3D(enabled)\n    {\n        this.is3D = enabled;\n    }\n\n    /**\n     set the current Transform that represents the AudioSource position in space.\n     @method setTransform\n     @param {Object} transform the Transform.\n     */\n    setTransform(transform)\n    {\n        this.transform = transform;\n    }\n\n    /**\n    * set this source loop\n    * @method setLoop\n    * @param {Boolean} enabled\n    */\n    setLoop(val)\n    {\n        this.loop = val;\n    }\n\n    /**\n    * Updates the source's position in space if given from a transform\n    * @method update\n    */\n    update()\n    {\n        if (this.transform !== undefined)\n        {\n            var pos = this.transform.getLocalPosition();\n            this.panner.setPosition(pos.x, pos.y, pos.z);\n\n            //sound.panner.setVelocity(dx/dt, dy/dt, dz/dt);\n            //sound.panner.coneInnerAngle = innerAngleInDegrees;\n            //sound.panner.coneOuterAngle = outerAngleInDegrees;\n            //sound.panner.coneOuterGain = outerGainFactor;\n            //listener :\n            //ctx.listener.setPosition(p.x, p.y, p.z);\n            //ctx.listener.setOrientation(vec.x, vec.y, vec.z, up.x, up.y, up.z);\n\n            /*\n             var oscillator = audioCtx.createOscillator();\n             var gainNode = audioCtx.createGain();\n             oscillator.connect(gainNode);\n             gainNode.connect(audioCtx.destination);\n             oscillator.type = 'sine'; // sine wave — other values are 'square', 'sawtooth', 'triangle' and 'custom'\n             oscillator.frequency.value = 440; // value in hertz\n             oscillator.start(0);\n             */\n        }\n    }\n    \n    on()\n    {\n        super.on();\n        this.play();\n    }\n    \n    off()\n    {\n        super.off();\n        this.stop();\n    }\n\n    /**\n     plays the AudioSource\n     @method play\n     */\n    play()\n    {\n        if (this.renderer.audioContext !== undefined)\n        {\n            if (this.source !== undefined)\n            {\n                this.stop();\n            }\n            this.source = this.renderer.audioContext.createBufferSource();\n\n            if (this.is3D)\n            {\n                this.source.connect(this.panner);\n                this.panner.connect(this.renderer.audioContext.destination);\n            }\n            else\n            {\n                this.source.connect(this.renderer.audioContext.destination);\n            }\n            this.source.buffer = this.buffer.buffer;\n        }\n        if (this.source !== undefined)\n        {\n            this.playing = true;\n\n            if(this.loop){\n                this.source.loop = true;\n            }\n\n            this.source.start(0);\n        }\n    }\n\n    /**\n     pauses the AudioSource.\n     @method pause\n     */\n    pause()\n    {\n        if (this.source !== undefined)\n        {\n            this.playing = false;\n        }\n    }\n\n    /**\n     stops the AudioSource.\n     @method stop\n     */\n    stop()\n    {\n        if (this.source !== undefined)\n        {\n            this.source.stop(0);\n            this.source = undefined;\n            this.playing = false;\n        }\n    }\n}\n\n// module exports\nexport { AudioSource };","import * as THREE from 'three';\n\n/**\n * Represents a RGB color to be used in materials applied on Meshes.\n *\n * This class extends the one from Three.js, API available here : http://threejs.org/docs/#Reference/Math/Color\n * @class Color\n */\nclass Color extends THREE.Color\n{\n/**\n     Creates a color based on [0;1] float RGB values\n     @method Create\n     @static\n     @param {Number} r The red component [0;1].\n     @param {Number} g The green component [0;1].\n     @param {Number} b The blue component [0;1].\n     */\n    static Create(r,g,b)\n    {\n        return new Color(r,g,b);\n    }\n\n/**\n     Creates a random color\n     @method random\n     @static\n     @return {Color} the created random color\n     */\n    static random()\n    {\n        return new Color(Math.random(), Math.random(), Math.random());\n    }\n\n\n    /**\n    * Sets the rgb components of this color to the [0;1] based given value\n    * @private\n    * @method setTo\n    * @chainable\n    * @param {Float} val float number\n    * @return {Color} this color with the given value\n    */\n    setTo(val)\n    {\n        this.r = val;\n        this.g = val;\n        this.b = val;\n\n        return this;\n    }\n\n\n    /**\n     Creates a color based on [0;255] RGB values\n     @method setRGB32\n     @param {Number} r The red component [0;255].\n     @param {Number} g The green component [0;255].\n     @param {Number} b The blue component [0;255].\n     */\n    setRGB32(r,g,b)\n    {\n        this.r = r/255;\n        this.g = g/255;\n        this.b = b/255;\n    }\n\n    /**\n     Build a HTML color string with the given alpha.\n     @method makeRGBAStringWithAlpha\n     @param {Number} a The alpha component [0;255].\n     @return {String} a string representation of the color with alpha\n     */\n    makeRGBAStringWithAlpha(a)\n    {\n        var string = \"rgba(\"+ Math.floor(this.r*255) +\",\"+ Math.floor(this.g*255) +\",\"+ Math.floor(this.b*255) +\",\"+ a +\")\";\n\n        return string;\n    }\n\n    /*\n    hex()\n    {\n        return this.color.getHexString();\n\n         var r = this.color.r*255;\n         var g = this.color.g*255;\n         var b = this.color.b*255;\n\n         return \"#\" + r.toString(16) + g.toString(16) + b.toString(16);\n\n\n    }\n    */\n\n    /**\n    * Copies given color.\n    * @method copy\n    * @return Color\n    * @param color {Color}\n    */\n    copy(color)\n    {\n        super.copy();\n    }\n\n/**\n Copies given color making conversion from gamma to linear space.\n@method copyGammaToLinear\n@return Color\n@param color {Color}\n*/\n\n/**\n Copies given color making conversion from linear to gamma space.\n@method copyLinearToGamma\n@return Color\n@param color {Color}\n*/\n\n/**\n@method convertGammaToLinear\n@return Color\n*/\n\n/**\n@method convertLinearToGamma\n@return Color\n*/\n\n/**\n Sets this color from RGB values.\n@method setRGB\n@return Color\n@param r {Float}\n@param g {Float}\n@param b {Float}\n*/\n\n/**\n@method getHex\n@return Integer\n*/\n\n/**\n@method getHexString\n@return String\n*/\n\n/**\n Sets this color from a hexadecimal value.\n@method setHex\n@return Color\n@param hex {Integer}\n*/\n\n/**\n Sets this color from a CSS-style string. For example, \"rgb(250, 0,0)\", \"rgb(100%, 0%, 0%)\", \"hsl(0, 100%, 50%)\", \"#ff0000\", \"#f00\", or \"red\". Transluent colors such as \"rgba(255, 0, 0, 0.5)\" and \"hsla(0, 100%, 50%, 0.5)\" are also accepted, but the alpha-channel coordinate will be discarded.\n@method setStyle\n@return Color\n@param style {String}\n*/\n\n/**\n@method getStyle\n@return String\n*/\n\n/**\n Sets color from hsl\n@method setHSL\n@return Color\n@param h {Float}\n@param s {Float}\n@param l {Float}\n*/\n\n/**\n@method offsetHSL\n@return Color\n@param h {Float}\n@param s {Float}\n@param l {Float}\n*/\n\n/**\n@method add\n@return Color\n@param color {Color}\n*/\n\n/**\n@method addColors\n@return Color\n@param color1 {Color}\n@param color2 {Color}\n*/\n\n/**\n@method addScalar\n@return Color\n@param s {Number}\n*/\n\n/**\n@method multiply\n@return Color\n@param color {Color}\n*/\n\n/**\n@method multiplyScalar\n@return Color\n@param s {Number}\n*/\n\n/**\n Linear interpolation of this colors rgb values and the rgb values of the first argument. The alpha argument can be thought of as the percent between the two colors, where 0 is this color and 1 is the first argument.\n@method lerp\n@return Color\n@param color {Color}\n*/\n\n/**\n Returns an array [r,g,b\n@method toArray\n@return Array\n@param array {Array}\n*/\n\n/**\n@method equals\n@return Color\n@param c {Color}\n*/\n\n/**\n@method clone\n@return Color\n*/\n\n\n}\n\n/**\n* Color.green, a green Color Object\n* @property green {Color}\n* @static\n*/\nColor.green = new Color(0.0, 1.0, 0.0);\n/**\n* Color.blue, a blue Color Object\n* @property blue {Color}\n* @static\n*/\nColor.blue = new Color(0.0, 0.0, 1.0);\n/**\n* Color.red, a red Color Object\n* @property red {Color}\n* @static\n*/\nColor.red = new Color(1.0, 0.0, 0.0);\n/**\n* Color.white, a white Color Object\n* @property white {Color}\n* @static\n*/\nColor.white = new Color(1.0, 1.0, 1.0);\n/**\n* Color.darkGray, a darkGray Color Object\n* @property darkGray {Color}\n* @static\n*/\nColor.darkGray = new Color(0.3, 0.3, 0.3);\n/**\n* Color.gray, a gray Color Object\n* @property gray {Color}\n* @static\n*/\nColor.gray = new Color(0.5, 0.5, 0.5);\n/**\n* Color.lightGray, a lightGray Color Object\n* @property lightGray {Color}\n* @static\n*/\nColor.lightGray = new Color(0.8, 0.8, 0.8);\n/**\n* Color.black, a black Color Object\n* @property black {Color}\n* @static\n*/\nColor.black = new Color(0.0, 0.0, 0.0);\n\n/**\n * Color.cyan, a cyan Color Object\n * @property cyan {Color}\n * @static\n */\nColor.cyan = new Color(0, 1, 1);\n\n/**\n * Color.magenta, a magenta Color Object\n * @property magenta {Color}\n * @static\n */\nColor.magenta = new Color(1, 0, 1);\n\n/**\n * Color.yellow, a yellow Color Object\n * @property yellow {Color}\n * @static\n */\nColor.yellow = new Color(1, 1, 0);\n\n\n/**\n * Color.lightRed, a lightRed Color Object\n * @property lightRed {Color}\n * @static\n */\nColor.lightRed = new Color(1, 0.5, 0.5);\n\n/**\n * Color.lightGreen, a lightGreen Color Object\n * @property lightGreen {Color}\n * @static\n */\nColor.lightGreen = new Color(0.5, 1, 0.5);\n\n/**\n * Color.lightBlue, a lightBlue Color Object\n * @property lightBlue {Color}\n * @static\n */\nColor.lightBlue = new Color(0.5, 0.5, 1);\n\nColor.mobilizing = new Color(60/255, 30/255, 1);\nColor.mobilizingDark = new Color(36/255, 18/255, 153/255);\nColor.mobilizingLight = new Color(208/255, 202/255, 247/255);\nColor.mobilizingAlternate = new Color(255/255, 158/255, 116/255);\n\n/**\n* Color.transparent, a transparent Color Object\n* @property transparent {Color}\n* @static\n*/\nColor.transparent = new Color(new Color().makeRGBAStringWithAlpha(0));\n\n//module exports\nexport { Color };\n","import * as THREE from 'three';\n\n/**\n * Euler class (deprecated ?)\n *\n * This class extends the one from Three.js, API available here : http://threejs.org/docs/#Reference/Math/Euler\n * @class Euler\n */\n\nclass Euler extends THREE.Euler\n{\n}\n\n// module exports\nexport { Euler };\n","import * as THREE from 'three';\n\n/**\n * Matrix3 class\n *\n * This class extends the one from Three.js, API available here : http://threejs.org/docs/#Reference/Math/Matrix3\n * @class Matrix3\n**/\n\nclass Matrix3 extends THREE.Matrix3\n{\n}\n\n/**\n@method transpose\n@return Matrix3\n*/\n\n/**\n Transposes this matrix into the supplied array, and returns itself unchanged.\n@method transposeIntoArray\n@return Matrix3\n@param array {Array}\n*/\n\n/**\n@method determinant\n@return Float\n*/\n\n/**\n Sets the 3x3 matrix values to the given row-major sequence of values.\n@method set\n@return Matrix3\n@param n11 {Float}\n@param n12 {Float}\n@param n13 {Float}\n@param n21 {Float}\n@param n22 {Float}\n@param n23 {Float}\n@param n31 {Float}\n@param n32 {Float}\n@param n33 {Float}\n*/\n\n/**\n Multiplies every component of the matrix by the scalar value *s*.\n@method multiplyScalar\n@return Matrix3\n@param s {Float}\n*/\n\n/**\n Multiplies (applies) this matrix to every vector3 in the array.\n@method applyToVector3Array\n@return Array\n@param array {Array}\n*/\n\n/**\n Sets this matrix as the normal matrix (upper left 3x3)of the passed Matrix4 matrix4. The normal matrix is the inverse transpose of the matrix *m*.\n@method getNormalMatrix\n@return Matrix3\n@param m {Matrix4}\n*/\n\n/**\n Set this matrix to the inverse of the passed matrix.\n@method getInverse\n@return Matrix3\n@param m {Matrix4}\n@param throwOnDegenerate {Boolean}\n*/\n\n/**\n Copies the values of matrix *m* into this matrix.\n@method copy\n@return Matrix3\n@param m {Matrix3}\n*/\n\n/**\n@method clone\n@return Matrix3\n*/\n\n// module exports\nexport { Matrix3 };\n","import * as THREE from 'three';\n\n/**\n * Matrix4 class\n *\n * This class extends the one from Three.js, API available here : http://threejs.org/docs/#Reference/Math/Matrix4\n * @class Matrix4\n**/\n\nclass Matrix4 extends THREE.Matrix4\n{\n}\n\n\n/**\n@method set\n@return Matrix4\n@param n11 {Float}\n@param n12 {Float}\n@param n13 {Float}\n@param n14 {Float}\n@param n21 {Float}\n@param n22 {Float}\n@param n23 {Float}\n@param n24 {Float}\n@param n31 {Float}\n@param n32 {Float}\n@param n33 {Float}\n@param n34 {Float}\n@param n41 {Float}\n@param n42 {Float}\n@param n43 {Float}\n@param n44 {Float}\n*/\n\n/**\n@method identity\n@return Matrix4\n*/\n\n/**\n@method copy\n@return Matrix4\n@param m {Matrix4}\n*/\n\n/**\n@method copyPosition\n@return Matrix4\n@param m {Matrix4}\n*/\n\n/**\n@method makeBasis\n@return Matrix4\n@param xAxis {Vector3}\n@param yAxis {Vector3}\n@param zAxis {Vector3}\n*/\n\n/**\n@method extractBasis\n@return Matrix4\n@param xAxis {Vector3}\n@param yAxis {Vector3}\n@param zAxis {Vector3}\n*/\n\n/**\n@method extractRotation\n@return Matrix4\n@param m {Matrix4}\n*/\n\n/**\n@method lookAt\n@return Matrix4\n@param eye {Vector3}\n@param center {Vector3}\n@param up {Vector3}\n*/\n\n/**\n@method multiply\n@return Matrix4\n@param m {Matrix4}\n*/\n\n/**\n@method multiplyMatrices\n@return Matrix4\n@param a {Matrix4}\n@param b {Matrix4}\n*/\n\n/**\n@method multiplyToArray\n@return Matrix4\n@param a {Matrix4}\n@param b {Matrix4}\n@param r {Array}\n*/\n\n/**\n@method multiplyScalar\n@return Matrix4\n@param s {Float}\n*/\n\n/**\n@method determinant\n@return Float\n*/\n\n/**\n@method transpose\n@return Matrix4\n*/\n\n/**\n@method flattenToArrayOffset\n@return Array\n@param flat {Array}\n@param offset {Integer}\n*/\n\n/**\n@method setPosition\n@return Matrix4\n@param v {Vector3}\n*/\n\n/**\n@method getInverse\n@return Matrix4\n@param m {Matrix4}\n*/\n\n/**\n Sets the rotation submatrix of this matrix to the rotation specified by Euler angles, the rest of the matrix is identity. Default order is *\"XYZ\"*.\n@method makeRotationFromEuler\n@return Matrix4\n@param euler {Euler}\n*/\n\n/**\n@method makeRotationFromQuaternion\n@return Matrix4\n@param q {Quaternion}\n*/\n\n/**\n@method scale\n@return Matrix4\n@param v {Vector3}\n*/\n\n/**\n@method compose\n@return Matrix4\n@param translation {Vector3}\n@param quaternion {Quaternion}\n@param scale {Vector3}\n*/\n\n/**\n@method decompose\n@return Array\n@param translation {Vector3}\n@param quaternion {Quaternion}\n@param scale {Vector3}\n*/\n\n/**\n@method makeTranslation\n@return Matrix4\n@param x {Float}\n@param y {Float}\n@param z {Float}\n*/\n\n/**\n Sets this matrix as rotation transform around x axis by *theta* radians.\n@method makeRotationX\n@return Matrix4\n@param theta {Float}\n*/\n\n/**\n Sets this matrix as rotation transform around y axis by *theta* radians.\n@method makeRotationY\n@return Matrix4\n@param theta {Float}\n*/\n\n/**\n Sets this matrix as rotation transform around z axis by *theta* radians.\n@method makeRotationZ\n@return Matrix4\n@param theta {Float}\n*/\n\n/**\n Sets this matrix as rotation transform around *axis* by *angle* radians. Based on [link:http://www.gamedev.net/reference/articles/article1199.asp.\n@method makeRotationAxis\n@return Matrix4\n@param axis {Vector3}\n@param theta {Float}\n*/\n\n/**\n@method makeScale\n@return Matrix4\n@param x {Float}\n@param y {Float}\n@param z {Float}\n*/\n\n/**\n@method makeFrustum\n@return Matrix4\n@param left {Float}\n@param right {Float}\n@param bottom {Float}\n@param top {Float}\n@param near {Float}\n@param far {Float}\n*/\n\n/**\n@method makePerspective\n@return Matrix4\n@param fov {Float}\n@param aspect {Float}\n@param near {Float}\n@param far {Float}\n*/\n\n/**\n@method makeOrthographic\n@return Matrix4\n@param left {Float}\n@param right {Float}\n@param top {Float}\n@param bottom {Float}\n@param near {Float}\n@param far {Float}\n*/\n\n/**\n@method clone\n@return Matrix4\n*/\n\n/**\n Multiplies (applies) this matrix to every vector3 in the array.\n@method applyToVector3Array\n@return Array\n@param a {Array}\n*/\n\n// module exports\nexport { Matrix4 };","import * as THREE from 'three';\n\n/**\n * Represents a Quaternion, a way to describe a spatial rotation that is less susceptible to gimbal lock.\n *\n * This class extends the one from Three.js, API available here : http://threejs.org/docs/#Reference/Math/Quaternion\n * @class Quaternion\n */\n\nclass Quaternion extends THREE.Quaternion\n{\n}\n\n/**\n@method set\n@return Quaternion\n@param x {Float}\n@param y {Float}\n@param z {Float}\n@param w {Float}\n*/\n\n/**\n@method copy\n@return Quaternion\n@param q {Quaternion}\n*/\n\n/**\n@method setFromEuler\n@return Quaternion\n@param euler {Euler}\n*/\n\n/**\n@method setFromAxisAngle\n@return Quaternion\n@param axis {Vector3}\n@param angle {Float}\n*/\n\n/**\n@method setFromRotationMatrix\n@return Quaternion\n@param m {Matrix4}\n*/\n\n/**\n@method setFromUnitVectors\n@return Quaternion\n@param vFrom {Vector3}\n@param vTo {Vector3}\n*/\n\n/**\n@method inverse\n@return Quaternion\n*/\n\n/**\n@method length\n@return Float\n*/\n\n/**\n@method normalize\n@return Quaternion\n*/\n\n/**\n@method multiply\n@return Quaternion\n@param b {Quaternion}\n*/\n\n/**\n@method multiplyQuaternions\n@return Quaternion\n@param a {Quaternion}\n@param b {Quaternion}\n*/\n\n/**\n@method multiplyVector3\n@return Quaternion\n@param vector {Vector3}\n@param dest {Vector3}\n*/\n\n/**\n@method clone\n@return Quaternion\n*/\n\n/**\n Returns the numerical elements of this quaternion in an array of format (x, y, z, w).\n@method toArray\n@return Array\n@param array {Array}\n*/\n\n/**\n Compares each component of *v* to each component of this quaternion to determine if they represent the same rotation.\n@method equals\n@return Boolean\n@param v {Quaternion}\n*/\n\n/**\n@method lengthSq\n@return Float\n*/\n\n/**\n Sets this quaternion's component values from an array.\n@method fromArray\n@return Quaternion\n@param array {Array}\n*/\n\n/**\n@method conjugate\n@return Quaternion\n*/\n\n/**\n Handles the spherical linear interpolation between quaternions. *t* represents the amount of rotation between this quaternion (where *t* is 0) and quaternionB (where *t* is 1). This quaternion is set to the result. Also see the static version of the *slerp* below.\n@method slerp\n@return Quaternion\n@param quaternionB {Quaternion}\n@param t {float}\n*/\n\n// module exports\nexport { Quaternion };","class Rect\n{\n    /**\n    * Rect hold a simple rectangle representation with x & y coordinates and width & height.\n    *\n    * @class Rect\n    * @constructor\n    * @param {float} x\n    * @param {float} y\n    * @param {float} width\n    * @param {float} height\n    */\n    constructor(x,y, width,height)\n    {\n        this.x      = x;\n        this.y      = y;\n        this.width  = width;\n        this.height = height;\n    }\n\n    /**\n    * Return an array representation\n    * @method toArray\n    * @return {Array} [x, y, width, height]\n    */\n    toArray()\n    {\n        return [\n            this.x,\n            this.y,\n            this.width,\n            this.height\n        ];\n    }\n\n    /**\n    * Sets the rect's value based on an array formatted like [x, y, width, height]\n    * @method fromArray\n    * @param {Array} array [x, y, width, height]\n    */\n    fromArray(array)\n    {\n        this.x = array[0];\n        this.y = array[1];\n        this.width = array[2];\n        this.height = array[3];\n    }\n\n}\n\n// module exports\nexport { Rect };","import * as THREE from 'three';\n\n/**\n * Represents a 2 dimensionnal Euclidean Vector, to be used as 2D positions, 2D directions or 2D Euler angles (rotation).\n *\n * This class extends the one from Three.js, API available here : http://threejs.org/docs/#Reference/Math/Vector2\n * @class Vector2\n */\nclass Vector2 extends THREE.Vector2\n{\n\n    rotate90CW() {\n        let memX = this.x;\n        let memY = this.y;\n        this.x = memY;\n        this.y = -memX;\n    }\n\n    rotate90CCW() {\n        let memX = this.x;\n        let memY = this.y;\n        this.x = -memY;\n        this.y = memX;\n    }\n\n}\n\n/**\n* Vector2.one returns <i>new Mobilizing.Vector2(1, 1)</i>\n* @property one\n* @static\n*/\nVector2.one = new Vector2(1, 1);\n\n/**\n* Vector2.zero returns <i>new Mobilizing.Vector2(0, 0)</i>\n* @property zero\n* @static\n*/\nVector2.zero = new Vector2(0, 0);\n\n/**\n@method set\n@return Vector2\n@param x {Float}\n@param y {Float}\n*/\n\n/**\n@method copy\n@return Vector2\n@param v {Vector2}\n*/\n\n/**\n@method add\n@return Vector2\n@param v {Vector2}\n*/\n\n/**\n@method addVectors\n@return Vector2\n@param a {Vector2}\n@param b {Vector2}\n*/\n\n/**\n@method addScaledVector\n@return Vector2\n@param v {Vector2}\n@param s {Float}\n*/\n\n/**\n@method sub\n@return Vector2\n@param v {Vector2}\n*/\n\n/**\n@method subVectors\n@return Vector2\n@param a {Vector2}\n@param b {Vector2}\n*/\n\n/**\n@method multiplyScalar\n@return Vector2\n@param s {Float}\n*/\n\n/**\n@method divideScalar\n@return Vector2\n@param s {Float}\n*/\n\n/**\n@method negate\n@return Vector2\n*/\n\n/**\n@method dot\n@return Float\n@param v {Vector2}\n*/\n\n/**\n@method lengthSq\n@return Float\n*/\n\n/**\n@method length\n@return Float\n*/\n\n/**\n@method lengthManhattan\n@return Float\n*/\n\n/**\n@method normalize\n@return Vector2\n*/\n\n/**\n@method angle\n@return Float\n*/\n\n/**\n@method distanceTo\n@return Float\n@param v {Vector2}\n*/\n\n/**\n@method distanceToSquared\n@return Float\n@param v {Vector2}\n*/\n\n/**\n@method setLength\n@return Vector2\n@param l {Float}\n*/\n\n/**\n@method equals\n@return Boolean\n@param v {Vector2}\n*/\n\n/**\n@method clone\n@return Vector2\n*/\n\n/**\n If this vector's x or y value is greater than the max vector's x or y value, it is replaced by the corresponding value. If this vector's x or y value is less than the min vector's x or y value, it is replaced by the corresponding value.\n@method clamp\n@return Vector2\n@param min {Vector2}\n@param max {Vector2}\n*/\n\n/**\n If this vector's x or y values are greater than the max value, they are replaced by the max value. If this vector's x or y values are less than the min value, they are replaced by the min value.\n@method clampScalar\n@return Vector2\n@param min {Float}\n@param max {Float}\n*/\n\n/**\n@method floor\n@return Vector2\n*/\n\n/**\n@method ceil\n@return Vector2\n*/\n\n/**\n@method round\n@return Vector2\n*/\n\n/**\n@method roundToZero\n@return Vector2\n*/\n\n/**\n Linear interpolation between this vector and v, where alpha is the percent along the line.\n@method lerp\n@return Vector2\n@param v {Vector2}\n@param alpha {Float}\n*/\n\n/**\n Sets this vector to be the vector linearly interpolated between *v1* and *v2* with *alpha* factor.\n@method lerpVectors\n@return Vector2\n@param v1 {Vector2}\n@param v2 {Vector2}\n@param alpha {Float}\n*/\n\n/**\n if index equals 0 method replaces this.x with value. if index equals 1 method replaces this.y with value.\n@method setComponent\n@return undefined\n@param index {Integer}\n@param value {Float}\n*/\n\n/**\n Add the scalar value s to this vector's x and y values.\n@method addScalar\n@return Vector2\n@param s {Float}\n*/\n\n/**\n if index equals 0 returns the x value. if index equals 1 returns the y value.\n@method getComponent\n@return Float\n@param index {Integer}\n*/\n\n/**\n Sets this vector's x value to be array[0 and y value to be array[1].\n@method fromArray\n@return Vector2\n@param array {Array}\n*/\n\n/**\n Returns an array [x, y]\n@method toArray\n@return Array\n@param array {Array}\n*/\n\n/**\n If this vector's x or y value is greater than v's x or y value, replace that value with the corresponding min value.\n@method min\n@return Vector2\n@param v {Vector2}\n*/\n\n/**\n If this vector's x or y value is less than v's x or y value, replace that value with the corresponding max value.\n@method max\n@return Vector2\n@param v {Vector2}\n*/\n\n/**\n replace this vector's x value with x.\n@method setX\n@return Vector2\n@param x {Float}\n*/\n\n\n// module exports\nexport { Vector2 };","import * as THREE from 'three';\n\n/**\n * Represents a 3 dimensionnal Euclidean Vector, to be used as positions, directions or Euler angles (rotation).\n *\n * This class extends the one from Three.js, API available here : http://threejs.org/docs/#Reference/Math/Vector3\n * @class Vector3\n */\n\nclass Vector3 extends THREE.Vector3\n{\n}\n\n/**\n* Vector3.one returns <i>new Mobilizing.Vector2(1, 1, 1)</i>\n* @property one\n* @static\n*/\nVector3.one  = new Vector3(1, 1, 1);\n\n/**\n* Vector3.one returns <i>new Mobilizing.Vector2(0, 0, 0)</i>\n* @property zero\n* @static\n*/\nVector3.zero = new Vector3(0, 0, 0);\n\n/**\n@method set\n@return Vector3\n@param x {Float}\n@param y {Float}\n@param z {Float}\n*/\n\n/**\n@method setX\n@return Vector3\n@param x {Float}\n*/\n\n/**\n@method setY\n@return Vector3\n@param y {Float}\n*/\n\n/**\n@method setZ\n@return Vector3\n@param z {Float}\n*/\n\n/**\n@method copy\n@return Vector3\n@param v {Vector3}\n*/\n\n/**\n@method add\n@return Vector3\n@param v {Vector3}\n*/\n\n/**\n@method addVectors\n@return Vector3\n@param a {Vector3}\n@param b {Vector3}\n*/\n\n/**\n@method addScaledVector\n@return Vector3\n@param v {Vector3}\n@param s {Float}\n*/\n\n/**\n@method sub\n@return Vector3\n@param v {Vector3}\n*/\n\n/**\n@method subVectors\n@return Vector3\n@param a {Vector3}\n@param b {Vector3}\n*/\n\n/**\n@method multiplyScalar\n@return Vector3\n@param s {Float}\n*/\n\n/**\n@method divideScalar\n@return Vector3\n@param s {Float}\n*/\n\n/**\n@method negate\n@return Vector3\n*/\n\n/**\n@method dot\n@return Float\n@param v {Vector3}\n*/\n\n/**\n@method lengthSq\n@return Float\n*/\n\n/**\n@method length\n@return Float\n*/\n\n/**\n@method lengthManhattan\n@return Float\n*/\n\n/**\n@method normalize\n@return Vector3\n*/\n\n/**\n@method distanceTo\n@return Float\n@param v {Vector3}\n*/\n\n/**\n@method distanceToSquared\n@return Float\n@param v {Vector3}\n*/\n\n/**\n@method setLength\n@return Vector3\n@param l {Float}\n*/\n\n/**\n@method cross\n@return Vector3\n@param v {Vector3}\n*/\n\n/**\n@method crossVectors\n@return Vector3\n@param a {Vector3}\n@param b {Vector3}\n*/\n\n/**\n@method setFromMatrixPosition\n@return Vector3\n@param m {Matrix4}\n*/\n\n/**\n@method setFromMatrixScale\n@return Vector3\n@param m {Matrix4}\n*/\n\n/**\n@method equals\n@return Boolean\n@param v {Vector3}\n*/\n\n/**\n@method clone\n@return Vector3\n*/\n\n/**\n If this vector's x, y or z value is greater than the max vector's x, y or z value, it is replaced by the corresponding value. If this vector's x, y or z value is less than the min vector's x, y or z value, it is replaced by the corresponding value.\n@method clamp\n@return Vector3\n@param min {Vector3}\n@param max {Vector3}\n*/\n\n/**\n If this vector's x, y or z values are greater than the max value, they are replaced by the max value. If this vector's x, y or z values are less than the min value, they are replaced by the min value.\n@method clampScalar\n@return Vector3\n@param min {Float}\n@param max {Float}\n*/\n\n/**\n@method floor\n@return Vector3\n*/\n\n/**\n@method ceil\n@return Vector3\n*/\n\n/**\n@method round\n@return Vector3\n*/\n\n/**\n@method roundToZero\n@return Vector3\n*/\n\n/**\n Multiplies this vector times a 3 x 3 matrix.\n@method applyMatrix3\n@return Vector3\n@param m {Matrix3}\n*/\n\n/**\n Multiplies this vector by 4 x 3 subset of a Matrix4.\n@method applyMatrix4\n@return Vector3\n@param m {Matrix3}\n*/\n\n/**\n Projects this vector onto a plane by subtracting this vector projected onto the plane's normal from this vector.\n@method projectOnPlane\n@return Vector3\n@param planeNormal {Vector3}\n*/\n\n/**\n Projects this vector onto another vector.\n@method projectOnVector\n@return Vector3\n*/\n\n/**\n Adds a s to this vector.\n@method addScalar\n@return Vector3\n*/\n\n/**\n Divides this vector by vector v.\n@method divide\n@return Vector3\n@param v {Vector3}\n*/\n\n/**\n If this vector's x, y, or z value is greater than vector v's x, y, or z value, that value is replaced by the corresponding vector v value.\n@method min\n@return Vector3\n@param v {Vector3}\n*/\n\n/**\n If this vector's x, y, or z value is less than vector v's x, y, or z value, that value is replaced by the corresponding vector v value.\n@method max\n@return Vector3\n@param v {Vector3}\n*/\n\n/**\n If index equals 0 the method sets this vector's x value to value If index equals 1 the method sets this vector's y value to value If index equals 2 the method sets this vector's z value to value\n@method setComponent\n@return Vector3\n@param index {Integer}\n@param value {Float}\n*/\n\n/**\n Transforms the direction of this vector by a matrix (a 3 x 3 subset of a Matrix4) and then normalizes the result.\n@method transformDirection\n@return Vector3\n@param m {Matrix4}\n*/\n\n/**\n Sets this vector equal to the result of multiplying vector a by vector b.\n@method multiplyVectors\n@return Vector3\n@param a {Vector3}\n@param b {Vector3}\n*/\n\n/**\n Returns the value of the vector component x, y, or z by an index. Index 0: x Index 1: y Index 2: z\n@method getComponent\n@return Float\n@param index {Integer}\n*/\n\n/**\n Applies a rotation specified by an axis and an angle to this vector.\n@method applyAxisAngle\n@return Vector3\n@param axis {Vector3}\n@param angle {Float}\n*/\n\n/**\n Linear Interpolation between this vector and vector v, where alpha is the percent along the line.\n@method lerp\n@return Vector3\n@param v {Vector3}\n@param alpha {Float}\n*/\n\n/**\n Sets this vector to be the vector linearly interpolated between *v1* and *v2* with *alpha* factor.\n@method lerpVectors\n@return Vector3\n@param v1 {Vector3}\n@param v2 {Vector3}\n@param alpha {Float}\n*/\n\n/**\n Returns the angle between this vector and vector v in radians.\n@method angleTo\n@return Float\n@param v {Vector3}\n*/\n\n/**\n Sets this vector's x, y, and z equal to the column of the matrix specified by the index.\n@method setFromMatrixColumn\n@return Vector3\n@param index {Integer}\n@param matrix {Matrix4}\n*/\n\n/**\n Reflect incident vector off of plane orthogonal to normal. normal is assumed to have unit length.\n@method reflect\n@return Vector3\n@param normal {Vector3}\n*/\n\n/**\n Sets the vector's components based on an array formatted like [x, y, z\n@method fromArray\n@return Vector3\n@param array {Array}\n*/\n\n/**\n Multipies this vector by vector v.\n@method multiply\n@return Vector3\n@param v {Vector3}\n*/\n\n/**\n Multiplies this vector and m, and divides by perspective.\n@method applyProjection\n@return Vector3\n@param m {Matrix4}\n*/\n\n/**\n Assigns this vector's x value to array[0. Assigns this vector's y value to array[1]. Assigns this vector's z value to array[2]. Returns the created array.\n@method toArray\n@return Array\n@param array {Array}\n*/\n\n/**\n Applies euler transform to this vector by converting the Euler obect to a [page:Quaternion] and applying.\n@method applyEuler\n@return Vector3\n@param euler {Euler}\n*/\n\n/**\n Applies a Quaternion transform to this vector.\n@method applyQuaternion\n@return Vector3\n@param quaternion {Quaternion}\n*/\n\n/**\n Projects the vector with the camera.\n@method project\n@return Vector3\n@param camera {Camera}\n*/\n\n// module exports\nexport { Vector3 };","/**\n * Math class gives easy access to some basics calculations that are frequently used in interactive computer graphics\n *\n * @class Math\n * @example\n *     Mobilizing.Math.map(10, 0,20, -10,10);\n */\n\nclass _Math\n{\n\n    /**\n     * Generates a random number between 2 float values\n     * @method randomFromTo\n     * @static\n     * @param {float} from\n     * @param {float} to\n     */\n    static randomFromTo(from, to) {\n        return Math.random() * (to - from) + from;\n    }\n\n    /**\n     * Maps a number between 2 sets of float values\n     * @method map\n     * @static\n     * @param {float} value the value to map\n     * @param {float} low1 the 1st origin value\n     * @param {float} high1 the 2nd destination value\n     * @param {float} low2 the 1st destination value\n     * @param {float} high2\n     */\n    static map(value, low1, high1, low2, high2) {\n        return low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n    }\n\n    /**\n     * Converts degrees to radians\n     * @static\n     * @method degToRad\n     * @param {float} val\n     */\n    static degToRad(val){\n        var degreeToRadiansFactor = Math.PI / 180;\n        return val * degreeToRadiansFactor;\n    }\n\n    /**\n     * Converts radians to degrees\n     * @static\n     * @method radToDeg\n     * @param {float} val\n     */\n    static radToDeg(val){\n        var radianToDegreesFactor = 180 / Math.PI ;\n        return val * radianToDegreesFactor;\n    }\n\n    /**\n     * Calculates the distance between two 2D points\n     * @static\n     * @method dist\n     * @param {float} x1\n     * @param {float} y1\n     * @param {float} x2\n     * @param {float} y2\n     */\n    static dist(x1,y1, x2,y2){\n        return Math.sqrt( ((x2-x1)*(x2-x1)) + ((y2-y1)*(y2-y1)) );\n    }\n\n    /**\n     * Lerps a value to the destination value with the given amount\n     * @static\n     * @method lerp\n     * @param {float} value\n     * @param {float} dest\n     * @param {float} amount\n     */\n    static lerp(value,dest,amount){\n        return (value + (dest-value)*amount);\n    }\n\n    /**\n     * Clamp a value between a minimum and a maximum\n     * @static\n     * @method clamp\n     * @param {Number} value\n     * @param {Number} min\n     * @param {Number} max\n     */\n    static clamp(value, min, max){\n        return (Math.min(max, Math.max(min, value)));\n    }\n\n    /**\n     * Finds if a point is inside an array of vertices\n     * @static\n     * @method pointIsInside\n     * @param {Number} x\n     * @param {Number} y\n     * @param {Vector2 Array} points vertices {x,y}\n     */\n    static pointIsInside(x,y, points)\n    {\n        let i, j = points.length - 1;\n        let oddNodes = false;\n\n        for ( i=0; i < points.length; i++ )\n        {\n            if (points[i].y < y && points[j].y >= y ||\n                points[j].y < y && points[i].y >= y)\n            {\n                if (points[i].x + (y - points[i].y) / (points[j].y - points[i].y) * (points[j].x - points[i].x) < x)\n                {\n                    oddNodes = !oddNodes;\n                }\n            }\n            j=i;\n        }\n\n        return oddNodes;\n    }\n\n    static intersectionPoint(line1, line2)\n    {\n        let a1 = line1[1].x - line1[0].x;\n        let b1 = line2[0].x - line2[1].x;\n        let c1 = line2[0].x - line1[0].x;\n\n        let a2 = line1[1].y - line1[0].y;\n        let b2 = line2[0].y - line2[1].y;\n        let c2 = line2[0].y - line1[0].y;\n\n        \n        let t;\n        //treat special case : points are on the same lines!\n        if(b1*c2 === 0 && b2*c1 === 0 && a2*b1  === 0 && a1*b2  === 0)\n        {\n            t = 0;\n        }\n        else\n        {\n            t = (b1*c2 - b2*c1) / (a2*b1 - a1*b2); \n        }\n\n\n        return {\n            x: line1[0].x + t * (line1[1].x - line1[0].x),\n            y: line1[0].y + t * (line1[1].y - line1[0].y)\n        };\n    }\n\n}\n\n// module exports\nexport { _Math };\n","/**\n* Log a message into the console or redirect it to the provided label if Mobilizing.debug === true\n* @static\n* @method Log\n* @param {String} message\n* @param {String} type\n* @param {Label} label\n*/\n\nvar _debugEnabled = window.location.search.search(\"[?&]debug(=([^&#]*)|&|#|$)\") > -1;\n\nclass Debug\n{\n\n    constructor(label){\n        this.label = label;\n    }\n\n    log(){\n        if( this.doLog() ){\n            console.log.apply(console, arguments);\n        }\n    }\n\n    warn(){\n        if( this.doLog() ){\n            console.warn.apply(console, arguments);\n        }\n    }\n\n    info(){\n        if( this.doLog() ){\n            console.info.apply(console, arguments);\n        }\n    }\n\n    error(){\n        if( this.doLog() ){\n            console.error.apply(console, arguments);\n        }\n    }\n\n    doLog(){\n        return this.label || _debugEnabled;\n    }\n\n}\n\nvar debug = new Debug();\n\n// module exports\nexport { Debug, debug };","import {_Math} from '../helpers/Math';\nimport {debug} from '../helpers/Debug';\nimport {Component} from '../Component';\nimport {getOrDefault} from '../helpers/Misc';\n\nclass Time extends Component\n{\n    /**\n    * The Time class provides methods to control time related operations. One instance of this Component is created internnaly by the Context. It makes it possible to access and to use a global time in Components that require it (i.e Touch, Animation, etc.). In users script, this global Time can be accessed via the context.\n    * \n    * @example\n    *    //TODO\n    *\n    * @class Time\n    * @constructor\n    */\n    constructor(params)\n    {\n        super(params);\n\n        this._startTime = getOrDefault(params, \"startTime\", new Date().getTime());\n        this._timeScale = getOrDefault(params, \"scale\",1);\n\n        this._currentTime = new Date().getTime();\n        this._deltaTime = 0;\n    }\n\n    /*setup()\n    {\n        super.setup();\n    }*/\n\n    /**\n    * Start the Time\n    * @method on\n    */\n    on()\n    {\n        super.on();\n        this.reset();\n    }\n\n    /**\n    * Pause the Time\n    * @method off\n    */\n    /*off()\n    {\n        super.off();\n    }*/\n\n    /**\n    * resets this time instance\n    * \n    * @method reset\n    */\n    reset()\n    {\n        this._startTime = new Date().getTime();\n    }\n\n    /**\n    * updates this time instance\n    * \n    * @method update\n    */\n    update()\n    {\n        if(this.getStatus())//the component must be on, else we \"stop\" the time\n        {\n            let lastTime = this._currentTime;\n            this._currentTime = new Date().getTime();\n            this._deltaTime = (this._currentTime - lastTime)/1000 * this._timeScale;\n        }\n    }\n\n    /**\n    * absolute Delta\n    * \n    * @method getAbsoluteDelta\n    * @return {Number} absolute Delta\n    */\n    getAbsoluteDelta()\n    {\n        return this._currentTime - this._startTime;\n    }\n    /**\n    * Set the current timeScale, useful to slower time down\n    * \n    * @method setTimeScale\n    * @param {Number} scale\n    */\n    setTimeScale(scale)\n    {\n        this._timeScale = scale;\n    }\n\n    /**\n    * Get the current timeScale\n    * \n    * @method getTimeScale\n    * @return {Number} scale\n    */\n    getTimeScale()\n    {\n        return this._timeScale;\n    }\n\n    /**\n    * Get the current timeDelta (difference of time between 2 frames) at the current timeScale\n    * \n    * @method getDelta\n    * @return {Number} the current timeDelta at the current timeScale\n    */\n    getDelta()\n    {\n        return this._deltaTime;\n    }\n\n    /**\n    * Gets the current Time object's time\n    * \n    * @method getTime\n    * @return {Number} the current time\n    */\n    getTime()\n    {\n        return this._currentTime;\n    }\n\n}\n\n// module exports\nexport { Time };\n","import {_Math} from './Math';\nimport {Time} from '../time/Time';\nimport {Component} from '../Component';\nimport {getOrDefault} from '../helpers/Misc';\nimport {debug} from './Debug';\n\n/**\n * Fired when the animation starts\n * @event start\n * @param {Object} target The target object\n */\nconst EVT_START = 'start';\n\n/**\n * Fired each time the animation is updated\n * @event update\n * @param {Object} target The target object\n */\nconst EVT_UPDATE = 'update';\n\n/**\n * Fired when each time the animation is repeated once it reached the end if repeat is greater than 1\n * @event restart\n * @param {Object} target The target object\n * @param {Number} direction The current direction\n */\nconst EVT_RESTART = 'restart';\n\n/**\n * Fired when the animation is stopped\n * @event stop\n * @param {Object} target The target object\n */\nconst EVT_STOP = 'stop';\n\n/**\n * Fired when the animation is resumed\n * @event resume\n * @param {Object} target The target object\n */\nconst EVT_RESUME = 'resume';\n\n/**\n * Fired when the animation reaches the end and no repetition is pending\n * @event finish\n * @param {Object} target The target object\n */\nconst EVT_FINISH = 'finish';\n\n\nclass Animation extends Component\n{\n    /**\n    * The Animation class provides a simple way to tween object properties\n    * \n    * @example\n    *    //TODO\n    *\n    * @class Animation\n    * @constructor\n    * @param {Object} params The parameters object\n    * @param {Object} params.target The object whose propoerties are to be animated\n    * @param {Object} [params.from] An object indicating the start values of the properties to animate, defaults to the values of the target\n    * @param {Object} params.to An object indicating the finish values of the properties to animate\n    * @param {Number} params.duration The animation duration in milliseconds\n    * @param {Function} [params.easing=Animation.Easing.linear] An easing function to use\n    * @param {Number} [params.repeat=0] The number of times the animation should be repeated, set to Infinity to repeat indefinately\n    * @param {Boolean} [params.yoyo=false] If set to true and repeat is greater than 1, the animation will play in reverse once it reached the end\n    * @param {Number} [params.delay=0] The number of milliseconds to wait for before starting the animation\n    * @param {Time} [params.time] The Time instance to use for this Animation Component\n    * @param {Function} [params.onStart] A callback to be called when the animation starts\n    * @param {Function} [params.onUpdate] A callback to be called each time the animation is updated\n    * @param {Function} [params.onRestart] A callback to be called each time the animation is repeated once it reached the end if repeat is greater than 1\n    * @param {Function} [params.onStop] A callback to be called when the animation is stopped\n    * @param {Function} [params.onResume] A callback to be called when the animation is resumed\n    * @param {Function} [params.onFinish] A callback to be called when the animation reaches the end and no repetition is pending\n    */\n    constructor(params)\n    {\n        super(params);\n\n        this._target = params.target;\n        this._from = getOrDefault(params, \"from\", null);\n        this._to = params.to;\n        this._duration = params.duration;\n        this._easing = getOrDefault(params, \"easing\", Animation.Easing.linear);\n        this._repeat = getOrDefault(params, \"repeat\", 0);\n        this._yoyo = getOrDefault(params, \"yoyo\", false);\n        this._delay = getOrDefault(params, \"delay\", 0);\n        this._time = new Time();\n\n        this._timesPlayed = 0;\n        this._direction = 1;\n\n        let onStart = getOrDefault(params, \"onStart\", null);\n        let onUpdate = getOrDefault(params, \"onUpdate\", null);\n        let onRestart = getOrDefault(params, \"onRestart\", null);\n        let onStop = getOrDefault(params, \"onStop\", null);\n        let onResume = getOrDefault(params, \"onResume\", null);\n        let onFinish = getOrDefault(params, \"onFinish\", null);\n\n        // bind custom callbacks to events\n        if(onStart){\n            this.events.on(EVT_START, onStart);\n        }        \n        if(onUpdate){\n            this.events.on(EVT_UPDATE, onUpdate);\n        }        \n        if(onRestart){\n            this.events.on(EVT_RESTART, onRestart);\n        }        \n        if(onStop){\n            this.events.on(EVT_STOP, onStop);\n        }        \n        if(onResume){\n            this.events.on(EVT_RESUME, onResume);\n        }        \n        if(onFinish){\n            this.events.on(EVT_FINISH, onFinish);\n        }\n\n    }\n\n    /**\n    * Setup\n    * \n    * @method setup\n    */\n    setup()\n    {\n        let context = this.getContext();\n\n        context.addComponent(this._time);\n        this._time.setup();\n        this._time.on();\n\n        this._isPlaying = false;\n\n    }\n\n    /**\n    * Play the animation\n    *\n    * @method play\n    */\n    play()\n    {        \n        this._isPlaying = true;\n        this._time.reset();\n\n        if(!this._from){            \n            // fill in the start values from the target\n            this._from = {};\n            for(let prop in this._to){\n                this._from[prop] = this._target[prop];\n            }\n        }\n\n        this.events.trigger(EVT_START, this._target);\n    }\n\n    /**\n    * Stop the animation\n    *\n    * @method stop\n    */\n    stop()\n    {        \n        this._isPlaying = false;\n\n        this.events.trigger(EVT_STOP, this._target);\n    }\n\n    /**\n    * Resume the animation\n    *\n    * @method resume\n    */\n    resume()\n    {\n\n    }\n\n    /**\n    * Rewind the animation back to its starting values\n    *\n    * @method rewind\n    */\n    rewind()\n    {\n        this.update(0);\n    }\n\n    /**\n    * Update the properties according to the elapsed time\n    * \n    * @method update\n    */\n    update(time)\n    {\n        if(!this._isPlaying){\n            return;\n        }\n\n        let t = (time !== undefined ? time : (this._time.getAbsoluteDelta())) / this._duration;\n\n        if(t >= 1){\n            for(let prop in this._from){\n                this._target[prop] = this._to[prop];\n            }\n\n            if(this._timesPlayed++ < this._repeat){\n                if(this._yoyo){\n                    this._direction *= -1;\n                }\n                this._time.reset();\n\n                this.events.trigger(EVT_RESTART, this._target, this._direction);\n            }\n            else{\n                this._isPlaying = false;\n                this.events.trigger(EVT_FINISH, this._target);\n            }\n        }\n        else{\n            for(let prop in this._from){\n                if(this._direction < 1){\n                    this._target[prop] = _Math.map(this._easing(t), 0, 1, this._to[prop], this._from[prop]);\n                }\n                else{\n                    this._target[prop] = _Math.map(this._easing(t), 0, 1, this._from[prop], this._to[prop]);\n                }\n            }\n\n            this.events.trigger(EVT_UPDATE, this._target);\n        }\n    }\n\n    /**\n    * Chain another animation once this one is finished\n    * \n    * @method chain\n    */\n    chain(animation)\n    {\n        this.events.on(EVT_FINISH, function(){\n            animation.play();\n        });\n    }\n\n};\n\n// credit: https://gist.github.com/gre/1650294\nAnimation.Easing = {\n    \"linear\": function(t){\n        return t;\n    },\n    \"easeInQuad\": function(t){\n        return Math.pow(t, 2);\n    },\n    \"easeOutQuad\": function(t){\n        return 1 - Math.abs(Math.pow(t-1, 2));\n    },\n    \"easeInOutQuad\": function(t){\n        if (t < 0.5) {\n            return Animation.Easing.easeInQuad(t*2) / 2;\n        }\n        return Animation.Easing.easeOutQuad(t*2 - 1) / 2 + 0.5;\n    },\n    \"easeInCubic\": function(t){\n        return Math.pow(t, 3);\n    },\n    \"easeOutCubic\": function(t){\n        return 1 - Math.abs(Math.pow(t-1, 3));\n    },\n    \"easeInOutCubic\": function(t){\n        if (t < 0.5) {\n            return Animation.Easing.easeInCubic(t*2) / 2;\n        }\n        return Animation.Easing.easeOutCubic(t*2 - 1) / 2 + 0.5;\n    },\n    \"easeInQuart\": function(t){\n        return Math.pow(t, 4);\n    },\n    \"easeOutQuart\": function(t){\n        return 1 - Math.abs(Math.pow(t-1, 4));\n    },\n    \"easeInOutQuart\": function(t){\n        if (t < 0.5) {\n            return Animation.Easing.easeInQuart(t*2) / 2;\n        }\n        return Animation.Easing.easeOutQuart(t*2 - 1) / 2 + 0.5;\n    },\n    \"easeInQuint\": function(t){\n        return Math.pow(t, 5);\n    },\n    \"easeOutQuint\": function(t){\n        return 1 - Math.abs(Math.pow(t-1, 5));\n    },\n    \"easeInOutQuint\": function(t){\n        if (t < 0.5) {\n            return Animation.Easing.easeInQuint(t*2) / 2;\n        }\n        return Animation.Easing.easeOutQuint(t*2 - 1) / 2 + 0.5;\n    },\n    \"easeInSin\": function (t){\n        return 1 + Math.sin(Math.PI / 2 * t - Math.PI / 2);\n    },\n    \"easeOutSin\": function (t){\n        return Math.sin(Math.PI / 2 * t);\n    },\n    \"easeInOutSin\": function (t){\n        return (1 + Math.sin(Math.PI * t - Math.PI / 2)) / 2;\n    },\n    \"easeInElastic\": function (t){\n        return (.04 - .04 / t) * Math.sin(25 * t) + 1;\n    },\n    \"easeOutElastic\": function (t){\n        return .04 * t / (--t) * Math.sin(25 * t);\n    },\n    \"easeInOutElastic\": function (t){\n        if((t -= .5) < 0) {\n            return (.01 + .01 / t) * Math.sin(50 * t);\n        } else {\n            return (.02 - .01 / t) * Math.sin(50 * t) + 1;\n        }\n    },\n    \"easeInBounce\": function (t){\n        return 1 - Animation.Easing.easeOutBounce(1 - t);\n    },\n    \"easeOutBounce\": function (t){\n        if(t < (1 / 2.75)) {\n            return 7.5625 * t * t;\n        } else if (t < (2 / 2.75)) {\n            return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n        } else if (t < (2.5 / 2.75)) {\n            return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n        } else {\n            return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n        }\n    },\n    \"easeInOutBounce\": function (t){\n        if(t < 0.5) {\n            return Animation.Easing.easeInBounce(t * 2) * 0.5;\n        }\n        return Animation.Easing.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n\n};\n\n// module exports\nexport { Animation };\n","import {getOrDefault} from '../helpers/Misc';\nimport {debug} from '../helpers/Debug';\n\nclass Material\n{\n    /**\n     * A material will give color and some effect to the surface of the 3D object.\n     * Mobilizing.js is heavily based on the one of Three.js http://threejs.org/docs/#Reference/Materials/Material and its variations\n     *\n     * @class Material\n     * @constructor\n     * @param {Object} params an object containing all the possible parameters for this class. Use it like in the following example. Possible parameters are lisited below.\n     * @example\n     *     //this is how to use a parameters object in order to instanciate a Mobilizing.js object\n     *     var mobilizingObject = new Mobilizing.Class({paramName1: value, paramName2: value});\n     *\n     * @param {String} [params.type=\"basic\"] the type of the matrial, one of \"basic\", \"projectionmapping\", \"phong\", \"line\", \"sprite\"\n     */\n    constructor(params)\n    {\n        params.type = getOrDefault(params, \"type\", \"default\");\n\n        this.texture = undefined;\n\n        switch(params.type)\n        {\n            case \"basic\":\n\n                this._material = new THREE.MeshBasicMaterial( {color: 0xffffff, wireframe: false /*,overdraw: true*/ } );\n                break;\n\n            case \"custom\":\n\n                this._material = new THREE.ShaderMaterial({fragmentShader : params.fragmentShader,\n                                                           vertexShader : params.vertexShader,\n                                                           uniforms : params.uniforms});\n                //this._material.lights = true; //pass the lights uniforms\n                break;\n\n            case \"projectionmapping\":\n\n                var shader = THREE.ShaderLib[\"cube\"];\n                var uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n                shader.vertexShader = shader.vertexShader.replace(\"vWorldPosition = transformDirection( position, modelMatrix );\",\n                                                                  \"vWorldPosition = (modelMatrix * vec4( position, 0.0 )).xyz;\");\n\n                shader.fragmentShader = shader.fragmentShader.replace(\"gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\n                                                                      \"vec3 viewDir = vWorldPosition-viewPosition;  gl_FragColor = textureCube( tCube, normalize(viewDir));\");\n\n                shader.fragmentShader = shader.fragmentShader.replace(\"uniform samplerCube tCube;\",\n                                                                      \"uniform samplerCube tCube; uniform vec3 viewPosition;\");\n\n                uniforms['viewPosition'] =  {type: 'v3', value: new THREE.Vector3(0,0,0)};\n\n                this._material = new THREE.ShaderMaterial({fragmentShader : shader.fragmentShader,\n                                                           vertexShader : shader.vertexShader,\n                                                           uniforms : uniforms});\n\n                break;\n\n            case \"lambert\": //vertex lit\n\n                this._material = new THREE.MeshLambertMaterial( {color: 0xffffff, wireframe: false, shading: THREE.FlatShading } );\n                //this._material = new THREE.MeshLambertMaterial( { color: 0xffffff, combine: THREE.MixOperation});\n                break;\n\n            case \"default\":\n            case \"phong\":\n                this._material = new THREE.MeshPhongMaterial( {color: 0xffffff} );\n                this._material.shading = THREE.SmoothShading;\n                break;\n\n            case \"line\":\n\n                this._material = new THREE.LineBasicMaterial( {color: 0xffffff} );\n                break;\n\n            case \"sprite\":\n\n                this._material = new THREE.SpriteMaterial( {color: 0xffffff} );\n                break;\n\n            default:\n\n                this._material = new THREE.MeshBasicMaterial( { color: 0xffffff, wireframe: false } );\n        }\n\n        this._material.side = THREE.DoubleSide;\n        //this._material.transparent = true;\n        this.type = params.type;\n        //this._material.alphaTest = 0.1;\n    }\n\n    /**\n     * set the texture\n     *\n     * @method setTexture\n     * @param {Texture} texture\n     */\n    setTexture(texture)\n    {\n        this.texture = texture;\n\n        if (this.texture._texture !== undefined)\n        {\n            //console.log(\"attach texture to material\");\n            this._material.map = this.texture._texture;\n            //this._material.needsUpdate = true;\n        }\n        else if (texture.cube !== undefined)\n        {\n            if (this.type === \"projectionmapping\")\n            {\n                this._material.uniforms['tCube'].value = texture.cube;   // textureCube has been init before\n            }\n            else\n            {\n                this._material.envMap = texture.cube;\n            }\n        }\n    }\n\n    /**\n    * Gets the current texture\n    *\n    * @method getTexture\n    * @return {Texture}\n    */\n    getTexture()\n    {\n        return this.texture;\n    }\n\n    /**\n     * @method setUniform\n     * @param {String} name the name of the uniform to set\n     * @param {Object} value the value of the uniform to set\n     */\n    setUniform(name, value)\n    {\n        this._material.uniforms[name].value = value;\n    }\n\n    /**\n    * @method setTransparent\n    * @param {Boolean} trans\n    */\n    setTransparent(trans)\n    {\n        this._material.transparent = trans;\n    }\n\n    /**\n    * @method getTransparent\n    * @return {Boolean}\n    */\n    getTransparent()\n    {\n        return this._material.transparent;\n    }\n\n    /**\n    * @method setColor\n    * @param {Color} color\n    */\n    setColor(color)\n    {\n        //debug.log(\"material type\", this._material);\n        this._material.color = color;\n    }\n\n    /**\n    * @method getColor\n    * @return {Color}\n    */\n    getColor()\n    {\n        return this._material.color;\n    }\n\n    /**\n    * @method setWireframe\n    * @param {Boolean} wireframe\n    */\n    setWireframe(wireframe)\n    {\n        this._material.wireframe = wireframe;\n    }\n\n    /**\n    * @method getWireframe\n    * @return {Boolean}\n    */\n    getWireframe()\n    {\n        return this._material.wireframe;\n    }\n\n    /**\n    * @method setOpacity\n    * @param {float} op\n    */\n    setOpacity(op)\n    {\n        this._material.opacity = op;\n    }\n\n    /**\n    * @method getOpacity\n    * @return {float}\n    */\n    getOpacity()\n    {\n        return this._material.opacity;\n    }\n\n    /**\n    * @method setDoubleSided\n    * @param {Boolean} sided\n    */\n    setDoubleSided(sided)\n    {\n        this._material.side = sided ? THREE.DoubleSide : THREE.FrontSide;\n    }\n\n    /**\n    * @method getDoubleSided\n    * @return {Boolean}\n    */\n    getDoubleSided()\n    {\n        if(this._material.side === THREE.DoubleSide)\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    /**\n    * @method setAlphaTest\n    * @param {Boolean} val\n    */\n    setAlphaTest(val)\n    {\n        this._material.alphaTest = val;\n    }\n\n    /**\n    * @method getAlphaTest\n    * @return {Boolean}\n    */\n    getAlphaTest()\n    {\n        return this._material.alphaTest;\n    }\n\n    setDepthWrite(bool)\n    {\n        this._material.depthWrite = bool;\n    }\n\n    setDepthTest(bool)\n    {\n        this._material.depthTest = bool;\n    }\n\n    /**\n    * @method setLineWidth\n    * @param {Number} val\n    */\n    setLineWidth(val)\n    {\n        this._material.linewidth = val;\n    }\n\n    /**\n    * @method getLineWidth\n    * @return {Number}\n    */\n    getLineWidth()\n    {\n        return this._material.linewidth;\n    }\n\n    /**\n     * @method setShininess\n     * @param {Number} color\n     */\n    setShininess(val)\n    {\n        //debug.log(\"material type\", this._material);\n        this._material.shininess = val;\n    }\n\n    /**\n     * @method getShininess\n     * @return {Number}\n     */\n    getShininess()\n    {\n        return this._material.shininess;\n    }\n\n    /**\n     * @method setEmissiveColor\n     * @param {Color} color\n     */\n    setEmissiveColor(color)\n    {\n        //debug.log(\"material type\", this._material);\n        this._material.emissive = color;\n    }\n\n    /**\n     * @method getEmissiveColor\n     * @return {Color}\n     */\n    getEmissiveColor()\n    {\n        return this._material.emissive;\n    }\n\n    /**\n     * @method setShading\n     * @param {String} shading one of \"smooth\", \"flat\"\n     */\n    setShading(shading)\n    {\n        this._material.shading = (shading === \"smooth\") ? THREE.SmoothShading : THREE.FlatShading;\n        this._material.needsUpdate = true;\n    }\n    \n    /**\n     * @method setSpecularColor\n     * @param {Color} color\n     */\n    setSpecularColor(color)\n    {\n        this._material.specular = color;\n    }\n\n    /**\n     * @method getSpecularColor\n     * @return {Color}\n     */\n    getSpecularColor()\n    {\n        return this._material.specular;\n    }\n\n    //cf http://blog.cjgammon.com/threejs-custom-shader-material\n    //cf https://threejs.org/docs/index.html#Reference/Materials/ShaderMaterial\n\n    /**\n     * @method setProperty\n     * @param {String} name\n     * @param {Object} value (depending on the property)\n     */\n    setProperty(name, val)\n    {\n        this._material.uniforms[name].value = val;\n    }\n\n    /**\n     * @method setProperty\n     * @param {String} name\n     * @return {Object} value (depending on the property)\n     */\n    getProperty(name)\n    {\n        return this._material.uniforms[name].value;\n    }\n\n    setBlending(blending)\n    {\n        this._material.blending = blending;\n    }\n\n    /**\n     * @method erase\n     */\n    erase()\n    {\n        if(this._material.map)\n        {\n            this._material.map.dispose();\n        }\n        this._material.dispose();\n    }\n\n}\n\n// module exports\nexport { Material };\n","import {Transform} from './Transform';\nimport {getOrDefault, getOrCreate} from '../helpers/Misc';\nimport {Vector3} from '../core/Vector3';\nimport {Rect} from '../core/Rect';\nimport {_Math} from '../helpers/Math';\nimport {debug} from '../helpers/Debug';\n\nclass Camera\n{\n    /**\n     * Camera class. Must be created by the user so that the current scene can be seen.\n     * If no camera is added to the scene, rendering is not done (nothing is seen, so nothing is rendered).\n     *\n     * A Camera contains a transform object to be moved and rotated in space.\n     * Viewport can be defined by the user to create multicam rendering.\n     *\n     * @class Camera\n     * @constructor\n     * @param {Object} params an object containing all the possible parameters for this class. Use it like in the following example. Possible parameters are lisited below.\n     * @example\n     *     //this is how to use a parameters object in order to instanciate a Mobilizing.js object\n     *     var mobilizingObject = new Mobilizing.Class({paramName1: value, paramName2: value});\n     *\n     * @param {Context} [params.context] mobilizing context to use\n     * @param {String} [params.type=\"perspective\"] One of \"perspective\", \"ortho\" or \"cube\"\n     * @param {Number} [params.fov] vertical field of view\n     * @param {Number} [params.cubeResolution=1024] if the type is \"cube\", defines the size of the cubemap, must be a power of 2\n     * @param {Number} [params.near=1] near plane\n     * @param {Number} [params.far=5000] far plane\n     * @param {Rect} [params.viewport=Rect(0,0,1,1)] the Rect defining the viewport in normalize % (0 ~ 1), that is the portion of the rendering canvas to be used as a rendering surface for this camera\n     * @param {Context} [params.layer] the layer in which to render the camera, that is the scene it is\n     * @param {Vector3} [params.position] the position where to create the camera in space\n     * @default Vector(0,0,0)\n     * @param {Number} [params.verticalshift=0] vertical lens shift in %\n     * @param {Number} [params.horizontalshift=0] horizontal lens shift in %\n     * @param {Boolean} [params.autorender=true] Should the camera automatically renders itself or not\n     * @param {Boolean} [params.autoclear=true] Should the camera automatically clears itself or not\n     * @param {Boolean} [params.autoupdatematrix=true] Should the camera transformation matrix automatically updates itself or not\n    */\n\n    constructor(params)\n    {\n        this.context = getOrDefault(params, \"context\", null);\n        this.type = getOrDefault(params, \"type\", \"perspective\");\n        this.fov = getOrDefault(params, \"fov\", 35);\n\n        this.cubeResolution = getOrDefault(params, \"cubeResolution\", 1024);\n\n        this.near = getOrDefault(params, \"near\", 0.1);\n        this.far = getOrDefault(params, \"far\", 5000);\n\n        let position = getOrDefault(params, \"position\", undefined);\n\n        if(this.type === \"perspective\")\n        {\n            if(this.context)\n            {\n                let canvasSize = this.context.getCanvasSize();\n                debug.log(\"camera canvasSize\",canvasSize);\n                this._camera = new THREE.PerspectiveCamera(\n                    this.fov,\n                    (canvasSize.width)/(canvasSize.height),\n                    this.near, this.far );\n            }\n            else\n            {\n                this._camera = new THREE.PerspectiveCamera(\n                    this.fov,\n                    (window.innerWidth)/(window.innerHeight),\n                    this.near, this.far );\n            }\n            debug.log(\"made perspective cam\");\n        }\n        else if(this.type === \"ortho\")\n        {\n            if(this.context)\n            {\n                let canvasSize = this.context.getCanvasSize();\n                this._camera = new THREE.OrthographicCamera(\n                    canvasSize.width/-2,\n                    canvasSize.width/2,\n                    canvasSize.height/2,\n                    canvasSize.height/-2,\n                    this.near, this.far\n                );\n            }\n            else\n            {\n                this._camera = new THREE.OrthographicCamera(\n                    window.innerWidth/-2,\n                    window.innerWidth/2,\n                    window.innerHeight/2,\n                    window.innerHeight/-2,\n                    this.near, this.far\n                );\n            }\n            this._camera.position.z = 400; //default\n            debug.log(\"made ortho cam\");\n        }\n        else if (this.type === \"cube\")\n        {\n            this._camera = new THREE.CubeCamera(0.5, 1000, this.cubeResolution);\n            debug.log(\"made cube cam\");\n        }\n\n        this.transform = new Transform(this/*._camera*/);\n\n        if (position !== undefined)\n        {\n            this.transform.setLocalPosition(position);\n        }\n\n        this.viewport           = getOrCreate(params, \"viewport\", Rect, 0, 0, 1, 1);\n        this.layer              = getOrDefault(params, \"layer\", \"default\");\n        this.verticalshift      = getOrDefault(params, \"verticalshift\", 0);\n        this.horizontalshift    = getOrDefault(params, \"horizontalshift\", 0);\n        this.autorender         = getOrDefault(params, \"autorender\", true);\n        this.autoclear          = getOrDefault(params, \"autoclear\", true);\n        this.autoupdatematrix   = getOrDefault(params, \"autoupdatematrix\", false);\n\n        /**\n         @property dirty\n         @type Boolean flag to know if something has changed\n         @default true\n         */\n        this.dirty = false;\n    }\n\n    /**\n     Set the RenderTexture to render on. By default, the camera renders on the Context canvas.\n\n     @method setRenderTexture\n     @param {RenderTexture} renderTexture Mobilizing.RenderTexture object\n     */\n    setRenderTexture(renderTexture)\n    {\n        this.renderTexture = renderTexture;\n    }\n\n    /**\n     * set the vertical field of view in degrees\n     *\n     * @method setFOV\n     * @param fov {Number} default to 35 degree\n     */\n    setFOV(fov)\n    {\n        this.fov = fov;\n        if(this.type === \"perspective\")\n        {\n            this._camera.fov = this.fov;\n            this.updateProjectionMatrix();\n        }\n    }\n\n    /**\n     * get the vertical field of view in degrees\n     *\n     * @method getFOV returns the value\n     * @return {Number} Field Of View value\n     */\n    getFOV()\n    {\n        return this.fov;\n    }\n\n    /**\n     Set the clear color, which is the color used to paint the backgroud.\n     Note: this is camera independant, each cam on the scene can have a different\n     clear color, or a different background color.\n\n     @method setClearColor\n     @param {Color} Color Mobilizing.Color object\n     */\n    setClearColor(color)\n    {\n        this.clearColor = color;\n    }\n\n    /**\n     Gets the clear color, which is the color used to paint the backgroud.\n     Note: this is camera independant, each cam on the scene can have a different\n     clear color, or a different background color.\n\n     @method getClearColor\n     @return {Color} Color object associated to this clearColor\n     */\n    getClearColor()\n    {\n        return this.clearColor;\n    }\n\n    /**\n     Set the autorender flag, which means that the camera will render itself automatically.\n     @method setAutorender\n     @param {Bool} b flag true/false\n     */\n    setAutorender(b)\n    {\n        this.autorender = b;\n    }\n\n    /**\n    Makes the cam \"looks at\" the argements coordinates. Handy way to orient the cam\n    or to make it follow an object in space.\n\n    @method lookAt\n    @param {Object} Vector3 the coordinates to look at.\n    */\n    lookAt(vec)\n    {\n        //this.camera.up = new Vector3(0,1,0);\n        this._camera.lookAt(vec);\n        //this.camera.updateProjectionMatrix();\n    }\n\n    /**\n    Sets the aspect ratio of the camera view\n\n    @method setAspect\n    @param {Number} the ratio (ex. 4/3)\n    */\n    setAspect(ratio)\n    {\n        this._camera.aspect = ratio;\n        this.updateProjectionMatrix();\n    }\n\n    /**\n     Sets the vertical shift ratio of the camera view\n\n     @method setVerticalShift\n     @param {Number} the ratio (1 -> 100%)\n     */\n    setVerticalShift(ratio)\n    {\n        this.verticalshift = ratio;\n        this.updateProjectionMatrix();\n    }\n\n    /**\n     Sets the horizontal shift ratio of the camera view\n\n     @method setVerticalShift\n     @param {Number} the ratio (1 -> 100%)\n     */\n    setHorizontalShift(ratio)\n    {\n        this.horizontalshift = ratio;\n        this.updateProjectionMatrix();\n    }\n\n\n    updateProjectionMatrix()\n    {\n        //FIXME : this call does an updateProjectionMatrix internally :\n        var w = 1;\n        var h = 1/this._camera.aspect;\n\n        if (this.type !== \"cube\")\n        {\n            if (this.type !== \"ortho\")\n            {\n                this._camera.setViewOffset( w, h, w*this.horizontalshift, h*this.verticalshift, w, h );\n            }\n\n            if (this.autoupdatematrix)\n            {\n                this._camera.updateProjectionMatrix();\n            }\n        }\n\n    }\n\n    /**\n    gets the aspect ratio of the camera view\n\n    @method getAspect\n    @return {Number} cam aspect value\n    */\n    getAspect()\n    {\n        return this._camera.aspect;\n    }\n\n    set aspect(ratio)\n    {\n        this.setAspect(ratio);\n    }\n    get aspect()\n    {\n        this.getAspect();\n    }\n\n    /**\n    Method to recompute the frame of ortho cam. Is used internally for window resizing.\n\n    @method setOrthoPlanes\n    @param {Number} left\n    @param {Number} right\n    @param {Number} top\n    @param {Number} bottom\n    */\n    setOrthoPlanes(left, right, top, bottom)\n    {\n        if(this.type === \"ortho\")\n        {\n            this._camera.left = left;\n            this._camera.right = right;\n            this._camera.top = top;\n            this._camera.bottom = bottom;\n        }\n        else\n        {\n            console.warn(\"setOrthoBounds() can't be used on perspective cams!\");\n        }\n    }\n\n    /**\n    Zoom is for ortho cam and mimics the Z translation of perspective cams.\n    This is expressed like a scale, zoom = 2 will double, .5 make it half.\n\n    @method setZoom\n    @param {Number} zoom value\n    */\n    setZoom(val)\n    {\n        if(this.type === \"ortho\")\n        {\n            this._camera.zoom = val;\n        }\n        else\n        {\n            console.warn(\"setZoom() can't be used on perspective cams!\");\n        }\n    }\n\n    /**\n    Gets current zoom value.\n\n    @method getZoom\n    @return {Number} zoom value\n    */\n    getZoom()\n    {\n        if(this.type === \"ortho\")\n        {\n            return this._camera.zoom;\n        }\n        else\n        {\n            console.warn(\"getZoom() can't be used on perspective cams!\");\n        }\n    }\n\n    set zoom(val)\n    {\n        this.setZoom(val);\n    }\n    get zoom()\n    {\n        this.getZoom();\n    }\n\n    /**\n    Sets cam far plane\n\n    @method setFarPlane\n    @param {Number} far plane value\n    */\n    setFarPlane(far)\n    {\n        if(this.type !== \"cube\")\n        {\n            this._camera.far = far;\n            this.updateProjectionMatrix();\n        }\n        else if (this.type === \"cube\")\n        {\n            this._camera.children.forEach(\n                function(cam)\n                {\n                    cam.far = far;\n                    cam.updateProjectionMatrix();\n                });\n        }\n    }\n    /**\n    Gets cam far plane\n\n    @method getFarPlane\n    @return {Number} far plane value\n    */\n    getFarPlane()\n    {\n        return this._camera.far;\n    }\n\n    set farPlane(val)\n    {\n        this.setFarPlane(val);\n    }\n    get farPlane()\n    {\n        return this.setFarPlane;\n    }\n\n    /**\n    Sets cam near plane\n\n    @method setNearPlane\n    @param {Number} near plane value\n    */\n    setNearPlane(near)\n    {\n        if(this.type !== \"cube\")\n        {\n            this._camera.near = near;\n            this.updateProjectionMatrix();\n        }\n        else if (this.type === \"cube\")\n        {\n\n            this._camera.children.forEach(\n                function(cam)\n                {\n                    cam.near = near;\n                    cam.updateProjectionMatrix();\n                });\n        }\n    }\n    /**\n    Gets cam near plane\n\n    @method getNearPlane\n    @return {Number} far plane value\n    */\n    getNearPlane()\n    {\n        return this._camera.near;\n    }\n\n    set nearPlane(val)\n    {\n        this.setNearPlane(val);\n    }\n    get nearPlane()\n    {\n        return this.getNearPlane();\n    }\n\n    /**\n    Sets cam far and near planes\n\n    @method setPlanes\n    @param {Number} near near plane value\n    @param {Number} far far plane value\n    */\n    setPlanes(near, far)\n    {\n        this._camera.far = far;\n        this._camera.near = near;\n        this.updateProjectionMatrix();\n    }\n\n    /**\n    Tries to adjust the cam z distance so that 1 world unit == 1 screen pixel.\n    Useful to make object move at the mouse or touch position x and y.\n    For perspective cam only.\n\n    @method setToPixel\n    */\n    setToPixel()\n    {\n        if(this.type === \"perspective\")\n        {\n            var newPos;\n\n            if(this.context)\n            {\n                var canvasSize = this.context.getCanvasSize();\n                newPos = new Vector3(\n                    canvasSize.width/2,\n                    -canvasSize.height/2,\n                    1/(2 * Math.tan( (_Math.degToRad(this.fov/2.0) ) / canvasSize.height))\n                );\n            }\n            else\n            {\n                newPos = new Vector3(\n                    window.innerWidth/2,\n                    -window.innerHeight/2,\n                    1/(2 * Math.tan( (_Math.degToRad(this.fov/2.0) ) / window.innerHeight))\n                );\n            }\n            this.transform.setLocalPosition(newPos);\n\n        }\n        else\n        {\n            console.error(\"only perspective camera can be setted to screen pixel z position\");\n        }\n    }\n\n\n    perspectiveOffCenter( left,  right,  bottom,  top,  near,  far)\n    {\n        var x = 2.0 * near / (right - left);\n        var y = 2.0 * near / (top - bottom);\n        var a = (right + left) / (right - left);\n        var b = (top + bottom) / (top - bottom);\n        var c = -(far + near) / (far - near);\n        var d = -(2.0 * far * near) / (far - near);\n        var e = -1.0;\n\n        var m = this._camera.projectionMatrix;\n        m.set(x,0,a,0,0,y,b,0,0,0,c,d,0,0,e,0);\n        /*\n        m.elements[0] = x;\n        m.elements[1] = 0;\n        m.elements[2] = a;\n        m.elements[3] = 0;\n        m.elements[4] = 0;\n        m.elements[5] = y;\n        m.elements[6] = b;\n        m.elements[7] = 0;\n        m.elements[8] = 0;\n        m.elements[9] = 0;\n        m.elements[10] = c;\n        m.elements[11] = d;\n        m.elements[12] = 0;\n        m.elements[13] = 0;\n        m.elements[14] = e;\n        m.elements[15] = 0;\n        */\n\n        /*\n        m[0, 0] = x;\n        m[0, 1] = 0;\n        m[0, 2] = a;\n        m[0, 3] = 0;\n        m[1, 0] = 0;\n        m[1, 1] = y;\n        m[1, 2] = b;\n        m[1, 3] = 0;\n        m[2, 0] = 0;\n        m[2, 1] = 0;\n        m[2, 2] = c;\n        m[2, 3] = d;\n        m[3, 0] = 0;\n        m[3, 1] = 0;\n        m[3, 2] = e;\n        m[3, 3] = 0;\n        */\n    }\n\n}\n\n// module exports\nexport { Camera };\n","import {getOrDefault} from '../helpers/Misc';\nimport {Color} from '../core/Color';\nimport {Transform} from './Transform';\nimport {Vector3} from \"../core/Vector3\";\n\nclass Light\n{\n    /**\n     * Light will enable object to be seen in space. Camera and Light are requiered for a basic scene.\n     *\n     * @class Light\n     * @constructor\n     * @param {Object} params parameters object\n     * @param {String} [params.type:\"point\"] one of \"point\", \"directional\", \"ambient\", \"spot\"\n     * @param {Number} [params.intensity=1]\n     * @param {Number} [params.distance=1000] distance is taken in account only for point lights\n     * @param {Color} [params.color=Color.white]\n     */\n    constructor(params)\n    {\n        this.type = getOrDefault(params, \"type\", \"point\");\n\n        switch (this.type)\n        {\n            case \"point\":\n                this.light = new THREE.PointLight( 0xffffff );\n                this.light.distance = 1000;\n                break;\n\n            case \"directional\":\n                this.light = new THREE.DirectionalLight( 0xffffff );\n                this.light.position.set(1, 1, 1).normalize();\n                break;\n\n            case \"ambient\":\n                this.light = new THREE.AmbientLight( 0x404040 ); // soft white light\n                this.light.position.set(1, 1, 1).normalize();\n                break;\n\n            case \"spot\":\n                this.light = new THREE.SpotLight( 0xffffff );\n                //this.light.position.set(1, 1, 1).normalize();\n                this.target = new THREE.Object3D();\n                this.light.target = this.target;\n                break;\n\n            default:\n                this.light = new THREE.PointLight( 0xffffff );\n                this.type = \"point\";\n        }\n\n\n        this.light.intensity = getOrDefault(params, \"intensity\", 1);\n        this.light.distance = getOrDefault(params, \"distance\", 5000);\n        this.light.color = getOrDefault(params, \"color\", Color.white);\n\n        this.transform = new Transform(this/*.light*/);\n    }\n\n    /**\n    * Sets the light's intensity\n    * @method setIntensity\n    * @param {Object} val\n    */\n    setIntensity(val)\n    {\n        this.light.intensity =  val;\n    }\n\n    /**\n    * Gets the light's intensity\n    * @method getIntensity\n    * @param {Object} val\n    */\n    getIntensity(val)\n    {\n        return this.light.intensity;\n    }\n\n    /**\n    * Sets the light's distance factor\n    * @method setDistance\n    * @param {Number} val\n    */\n    setDistance(val)\n    {\n        if(this.type === \"point\" || this.type === \"spot\" ){\n            this.light.distance =  val;\n        }\n    }\n\n    /**\n    * Gets the light's distance factor\n    * @method getDistance\n    * @return {Number} the light distance factor\n    */\n    getDistance()\n    {\n        return this.light.distance;\n    }\n    /**\n     * setColor\n     * @method setColor\n     * @param {Color} color\n     */\n    setColor(color){\n        this.light.color = color;\n    }\n    /**\n     * getColor\n     * @method getColor\n     * @return {Color} color\n     */\n    getColor(){\n        return this.light.color;//TODO : return a Mobilizing object, not a Three one\n    }\n    /**\n     * Maximum extent of the spotlight, in radians, from its direction. Should be no more than Math.PI/2. The default is Math.PI/3.\n     * @method setAngle\n     * @param {Number} angle the spot angle\n     */\n    setAngle(val)\n    {\n        if(this.type === \"spot\")\n        {\n            this.light.angle = val;\n        }\n    }\n    /**\n     * getAngle\n     * @method getAngle\n     * @return {Number} the angle\n     */\n    getAngle()\n    {\n        return this.light.angle;\n    }\n\n    /**\n    * Position in space to where the spot light points\n    * @method setTargetPosition\n    * @param {Object} x\n    * @param {Object} y\n    * @param {Object} z\n    */\n    setTargetPosition(arg1, arg2, arg3)\n    {\n        if(this.type === \"spot\")\n        {\n            if(arg1 instanceof Vector3)\n            {\n                this.target.position.set(arg1.x, arg1.y, arg1.z);\n                this.target.updateMatrixWorld();\n            }\n            else\n            {\n                this.target.position.set(arg1, arg2, arg3);\n                this.target.updateMatrixWorld();\n            }\n        }\n    }\n    /**\n    * Smoothness of the spot impact shape (makes the light circle blurry)\n    * @method setPenumbra\n    * @param {Object} val between 0 and 1\n    */\n    setPenumbra(val)\n    {\n        this.light.penumbra = val;\n    }\n\n    /**\n     * setCastShadow\n     * @method setCastShadow\n     * @param {Boolean} enabled\n     */\n    setCastShadow(enabled)\n    {\n        this.light.castShadow = enabled;\n    }\n\n    /**\n     * set the Shadow map Size\n     * @method setShadowSize\n     * @param {Number} width\n     * @param {Number} height\n     */\n    setShadowSize(width,height)\n    {\n        this.light.shadow.mapSize.width = width; //shadow map size\n        this.light.shadow.mapSize.height = height; //shadow map size\n    }\n\n    /**\n     * setShadowDistance\n     * @method setShadowDistance\n     * @param {Number} near min shadow distance\n     * @param {Number} far max shadow distance\n     */\n    setShadowDistance(near,far)\n    {\n        this.light.shadow.camera.near = near; //min shadow distance\n        this.light.shadow.camera.far = far; //max shadow distance\n    }\n}\n\n// module exports\nexport { Light };","import * as THREE from 'three';\nimport {getOrDefault} from '../helpers/Misc';\nimport {debug} from '../helpers/Debug';\n\nclass Texture\n{\n    /**\n     * Texture are bitmap pictures loaded in the graphic card memory so they can be mapped on a geometry surface. Usually, texture are mapped through a Material. Keep in mind that WebGL, as an impletation of OpenGL, shares the same kind of limitations : textures sources should be power of 2 (even if here, Three.js is doing the job of resizing for you if they're not).\n     * Constants list for possible texture's mapping mode :\n     * \n     * Texture.UVMapping\n     * Texture.CubeReflectionMapping\n     * Texture.CubeRefractionMapping\n     * Texture.EquirectangularReflectionMapping\n     * Texture.EquirectangularRefractionMapping\n     * Texture.SphericalReflectionMapping\n     * Texture.CubeUVReflectionMapping\n     * Texture.CubeUVRefractionMapping\n     *\n     * @class Texture\n     * @constructor\n     * @param {Object} params\n     * @param {Context} params.image the Image object.\n     * @param {String} params.canvas the canvas object url.\n     */\n    constructor(params)\n    {\n        this._texture;\n        this._image = getOrDefault(params, \"image\", undefined);\n        this._canvas = getOrDefault(params, \"canvas\", undefined);\n\n        if(this._image){\n            this.fromImage(this._image);\n        }else if(this._canvas){\n            this.fromCanvas(this._canvas);\n        }\n    }\n\n    /**\n    * Create the texture from an image file\n    *\n    * @method fromImage\n    * @param {Image} image tells if the loader should force the main process to wait for the end of \n    */\n    fromImage(image){\n\n        this._texture = new THREE.Texture(image);\n        this._texture.needsUpdate = true;\n\n        this.width = image.width;\n        this.height = image.height;\n    }\n\n    /**\n     * Create the texture from a Canvas DOM element (can be Mobilizing itself -> when we'll can catch a WebGL canvas pixels...)\n     *\n     * @method fromCanvas\n     * @param {canvas} canvas canvas\n     */\n    fromCanvas(canvas)\n    {\n        this._texture = new THREE.Texture(canvas);\n        this._texture.needsUpdate = true;\n        this._texture.magFilter = THREE.LinearFilter;\n        //this._texture.minFilter = THREE.LinearMipMapLinearFilter;\n        this._texture.minFilter = THREE.LinearFilter;\n        this.width = this._texture.image.width;\n        this.height = this._texture.image.height;\n\n        //custom events management, used internally to autamatically refresh texture after drawn\n        if(canvas.events)\n        {\n            canvas.events.on(\"drawn\", () => { this.setNeedsUpdate(true); });\n        }\n    }\n\n    /**\n    * Clears the underlying Three.js texture object\n    * @method dispose\n    */\n    dispose()\n    {\n        this._texture.dispose();    \n    }\n\n    /**\n    * Define the repetition factor of this texture. If the value is > 1, then the texture will be mapped twice on the surface and so on. NB: usage of this method automatically sets the wrapS and wrapT properties to RepeatWrapping\n    * \n    * @method setRepeat\n    * @param {float} u the new u texture coordinate repetition to use\n    * @param {float} v the new u texture coordinate repetition to use\n    */\n    setRepeat(u,v)\n    {\n        if(this._texture && this._texture !== undefined){\n            this._texture.repeat.set( u, v );\n            this._texture.wrapS = THREE.RepeatWrapping;\n            this._texture.wrapT = THREE.RepeatWrapping;\n        }\n    }\n\n    /**\n    * How much a single repetition of the texture is offset from the beginning, in each direction U and V. Typical range is 0.0 to 1.0.\n    * \n    * @method undefined\n    * @param {Numbe} val offset between 0.0 to 1.0\n    */\n    setOffset(val)\n    {\n        this._texture.offset = val;\n    }\n\n    //TODO : setter and getter for Three.js texture props mapping\n\n    /**\n    * Set this to true to trigger an update next time the texture is used. Particularly important for setting the wrap mode.\n    * \n    * @method setNeedsUpdate\n    * @param {Boolean} val\n    */\n    setNeedsUpdate()\n    {\n        this._texture.needsUpdate = true;\n    }\n\n    /**\n    * False by default, which is the norm for PNG images. Set to true if the RGB values have been stored premultiplied by alpha.\n    * \n    * @method setPremultiplyAlpha\n    * @param {Boolean} val\n    */\n    setPremultiplyAlpha(val)\n    {\n        this._texture.premultiplyAlpha = val;\n    }\n\n    /**\n    * How the image is applied to the object. An object type of Texture.UVMapping is the default, where the U,V coordinates are used to apply the map.\n    *\n    * @property setMapping\n    * @param {Number} mapping \n    */\n    setMapping(mapping)\n    {\n        this._texture.mapping = mapping;\n    }\n\n}\n\nTexture.UVMapping = THREE.UVMapping;\nTexture.CubeReflectionMapping = THREE.CubeReflectionMapping;\nTexture.CubeRefractionMapping = THREE.CubeRefractionMapping;\nTexture.EquirectangularReflectionMapping = THREE.EquirectangularReflectionMapping;\nTexture.EquirectangularRefractionMapping = THREE.EquirectangularRefractionMapping;\nTexture.SphericalReflectionMapping = THREE.SphericalReflectionMapping;\nTexture.CubeUVReflectionMapping = THREE.CubeUVReflectionMapping;\nTexture.CubeUVRefractionMapping = THREE.CubeUVRefractionMapping;\n\n// module exports\nexport { Texture };","import * as THREE from 'three';\nimport {getOrDefault, getOrCreate} from '../helpers/Misc';\nimport {Material} from '../scene/Material';\nimport {Color} from '../core/Color';\nimport {Transform} from '../scene/Transform';\nimport {Texture} from '../texture/Texture';\nimport {debug} from '../helpers/Debug';\nimport {Base} from '../Base';\nimport {Mesh} from './Mesh';\n\nclass Label extends Base\n{\n    /*\n    * Label class\n    * A Label is a textured, quad shaped object to be used in Graphical User Interfaces.\n    * A Label can contains a background (color or existing picture) and/or a prerendered text.\n    *\n    * @class Label\n    * @constructor\n    * @param {Object} params Config parameters\n    * @param {String} params.text the String to display\n    * @param {Font} params.font font Mobilizing.Font object\n    * @param {Number} [params.fontSize = 72] fontSize font size\n    * @param {Number} [params.lineMaxCharCount = 40] lineMaxCharCount the maximum number of characters a line should count\n    * @param {Color} [params.color = Color.white] color the text color\n    * @param {Color} params.backgroundColor backgroundColor backgroundColor of the text\n    * @param {Texture} params.texture texture the texture to use fo this label (will cancel the text setting, only the texture will be rendered)\n    * @param {Number} [params.width = 100] width of the label\n    * @param {Number} [params.height = 100] height of the label\n    * \n    * @example\n    *    //TODO\n    */\n    constructor(params)\n    {\n        super(params);\n\n        this.setName( getOrDefault(params, \"name\", undefined) );\n\n        this.font = getOrDefault(params, \"font\", null);//TODO default font!\n        this.material = getOrDefault(params, \"material\", \"basic\");\n\n        this._text = getOrDefault(params, \"text\", \"\");\n        this._lineMaxCharCount = getOrDefault(params, \"lineMaxCharCount\", 40);\n\n        this.style = new Style();\n\n        this._width = getOrDefault(params, \"width\", 100);\n        this._height = getOrDefault(params, \"height\", 100);\n        this.style.color = getOrDefault(params, \"color\", Color.white);\n\n        this.style.fontSize = getOrDefault(params, \"fontSize\", 72);\n        this.style.textAlign = getOrDefault(params, \"textAlign\", \"center\");\n\n        /*this._geometry = new THREE.PlaneBufferGeometry(1,1);\n        this.mesh = new THREE.Mesh( this._geometry, this.material._material );*/\n\n        this.mesh = new Mesh({primitive: \"plane\", width: 1, height:1, material:this.material});\n        \n        if (params.backgroundColor !== undefined)\n        {\n            this.style.hasBackground = true;\n            this.style.backgroundColor = params.backgroundColor;\n        }\n        else\n        {\n            this.style.hasBackground = false;\n        }\n\n        this.transform = new Transform(this/*.mesh*/);\n        this.transform.setLocalScale(this._width,this._height);\n        this.needsComputeTextSize = true;//What's this ?\n\n        this.precLine = getOrDefault(params, \"precLine\", \"\");// ajout ST\n\n        this._textSize = 0;//will be computed on render\n\n        if (params.texture !== undefined)\n        {\n            this.material.setTexture(params.texture);\n            this.transform.setLocalScale(params.width,params.height,1);\n        }\n        else\n        {\n            this.render();\n        }\n    }\n\n    /**\n    * set the width of this label.  Will be used by render()\n    * @method setWidth\n    * @param {Number} val the new width\n    */\n    setWidth(val)\n    {\n        this._width = val;\n    }\n\n    /**\n    * set the height of this label.  Will be used by render()\n    * @method setHeight\n    * @param {Number} val the new height\n    */\n    setHeight(val)\n    {\n        this._height = val;\n    }\n\n    /**\n    * set the Label background texture.\n    * @method setBackgroundTexture\n    * @param {Object} texture Texture to set as the Label background.\n    */\n    setBackgroundTexture(texture)\n    {\n        this.style.backgroundTexture = texture;\n    }\n\n    /**\n    * set the Label text content.\n    * @method setText\n    * @param {String} val text to be used as the Label content.\n    */\n    setText(val)\n    {\n        this._text = val;\n        this.render();\n    }\n\n    /**\n    * @deprecated\n    * @method setNeedsComputeTextSize\n    * @param {Object} val\n    */\n    setNeedsComputeTextSize(val)\n    {\n        this.needsComputeTextSize = val;\n    }\n\n    /**\n    * Set the current Label underlying canvas to use this color for the shadowblur effect\n    * @method setShadowColor\n    * @param {Color} color Mobilizing.Color object\n    */\n    setShadowColor(color){\n        this.shadowColor = \"rgba(\"+color.r+\",\"+color.g+\",\"+color.b+\",1)\";\n    }\n    /**\n    * Description for undefined\n    * @method setShadowBlur\n    * @param {Number} val\n    */\n    setShadowBlur(val){\n        this.shadowBlur = val;\n    }\n\n    /**\n    * Renders the label once all the setting are done. Should be called by the user when label properties are modified\n    * @method render\n    */\n    render()\n    {\n        //debug.log(\"render label\");\n        if (this._text === undefined)\n        {\n            this._text = \"\";\n        }\n        if (this._canvas === undefined)\n        {\n            this._canvas = document.createElement('canvas');\n            this._canvas.retinaResolutionEnabled = false; //to disable Retina canvas in Ejecta\n            //document.body.appendChild(this._canvas);\n        }\n        if (this._width > 2048)\n        {\n            this._width = 2048;\n        }\n        if (this._height > 2048)\n        {\n            this._height = 2048;\n        }\n        this._canvas.width = this._width;\n        this._canvas.height = this._height;\n\n        //this.transform.setLocalScale(this._width,this._height);\n\n        var context = this._canvas.getContext('2d');\n\n        context.fillStyle = this.style.backgroundColor.makeRGBAStringWithAlpha(this.style.backgroundColorAlpha);\n        context.shadowColor = this.shadowColor;\n        context.shadowBlur = this.shadowBlur;\n\n        if (this.style.backgroundTexture !== undefined)\n        {\n            //debug.log(this.style.backgroundTexture);\n            context.drawImage(this.style.backgroundTexture.texture.image, 0, 0, this._width, this._height);\n        }\n        else if (this.style.hasBackground)\n        {\n            context.fillRect(0,0,this._canvas.width, this._canvas.height);\n        }\n        else\n        {\n            context.clearRect ( 0 , 0 , this._canvas.width, this._canvas.height );\n        }\n\n        if (this.font !== undefined && this.font !== null)\n        {\n            debug.log(\"render label with font\",this.font);\n            var finaltext = \"\";//this._text;\n            //var words = this._text.split(\" \");\n            //césure automatique\n            var l = 0;\n            //var lastcesure = 0;\n            var word = \"\";\n            var ll = 0;\n            var first = true;\n\n            var SpaceLeft = this._lineMaxCharCount;\n            for (var j=0;j<this._text.length;++j)\n            {\n                var c = this._text[j];\n\n                if (c === '\\n' || c === ' ')\n                {\n                    if ((word.length+1) > SpaceLeft)\n                    {\n                        //debug.log(\"overflow detected, adding backslash then \" + word);\n                        //debug.log(\"BACKSLASH \" + word);\n                        finaltext += \"\\n\";\n                        finaltext += (word + \" \");\n                        SpaceLeft = this._lineMaxCharCount - (word.length+1);\n                        //word = \"\";\n                        if (c === '\\n')\n                        {\n                            finaltext += \"\\n\";\n                            SpaceLeft = this._lineMaxCharCount;\n                        }\n                    }\n                    else if (c === '\\n')\n                    {\n                        //debug.log(\"BACKSLASH detected, adding \" + word + \" then backslash\");\n                        finaltext += (word);\n                        //debug.log(word + \" BACKSLASH\");\n                        finaltext += \"\\n\";\n                        SpaceLeft = this._lineMaxCharCount;\n                        //word = \"\";\n                    }\n                    else\n                    {\n                        //debug.log(\"common case, adding \" + word + \" then space\");\n                        finaltext += (word + \" \");\n                        SpaceLeft = SpaceLeft - (word.length + 1);\n                        //word = \"\";\n                    }\n                    word = \"\";\n                }\n                else //lettre normale\n                {\n                    word += c;\n                }\n\n            }\n\n            if ((word.length+1) > SpaceLeft)\n            {\n                //debug.log(\"BACKSLASH \" + word);\n                finaltext += '\\n';\n            }\n            finaltext += word; //last word\n\n            var strings = finaltext.split(\"\\n\");\n\n            var x = 0;\n            var y = 0;\n\n            var path ;\n            if (strings.length === 0)\n            {\n                strings.push(finaltext);\n                // ajout sylvie\n                this.lastLine = finaltext;\n            }else{\n                this.lastLine = strings[strings.length-1];\n            }\n            this.nbLines = strings.length;\n\n            for (var k in strings)\n            {\n                var s = strings[k];\n                //debug.log(s);\n                if(this.needsComputeTextSize)\n                {\n                    this._textSize = this.font.getTextSize(s, this.style.fontSize);\n\n                    if(this.style.textAlign === \"center\")\n                    {\n                        x = this._width/2 - this._textSize.width/2;\n                    }\n                    else if(this.style.textAlign === \"end\" || this.style.textAlign === \"right\")\n                    {\n                        x = this._width - this._textSize.width;\n                    }\n                    else if(this.style.textAlign === \"left\" || this.style.textAlign === \"start\")\n                    {\n                        // ajout sylvie\n                        if(k === 0){\n                            //console.log(this.precLine)\n                            x = this.font.getTextSize(this.precLine, this.style.fontSize).width + this.style.textHorizontalMargin;\n                            //x = 0 + this.style.textHorizontalMargin;\n                        }else{\n                            x = 0 + this.style.textHorizontalMargin;\n                        }\n                    }\n                    var offset = 0;\n                    if(this.style.textVerticalAlign === \"center\")\n                    {\n                        if (strings.length > 1)\n                        {\n                            offset = k-(strings.length-1)/2;\n                        }\n                        y = this._height/2 + this._textSize.height/2 + offset * this.style.fontSize;\n                    }\n                    else if(this.style.textVerticalAlign === \"top\")\n                    {\n                        offset = k;\n                        y =  this.style.fontSize + offset * this.style.fontSize + this.style.textVerticalMargin;\n                    }\n                    else if(this.style.textVerticalAlign === \"bottom\")\n                    {\n                        //TO DO !!!!\n                        offset = k;\n                        y =  offset * this.style.fontSize;\n                    }\n\n                    //position du curseur\n                    this.cursorx = x+this._textSize.width;\n                    this.cursory = y;//+this._textSize.height/2;\n                }\n                path = this.font.getFont().getPath(s, x, y, this.style.fontSize);\n                //context.globalAlpha = this.style.colorAlpha;\n                path.fill = \"#\"+this.style.color.getHexString();\n                path.draw(context);\n\n            }\n\n        }\n        if(!this._texture)\n        {\n            this._texture = new Texture({canvas:this._canvas});\n        }else{\n            this._texture.dispose();\n        }\n\n        this._texture.fromCanvas(this._canvas);\n\n        this.mesh.material.setTexture(this._texture);\n    }\n\n    /**\n    Creates a text Label.\n    @method createTextLabel\n    @static\n    @deprecated\n    @param {String} text text to render on the Label.\n    @param {Object} font Font object.\n    @param {Number} fontSize The font Size (in pixels).\n    @param {String} align the text alignment (\"center\", \"end\", \"left\", \"right\", \"start\").\n    @param {Number} width Label width in pixels.\n    @param {Number} height Label height in pixels.\n    @param {Color} color the Label text color.\n    @param {Color} backgroundColor the background color.\n    @param {Texture} texture the background Texture.\n     */\n    createTextLabel(text, font, fontSize, align, width, height, color, backgroundColor, texture)\n    {\n        var labelTest = new Label(text, font, width, height);\n        labelTest.style.fontSize    = fontSize;\n        labelTest.style.color       = color;\n        if (backgroundColor !== undefined)\n        {\n            labelTest.style.hasBackground = true;\n            labelTest.style.backgroundColor = backgroundColor;\n        }\n        else\n        {\n            labelTest.style.hasBackground = false;\n        }\n        labelTest.style.textAlign = align;//\"center|end|left|right|start\"\n        if (texture !== undefined)\n        {\n            labelTest.material.setTexture(texture);\n            labelTest.transform.setLocalScale(width,height,1);\n        }\n        else\n        {\n            labelTest.render();\n        }\n        return labelTest;\n    }\n}\n\n// module exports\nexport { Label };\n","import {Mesh} from '../shape/Mesh';\nimport {Camera} from './Camera';\nimport {Light} from './Light';\nimport {Label} from '../shape/Label';\nimport {Quaternion} from '../core/Quaternion';\nimport {Matrix4} from '../core/Matrix4';\nimport {_Math} from '../helpers/Math';\nimport {Vector3} from '../core/Vector3';\nimport {Vector2} from '../core/Vector2';\nimport {debug} from '../helpers/Debug';\n\nclass Transform\n{\n\n    /**\n     Transform class is meant to be aggregated to any object that needs to be transformed in space.\n     {{#crossLink \"Mesh\"}}{{/crossLink}}, {{#crossLink \"Light\"}}{{/crossLink}} or {{#crossLink \"Camera\"}}{{/crossLink}} contains a transform instance.\n\n     @class Transform\n     @constructor\n     @uses {Math}\n    */\n    constructor(obj)\n    {\n        this.mobObject = obj;//used in children array to avoid confusion between three and mob objects\n        \n        if(obj instanceof Mesh){\n            this.entity = obj.mesh;\n        }else if(obj instanceof Camera){\n            this.entity = obj._camera;\n        }else if(obj instanceof Light){\n            this.entity = obj.light;\n        }else if(obj instanceof Label){\n            this.entity = obj.mesh.mesh;\n        }\n\n        this.children = [];\n    }\n\n    /**\n    * Geneates a transform to point at a certain coordinates, makes the object \"look at\" this point.\n    * @method lookAt\n    * @param {Vector} vector\n    */\n    lookAt(vector){\n        this.entity.lookAt(vector);\n    }\n\n    /**\n    Set the object rotation with a quarternion {x,y,z,w}.\n\n    @method setLocalQuaternion\n    @param {Quaternion} quarternion The quaternion to apply\n    */\n    setLocalQuaternion(q){\n\n        if(q instanceof Quaternion){\n            this.entity.quaternion.set(q.x, q.y, q.z, q.w);\n        }\n\n    }\n\n    /**\n    Get the object rotation as a quarternion.\n\n    @method getLocalQuaternion\n    @return {Quaternion} quarternion\n    */\n    getLocalQuaternion(){\n        var temp = new Quaternion(this.entity.quaternion.x,\n                                  this.entity.quaternion.y,\n                                  this.entity.quaternion.z,\n                                  this.entity.quaternion.w\n                                 );\n        return temp;\n    }\n\n\n    setLocalMatrix(m) {\n\n        this.entity.matrixAutoUpdate = false;\n\n        var mat = new Matrix4().multiplyMatrices(this.entity.matrix, m);\n        this.entity.applyMatrix(mat);\n        this.entity.updateMatrix();\n    }\n\n    //not documented - use setRotation\n    setLocalEulerAngles(arg1, arg2, arg3)\n    {\n        if(arguments.length === 3)//x,y,z float\n        {\n            this.entity.rotation.x = _Math.degToRad(arg1);\n            this.entity.rotation.y = _Math.degToRad(arg2);\n            this.entity.rotation.z = _Math.degToRad(arg3);\n\n        }\n        else if(arguments.length === 2)\n        {\n            if(typeof arg1 === \"number\" && typeof arg2 === \"number\")\n            {\n                this.entity.rotation.x = _Math.degToRad(arg1);\n                this.entity.rotation.y = _Math.degToRad(arg2);\n            }\n\n        }\n        else if(arguments.length === 1)//direct vector or single float\n        {\n            if(arg1 instanceof Vector3)\n            {\n                this.entity.rotation.x = _Math.degToRad(arg1.x);\n                this.entity.rotation.y = _Math.degToRad(arg1.y);\n                this.entity.rotation.z = _Math.degToRad(arg1.z);\n            }\n            if(arg1 instanceof Vector2)\n            {\n                this.entity.rotation.x = _Math.degToRad(arg1.x);\n                this.entity.rotation.y = _Math.degToRad(arg1.y);\n            }\n            else if(typeof arg1 === \"number\")\n            {\n                this.entity.rotation.z = _Math.degToRad(arg1);\n            }\n        }\n    }\n\n    //not documented - use getRotation\n    getLocalEulerAngles()\n    {\n        return new Vector3(_Math.radToDeg(this.entity.rotation.x) % 360,\n                           _Math.radToDeg(this.entity.rotation.y) % 360,\n                           _Math.radToDeg(this.entity.rotation.z) % 360\n                          );\n    }\n\n    /**\n     Set the euler angles rotation in degrees.\n    Polymorphic : can take various agruments of various types. Possible arguments number is 1, 2 or 3.\n\n     @method setLocalRotation\n     @param {float|Vector3|Vector2} number|Vector3|Vector2 Value for the new rotation of the transform. If a Vector3 is given, its x, y, z will be used for the rotation x, y, z. If a Vector2 is given, its x, y will be used for the rotation x and y, but z will be unchanged. If a number is given, it will be the position x.\n    @param {float} Number Value for the new y rotation of the transform.\n    @param {float} Number Value for the new z rotation of the transform.\n     */\n    setLocalRotation()\n    {\n        this.setLocalEulerAngles.apply(this, arguments);\n    }\n\n    /**\n    * Sets this transform's x rotation\n    *\n    * @method setLocalRotationX\n    * @param {Number} arg\n    */\n    setLocalRotationX(arg)\n    {\n        if(typeof arg === \"number\")\n        {\n            this.entity.rotation.x = _Math.degToRad(arg);\n        }\n    }\n    /**\n    * Sets this transform's y rotation\n    *\n    * @method setLocalRotationY\n    * @param {Number} arg\n    */\n    setLocalRotationY(arg)\n    {\n        if(typeof arg === \"number\")\n        {\n            this.entity.rotation.y = _Math.degToRad(arg);\n        }\n    }\n    /**\n    * Sets this transform's z rotation\n    *\n    * @method setLocalRotationZ\n    * @param {Number} arg\n    */\n    setLocalRotationZ(arg)\n    {\n        if(typeof arg === \"number\")\n        {\n            this.entity.rotation.z = _Math.degToRad(arg);\n        }\n    }\n\n    /**\n     * Get the current local rotation of this transform\n     *\n     * @method getLocalRotation\n     * @return {Vector3} localRotation vector\n    */\n    getLocalRotation()\n    {\n        return this.getLocalEulerAngles();\n    }\n\n    /**\n     * Get the current x local rotation of this transform\n     *\n     * @method getLocalRotationX\n     * @return {Number} localRotation x value\n    */\n    getLocalRotationX()\n    {\n        return this.getLocalEulerAngles().x;\n    }\n\n    /**\n     * Get the current y local rotation of this transform\n     *\n     * @method getLocalRotationY\n     * @return {Number} localRotation y value\n    */\n    getLocalRotationY()\n    {\n        return this.getLocalEulerAngles().y;\n    }\n\n    /**\n     * Get the current z local rotation of this transform\n     *\n     * @method getLocalRotationZ\n     * @return {Number} localRotation z value\n    */\n    getLocalRotationZ()\n    {\n        return this.getLocalEulerAngles().z;\n    }\n\n    /**\n     Set the local position of the transform (and to the object attach to it).\n     Polymorphic : can take various agruments of various types. Possible arguments number is 1, 2 or 3.\n\n     @method setLocalPosition\n     @param {float|Vector3|Vector2} number|Vector3|Vector2 Value for the new position of the transform. If a Vector3 is given, its x, y, z will be used for the position x, y, z. If a Vector2 is given, its x, y will be used for the position x and y, but z will be unchanged. If a number is given, it will be the position x.\n    @param {float} Number Value for the new y position of the transform.\n    @param {float} Number Value for the new z position of the transform.\n     */\n    setLocalPosition(arg1, arg2, arg3)\n    {\n        if(arguments.length === 3){//x,y,z float\n\n            this.entity.position.x = arg1;\n            this.entity.position.y = arg2;\n            this.entity.position.z = arg3;\n\n        }else if(arguments.length === 2){\n\n            if(typeof arg1 === \"number\" && typeof arg2 === \"number\"){\n                this.entity.position.x = arg1;\n                this.entity.position.y = arg2;\n            }\n\n        }else if(arguments.length === 1){//direct vector\n\n            if(arg1 instanceof Vector3){\n\n                this.entity.position.x = arg1.x;\n                this.entity.position.y = arg1.y;\n                this.entity.position.z = arg1.z;\n\n            }else if(arg1 instanceof Vector2){\n\n                this.entity.position.x = arg1.x;\n                this.entity.position.y = arg1.y;\n\n            }else if(typeof arg1 === \"number\"){\n                this.entity.position.x = arg1;\n                this.entity.position.y = arg1;\n                this.entity.position.z = arg1;\n            }\n        }\n    }\n\n    /**\n    * Sets this transform's x position\n    *\n    * @method setLocalPositionX\n    * @param {Number} arg\n    */\n    setLocalPositionX(arg)\n    {\n        if(typeof arg === \"number\"){\n            this.entity.position.x = arg;\n        }\n    }\n    /**\n    * Sets this transform's y position\n    *\n    * @method setLocalPositionY\n    * @param {Number} arg\n    */\n    setLocalPositionY(arg)\n    {\n        if(typeof arg === \"number\"){\n            this.entity.position.y = arg;\n        }\n    }\n    /**\n    * Sets this transform's z position\n    *\n    * @method setLocalPositionZ\n    * @param {Number} arg\n    */\n    setLocalPositionZ(arg)\n    {\n        if(typeof arg === \"number\"){\n            this.entity.position.z = arg;\n        }\n    }\n\n    /**\n    Gets the local position of this transform\n\n    @method getLocalPosition\n    @return {Vector3} localPosition vector\n    */\n    getLocalPosition()\n    {\n        var tempVec = new Vector3(this.entity.position.x,\n                                  this.entity.position.y,\n                                  this.entity.position.z);\n        return tempVec;\n    }\n\n    /**\n    Gets the local x position of this transform\n\n    @method getLocalPositionX\n    @return {Number} localPosition x\n    */\n    getLocalPositionX()\n    {\n        var tempVec = this.entity.position.x;\n        return tempVec;\n    }\n\n    /**\n    Gets the local x position of this transform\n\n    @method getLocalPositionY\n    @return {Number} localPosition y\n    */\n    getLocalPositionY()\n    {\n        var tempVec = this.entity.position.y;\n        return tempVec;\n    }\n\n    /**\n    Gets the local z position of this transform\n\n    @method getLocalPositionZ\n    @return {Number} localPosition z\n    */\n    getLocalPositionZ()\n    {\n        var tempVec = this.entity.position.z;\n        return tempVec;\n    }\n\n    /**\n\n    @method getWorldPosition\n    @return {Vector3} worlPosition vector of the object\n    */\n    getWorldPosition()\n    {\n        var vector = new Vector3();\n        vector.setFromMatrixPosition( this.entity.matrixWorld );\n        return vector;\n    }\n\n    /**\n    Set the scale of the transform.\n    Polymorphic : can take various agruments of various types. Possible arguments number is 1, 2 or 3.\n\n    @method setLocalScale\n    @param {float|Vector3|Vector2} number|Vector3|Vector2 Value for the new scale. If a Vector3 is given, its x, y, z will be used for the scale x, y, z. If a Vector2 is given, its x, y will be used for the scale x and y, but z will be 1. If a number is given, it will be the scale x.\n    @param {float} Number Value for the new y scale.\n    @param {float} Number Value for the new z scale.\n    */\n    setLocalScale(arg1, arg2, arg3)\n    {\n        if(arguments.length === 3)\n        {\n            this.entity.scale.x = arg1;\n            this.entity.scale.y = arg2;\n            this.entity.scale.z = arg3;\n        }\n        else if(arguments.length === 2)\n        {\n            if(typeof arg1 === \"number\" && typeof arg2 === \"number\")\n            {\n                this.entity.scale.x = arg1;\n                this.entity.scale.y = arg2;\n            }\n        }\n        else if(arguments.length === 1)\n        {\n            if(arg1 instanceof Vector3)\n            {\n                this.entity.scale.x = arg1.x;\n                this.entity.scale.y = arg1.y;\n                this.entity.scale.z = arg1.z;\n            }\n            else if(arg1 instanceof Vector2)\n            {\n                this.entity.scale.x = arg1.x;\n                this.entity.scale.y = arg1.y;\n            }\n            else if\n                (typeof arg1 === \"number\")\n            {\n                this.entity.scale.x = arg1;\n                this.entity.scale.y = arg1;\n                this.entity.scale.z = arg1;\n            }\n        }\n    }\n\n    /**\n    * Sets this transform's x scale\n    *\n    * @method setLocalScaleX\n    * @param {Number} arg\n    */\n    setLocalScaleX(arg)\n    {\n        if(typeof arg === \"number\")\n        {\n            this.entity.scale.x = arg;\n        }\n    }\n    /**\n    * Sets this transform's y scale\n    *\n    * @method setLocalScaleY\n    * @param {Number} arg\n    */\n    setLocalScaleY(arg)\n    {\n        if(typeof arg === \"number\")\n        {\n            this.entity.scale.y = arg;\n        }\n    }\n    /**\n    * Sets this transform's z scale\n    *\n    * @method setLocalScaleZ\n    * @param {Number} arg\n    */\n    setLocalScaleZ(arg)\n    {\n        if(typeof arg === \"number\")\n        {\n            this.entity.scale.z = arg;\n        }\n    }\n\n    /**\n\n    @method getLocalScale\n    @return {Vector3} localScale vector\n    */\n    getLocalScale()\n    {\n        var temp = new Vector3(this.entity.scale.x,\n                               this.entity.scale.y,\n                               this.entity.scale.z\n                              );\n        return temp;\n    }\n\n    /**\n    @method getLocalScaleX\n    @return {Number} localScale x\n    */\n    getLocalScaleX()\n    {\n        var temp = this.entity.scale.x;\n        return temp;\n    }\n\n    /**\n    @method getLocalScaleY\n    @return {Number} localScale y\n    */\n    getLocalScaleY()\n    {\n        var temp = this.entity.scale.y;\n        return temp;\n    }\n\n    /**\n    @method getLocalScaleZ\n    @return {Number} localScale z\n    */\n    getLocalScaleZ()\n    {\n        var temp = this.entity.scale.z;\n        return temp;\n    }\n\n    /**\n     * Perform a RayCast picking\n     *\n     * @method pick\n     * @param {Camera} cam The camera to use as a ray caster.\n     * @param {number} x The x coordinate in screen space for the ray casting\n     * @param {number} y The y coordinate in screen space for the ray casting\n     * @return {Object} if picking success, gives an object as {point:{x,y,z}, uv:{u,v}, distance:dist}, null otherwise.\n     */\n    pick(cam, x,y)\n    {\n        var targetList = [];\n        targetList.push(this.entity);\n\n        //FIXME : will bug with non fullscreen configuration!!!\n        //IDEA : use the context referenced in the cam to grab the canvas!\n        var nx = 0;\n        var ny = 0;\n\n        if(cam.context)\n        {\n            var canvas = cam.context.getCanvasSize();\n            nx = ( x / canvas.width ) * 2 - 1;\n            ny = - ( y / canvas.height ) * 2 + 1;\n        }\n        else\n        {\n            nx = ( x / window.innerWidth ) * 2 - 1;\n            ny = - ( y / window.innerHeight ) * 2 + 1;\n        }\n        // create a Ray with origin at the mouse position\n        //and direction into the scene (camera direction)\n\n        var raycaster = new THREE.Raycaster(); // create once\n\n        var vector = new THREE.Vector3( nx, ny, 1 );\n        var camera = cam.transform.entity;\n\n        var ray = raycaster.setFromCamera( vector, camera );\n\n        var intersects = raycaster.intersectObjects( [this.entity] );\n\n        //debug.log(\"intersects\",nx,ny, intersects);\n        // if there is one (or more) intersections\n        if ( intersects.length > 0 )\n        {\n            let temp = {};\n            temp.point = intersects[0].point;\n            temp.uv = intersects[0].uv;\n            temp.distance = intersects[0].distance;\n            return temp;\n        }\n        else // there are no intersections\n        {\n            return null;\n        }\n    }\n\n    /**\n    * Return a Vector2 giving the screen coordinates of the object\n    * @method getScreenCoordinates\n    * @param {Context} context the current Mobilizing context\n    * @param {Camera} camera the Camera to use for the projection\n    * @return {Vector2} the screen coordinates of the object\n    */\n    getScreenCoordinates(context, camera)\n    {\n        if(camera.type === \"perspective\")\n        {\n            var vector = new Vector3();\n\n            // TODO: need to update this when resize window\n            var widthHalf = 0.5 * context.getCanvasSize().width * camera.viewport.width;\n            var heightHalf = 0.5 * context.getCanvasSize().height * camera.viewport.height;\n\n            this.entity.updateMatrixWorld();\n            vector.setFromMatrixPosition(this.entity.matrixWorld);\n            vector.project(camera.camera);\n\n            vector.x = ( vector.x * widthHalf ) + widthHalf;\n            vector.y = -( vector.y * heightHalf ) + heightHalf;\n\n            return {x: vector.x,\n                    y: vector.y };\n        }\n\n    }\n\n    /**\n    * Adds a child to this transform (argument must be a transform too)\n    *\n    * @method addChild\n    * @param {Transform} child\n    */\n    addChild(child)\n    {\n        this.children.push(child.mobObject);\n        this.entity.add(child.entity);\n    }\n\n    /**\n    * Removes a child from the children chain\n    *\n    * @method removeChild\n    * @param {Object} child\n    */\n    removeChild(child)\n    {\n        this.children.splice( this.children.indexOf(child),1);\n        this.entity.remove(child.entity);\n    }\n\n    /**\n    * Gets an array containning all the children objects of this transform\n    *\n    * @method getChildren\n    * @return {Array}\n    */\n    getChildren(){\n        return this.children;\n    }\n\n    /**\n    * Gets one of all the children objects of this transform\n    *\n    * @method getChild\n    * @param {Number} index Index of the child to get\n    * @return {Object}\n    */\n    getChild(index){\n        return this.children[index];\n    }\n\n    /**\n    * Sets the render order of this object. The sortObjects of the renderer should be true for this property to have any effect.\n    *\n    * @method setRenderOrder\n    */\n    setRenderOrder(val){\n        this.entity.renderOrder = val;\n    }\n\n    /*====================\n    * deprecated methods!\n    * ====================*/\n\n    //what to do here ? Let it in tranform and Mesh or choose one of them ?\n    setVisible(visible)\n    {\n        this.entity.visible = visible;\n    }\n\n    getVisible()\n    {\n        return this.entity.visible;\n    }\n\n}\n\n// module exports\nexport { Transform };","import * as THREE from 'three';\nimport {getOrDefault} from '../helpers/Misc';\nimport {Vector2} from '../core/Vector2';\nimport {Vector3} from '../core/Vector3';\nimport {Matrix4} from '../core/Matrix4';\nimport {Color} from '../core/Color';\nimport {Material} from '../scene/Material';\nimport {Transform} from '../scene/Transform';\nimport {_Math} from '../helpers/Math';\nimport {debug} from '../helpers/Debug';\n\n/**\n A Mesh is the aggregation of a geomtery, made of vertices (Vector3 Array), texture coordinates (or uv, Vector2 Array), vertexColor (Color Array) and various methods to create and modify 3D objects that have a material (see {{#crossLink \"Material\"}}{{/crossLink}}) and a transform (see {{#crossLink \"Transform\"}}{{/crossLink}}).\n\nPrimitive types are documented in their respective private construction methods :\n<ul>\n<li>plane : a 4 points defined rectangular plane, see <a href=\"#method_constructPlane\">constructPlane</a></li>\n<li>quad  : a 4 points defined quadrilateral shape, see <a href=\"#method_constructQuad\">constructQuad</a></li>\n<li>box : a 6 faces defined 3D box with width, height and depth, see <a href=\"#method_constructBox\">constructBox</a></li>\n<li>cube : a 3D cube, see <a href=\"#method_constructCube\">constructCube</a></li>\n<li>sphere : a 3D sphere, see <a href=\"#method_constructSphere\">constructSphere</a></li>\n<li>circle : a flat circle, see <a href=\"#method_constructCircle\">constructCircle</a></li>\n<li>cylinder : a 3D cylinder, see <a href=\"#method_constructCylinder\">constructCylinder</a></li>\n<li>icosahedron : a 3D icosahedron, see <a href=\"#method_constructIcosahedron\">constructIcosahedron</a></li>\n<li>octahedron : a 3D octahedron, see <a href=\"#method_constructOctahedron\">constructOctahedron</a></li>\n<li>text : a 3D text extruded frome a typeface, see <a href=\"#method_constructText\">constructText</a></li>\n<li>node : a 3D node, to create parent/child hierarchy structure, see <a href=\"#method_constructNode\">constructNode</a></li>\n<li>line : a 2 points defined line, see <a href=\"#method_constructLine\">constructLine</a></li>\n<li>sprite : a billboard textured plane, see <a href=\"#method_constructSprite\">constructSprite</a></li>\n<li>arc : a flat coordinates generated arc, see <a href=\"#method_constructArc\">constructArc</a></li>\n</u>\n\n  @class Mesh\n */\n\nclass Mesh\n{\n    /**\n    * @class Mesh\n    * @constructor\n    *\n    * @param {Object} params parameters object\n    *    @example\n    *     function script()\n    *     {\n    *         var M;\n    *         var R;\n    *     \n    *         var camera;\n    *         var light;\n    *         var light2;\n    *     \n    *         var circle1;\n    *         var circle2;\n    *     \n    *         this.setup = function()\n    *         {\n    *     \n    *             M = this.getContext();\n    *     \n    *             R = new Mobilizing.Renderer3D();\n    *             M.addComponent(R);\n    *     \n    *             var camera = new Mobilizing.Camera();\n    *             camera.setFarPlane(100000);\n    *             R.addCamera(camera);\n    *     \n    *             light = new Mobilizing.Light();\n    *             light.setIntensity(1.2);\n    *             light.transform.setLocalPosition(20,20,100);\n    *             R.addToCurrentScene(light);\n    *     \n    *             light2 = new Mobilizing.Light();\n    *             light2.transform.setLocalPosition(-20,-20,-10);\n    *             R.addToCurrentScene(light2);\n    *     \n    *             circle1 = new Mobilizing.Mesh({primitive:\"circle\"});\n    *             circle1.transform.setLocalPosition(-2,0,-15);\n    *             R.addToCurrentScene(circle1);\n    *     \n    *             circle2 = new Mobilizing.Mesh({primitive:\"circle\",\n    *                                            radius:2,\n    *                                            segments:20,\n    *                                            thetaStart:Math.PI/8,\n    *                                            thetaLength:Math.PI,\n    *                                            material:\"lambert\"});\n    *             circle2.material.setWireframe(true);\n    *             circle2.transform.setLocalPosition(2,0,-15);\n    *             R.addToCurrentScene(circle2);\n    *             console.log(circle2);\n    *         };\n    *     \n    *         var r = 0;\n    *         this.update = function()\n    *         {\n    *             r++;\n    *             circle2.transform.setLocalRotation(-33,r,33);\n    *         };\n    *     };\n    *\n    * @param {String} params.primitive The name of the primitive to create, can be one of the listed names in this class description.\n    * @param {String} [params.material=\"phong\"] The name of the material to attach to the created primitive, can be one of : lambert, basic, phong.\n    * @param {Object} [params.geometry=undefined] An already existing geometry\n    */\n    constructor(params)\n    {\n        this.primitive = getOrDefault(params, \"primitive\", \"box\");\n\n        this.name = getOrDefault(params, \"name\", undefined);\n        this.material = getOrDefault(params, \"material\", \"phong\");\n        this._geometry = getOrDefault(params, \"geometry\", undefined);\n\n        this.visible = true;\n\n        //construct a geometry according to the argument\n        switch(this.primitive)\n        {\n            case \"plane\":\n\n                this.constructPlane(params);\n                break;\n\n            case \"quad\":\n\n                this.constructQuad(params);\n                break;\n\n            case \"box\":\n\n                this.constructBox(params);\n                break;\n\n            case \"cube\":\n\n                this.constructCube(params);\n                break;\n\n            case \"sphere\":\n\n                this.constructSphere(params);\n                break;\n\n            case \"circle\":\n\n                this.constructCircle(params);\n                break;\n\n            case \"cylinder\":\n\n                this.constructCylinder(params);\n                break;\n\n            case \"icosahedron\":\n\n                this.constructIcosahedron(params);\n                break;\n\n            case \"octahedron\":\n\n                this.constructOctahedron(params);\n                break;\n\n            case \"text\":\n\n                this.constructText(params);\n                break;\n\n            case \"node\":\n\n                this.constructNode();\n                break;\n\n            case \"line\":\n\n                this.constructLine(params);\n                break;\n\n            case \"sprite\":\n\n                this.constructSprite();\n                break;\n\n            case \"arc\":\n\n                this.constructArc(params);\n                break;\n\n            case \"custom\":\n\n                this.constructCustom(params);\n                break;\n\n            default:\n\n                this.constructNode();\n                break;\n        }\n\n        //agglomerate a transform object\n        if(!this.transform)\n        {\n            this.transform = new Transform(this);\n        }\n    }\n\n    /**\n    * Geometry and resulting mesh method, you should not use directly this method as it is used internally by the constructor. This documentation only aims to help you identify the possibles parameters for a particular shape.\n    * \n    * A node is an empty 3D object. It has no geometry, but has a tansform, therefore it can be used to create the root element for grouping objects. In Mobilizing, transforms represents a kind of invisible coordinate axis that can be tansformed in space. We use it to construct parent/child relationships, like in `object.transform.addChild(otherObject.transform)`\n    * \n    * @method constructNode\n    */\n    constructNode()\n    {\n        this.mesh = new THREE.Object3D();\n    }\n\n    /**\n    * Geometry and resulting mesh method, you should not use directly this method as it is used internally by the constructor. This documentation only aims to help you identify the possibles parameters for a particular shape.\n    * \n    * @method constructLine\n    * @param {Object} params Parameters object, given by the constructor.\n    * @param {Number} [params.point1=Vector3(0, -1, 0)] 1st point 3D coordinates\n    * @param {Number} [params.point2=Vector3(0, 1, 0)] 2nd point 3D coordinates\n    */\n    constructLine(params)\n    {\n        //line have special material so we must manage it specifically\n        this._geometry = new THREE.Geometry();\n        this._geometry.dynamic = true;\n\n        var point1 = getOrDefault(params, \"point1\", new Vector3(0,-1,0));\n        var point2 = getOrDefault(params, \"point2\", new Vector3(0,1,0));\n\n        console.log(point1, point2);\n        this._geometry.vertices.push(point1, point2);\n\n        this.material = new Material({type:\"line\"});\n\n        this.mesh = new THREE.Line( this._geometry, this.material._material );\n    }\n\n    /**\n    * Geometry and resulting mesh method, you should not use directly this method as it is used internally by the constructor. This documentation only aims to help you identify the possibles parameters for a particular shape.\n    * \n    * @method constructSprite\n    */\n    constructSprite()\n    {\n        this.material = new Material({type:\"sprite\"});\n        this.mesh = new THREE.Sprite( this.material._material );\n    }\n\n    /**\n    * Geometry and resulting mesh method, you should not use directly this method as it is used internally by the constructor. This documentation only aims to help you identify the possibles parameters for a particular shape.\n    * \n    * @method constructPlane\n    * @param {Object} params Parameters object, given by the constructor.\n    * @param {Number} [params.width=1] the plane width in world unit\n    * @param {Number} [params.height=1] the plane height in world unit\n    * @param {Number} [params.segments=1] tesselation size for all sides\n    * @param {Number} [params.widthSegments=1] horizontal tesselation size, overrides segments parameters for this side\n    * @param {Number} [params.heightSegments=1] vertical tesselation size, overrides segments parameters for this side\n    */\n    constructPlane(params)\n    {\n        //width height widthSegments heightSegments\n        var width           = getOrDefault(params, \"width\", 1);\n        var height          = getOrDefault(params, \"height\", 1);\n        var segments = getOrDefault(params, \"segments\", 1);\n        var widthSegments   = getOrDefault(params, \"widthSegments\", segments);\n        var heightSegments  = getOrDefault(params, \"heightSegments\", segments);\n\n        this._geometry   = new THREE.PlaneBufferGeometry(width,\n                                                         height,\n                                                         widthSegments,\n                                                         heightSegments);\n\n        //manage the material according to the passed params, see the attachMaterial method below\n        this.attachMaterial(this.material);\n\n        this.mesh = new THREE.Mesh( this._geometry, this.material._material );\n    }\n\n    /**\n    * Geometry and resulting mesh method, you should not use directly this method as it is used internally by the constructor. This documentation only aims to help you identify the possibles parameters for a particular shape.\n    * \n    * @method constructQuad\n    * @param {Object} params Parameters object, given by the constructor.\n    * @param {Number} [params.point1=Vector2(-1,  1)] upper left point\n    * @param {Number} [params.point2=Vector2( 1,  1)] upper right point\n    * @param {Number} [params.point3=Vector2( 1, -1)] lower right point\n    * @param {Number} [params.point4=Vector2(-1, -1)] lower left point\n    */\n    constructQuad(params)\n    {\n        var point1 = getOrDefault(params, \"point1\", new Vector2(-1,  1));\n        var point2 = getOrDefault(params, \"point2\", new Vector2( 1,  1));\n        var point3 = getOrDefault(params, \"point3\", new Vector2( 1, -1));\n        var point4 = getOrDefault(params, \"point4\", new Vector2(-1, -1));\n\n        var rectShape   = new THREE.Shape();\n        rectShape.moveTo( point1.x, point1.y );\n        rectShape.lineTo( point2.x, point2.y );\n        rectShape.lineTo( point3.x, point3.y );\n        rectShape.lineTo( point4.x, point4.y );\n        rectShape.lineTo( point1.x, point1.y );\n\n        this._geometry   = new THREE.ShapeGeometry( rectShape );\n\n        //manage the material according to the passed params, see the attachMaterial method below\n        this.attachMaterial(this.material);\n\n        this.mesh = new THREE.Mesh( this._geometry, this.material._material );\n    }\n\n    /**\n    * Geometry and resulting mesh method, you should not use directly this method as it is used internally by the constructor. This documentation only aims to help you identify the possibles parameters for a particular shape.\n    * \n    * @method constructCube\n    * @param {Object} params Parameters object, given by the constructor.\n    * @param {Number} [params.size=1] the cube dimensions in world unit\n    * @param {Number} [params.segments=1] tesselation size for all sides\n    * @param {Number} [params.widthSegments=1] horizontal tesselation size, overrides segments parameters for this side\n    * @param {Number} [params.heightSegments=1] vertical tesselation size, overrides segments parameters for this side\n    * @param {Number} [params.depthSegments=1] depth tesselation size, overrides segments parameters for this side\n    */\n    constructCube(params)\n    {\n        var size = getOrDefault(params, \"size\", 1);\n        var segments = getOrDefault(params, \"segments\", 1);\n        var widthSegments   = getOrDefault(params, \"widthSegments\", segments);\n        var heightSegments  = getOrDefault(params, \"heightSegments\", segments);\n        var depthSegments   = getOrDefault(params, \"depthSegments\", segments);\n\n        this._geometry = new THREE.BoxGeometry(size,\n                                               size,\n                                               size,\n                                               widthSegments,\n                                               heightSegments,\n                                               depthSegments);\n\n        //manage the material according to the passed params, see the attachMaterial method below\n        this.attachMaterial(this.material);\n\n        this.mesh = new THREE.Mesh( this._geometry, this.material._material );\n    }\n\n    /**\n    * Geometry and resulting mesh method, you should not use directly this method as it is used internally by the constructor. This documentation only aims to help you identify the possibles parameters for a particular shape.\n    * \n    * @method constructBox\n    * @param {Object} params Parameters object, given by the constructor.\n    * @param {Number} [params.width=1] the box width in world unit\n    * @param {Number} [params.height=1] the box height in world unit\n    * @param {Number} [params.depth=1] the box depth in world unit\n    * @param {Number} [params.segments=1] tesselation size for all sides\n    * @param {Number} [params.widthSegments=1] horizontal tesselation size, overrides segments parameters for this side\n    * @param {Number} [params.heightSegments=1] vertical tesselation size, overrides segments parameters for this side\n    * @param {Number} [params.depthSegments=1] depth tesselation size, overrides segments parameters for this side\n    */\n    constructBox(params)\n    {\n        //width height depth widthSegments heightSegments depthSegments\n        var width           = getOrDefault(params, \"width\", 1);\n        var height          = getOrDefault(params, \"height\", 1);\n        var depth           = getOrDefault(params, \"depth\", 1);\n        var segments = getOrDefault(params, \"segments\", 1);\n        var widthSegments   = getOrDefault(params, \"widthSegments\", 1);\n        var heightSegments  = getOrDefault(params, \"heightSegments\", 1);\n        var depthSegments   = getOrDefault(params, \"depthSegments\", 1);\n\n        this._geometry       = new THREE.BoxGeometry(width,\n                                                     height,\n                                                     depth,\n                                                     widthSegments,\n                                                     heightSegments,\n                                                     depthSegments);\n\n        //manage the material according to the passed params, see the attachMaterial method below\n        this.attachMaterial(this.material);\n\n        this.mesh = new THREE.Mesh( this._geometry, this.material._material );\n    }\n\n    /**\n    * Geometry and resulting mesh method, you should not use directly this method as it is used internally by the constructor. This documentation only aims to help you identify the possibles parameters for a particular shape.\n    * \n    * @method constructSphere\n    * @param {Object} params Parameters object, given by the constructor.\n    * @param {Number} [params.radius=1] the sphere radius in world unit\n    * @param {Number} [params.segments=8] tesselation size for all axis\n    * @param {Number} [params.widthSegments=8] horizontal tesselation size\n    * @param {Number} [params.heightSegments=8] vertical tesselation size\n    * @param {Number} [params.phiStart=0] horizontal angle start of the sphere\n    * @param {Number} [params.phiLength=Math.PI*2] horizontal length of the sphere\n    * @param {Number} [params.thetaStart=0] vertical angle start of the sphere\n    * @param {Number} [params.thetaLength=Math.PI] vertical length of the sphere\n    */\n    constructSphere(params)\n    {\n        //radius widthSegments heightSegments phiStart phiLength thetaStart thetaLength\n        var radius              = getOrDefault(params, \"radius\", 1);\n        var segments            = getOrDefault(params, \"segments\", 8);\n        var widthSegments       = getOrDefault(params, \"widthSegments\", segments);\n        var heightSegments      = getOrDefault(params, \"heightSegments\", segments);\n        var phiStart            = getOrDefault(params, \"phiStart\", 0);\n        var phiLength           = getOrDefault(params, \"phiLength\", Math.PI*2);\n        var thetaStart          = getOrDefault(params, \"thetaStart\", 0);\n        var thetaLength         = getOrDefault(params, \"thetaLength\", Math.PI);\n\n        this._geometry = new THREE.SphereGeometry(radius,\n                                                  widthSegments,\n                                                  heightSegments,\n                                                  phiStart,\n                                                  phiLength,\n                                                  thetaStart,\n                                                  thetaLength);\n        this._geometry.dynamic = true;\n\n        //manage the material according to the passed params, see the attachMaterial method below\n        this.attachMaterial(this.material);\n\n        this.mesh = new THREE.Mesh( this._geometry, this.material._material );\n    }\n\n    /**\n    * Geometry and resulting mesh method, you should not use directly this method as it is used internally by the constructor. This documentation only aims to help you identify the possibles parameters for a particular shape.\n    * \n    * @method constructCircle\n    * @param {Object} params Parameters object, given by the constructor.\n    * @param {Number} [params.radius=1] the circle radius in world unit\n    * @param {Number} [params.segments=32] horizontal tesselation size\n    * @param {Number} [params.thetaStart=0] vertical angle start of the circle\n    * @param {Number} [params.thetaLength=Math.PI] vertical length of the circle\n    */\n    constructCircle(params)\n    {\n        //radius segments thetaStart thetaLength\n        var radius      = getOrDefault(params, \"radius\", 1);\n        var segments    = getOrDefault(params, \"segments\", 32);\n        var thetaStart  = getOrDefault(params, \"thetaStart\", 0);\n        var thetaLength = getOrDefault(params, \"thetaLength\", Math.PI*2);\n\n        this._geometry = new THREE.CircleGeometry(radius,\n                                                  segments,\n                                                  thetaStart,\n                                                  thetaLength);\n\n        //manage the material according to the passed params, see the attachMaterial method below\n        this.attachMaterial(this.material);\n\n        this.mesh = new THREE.Mesh( this._geometry, this.material._material );\n    }\n\n    /**\n    * Geometry and resulting mesh method, you should not use directly this method as it is used internally by the constructor. This documentation only aims to help you identify the possibles parameters for a particular shape.\n    * \n    * @method constructCylinder\n    * @param {Object} params Parameters object, given by the constructor.\n    * @param {Number} [params.radiusTop=1] the cylinder top radius in world unit\n    * @param {Number} [params.radiusBottom=1] the cylinder bottom radius in world unit\n    * @param {Number} [params.height=1] the cylinder height in world unit\n    * @param {Number} [params.radiusSegments=32] horizontal tesselation size\n    * @param {Number} [params.heightSegments=1] vertical tesselation size\n    * @param {Number} [params.openEnded=false] close the ends of the shape or not\n    * @param {Number} [params.thetaStart=0] vertical angle start of the cylinder\n    * @param {Number} [params.thetaLength=Math.PI] vertical length of the cylinder\n    */\n    constructCylinder(params)\n    {\n        //radiusTop radiusBottom height radiusSegments heightSegments openEnded thetaStart thetaLength\n        var radiusTop       = getOrDefault(params, \"radiusTop\", 1);\n        var radiusBottom    = getOrDefault(params, \"radiusBottom\", 1);\n        var height          = getOrDefault(params, \"height\", 1);\n        var radiusSegments  = getOrDefault(params, \"radiusSegments\", 32);\n        var heightSegments  = getOrDefault(params, \"heightSegments\", 1);\n        var openEnded       = getOrDefault(params, \"openEnded\", false);\n        var thetaStart      = getOrDefault(params, \"thetaStart\", 0);\n        var thetaLength     = getOrDefault(params, \"thetaLength\", Math.PI*2);\n\n        this._geometry = new THREE.CylinderGeometry(radiusTop,\n                                                    radiusBottom,\n                                                    height,\n                                                    radiusSegments,\n                                                    heightSegments,\n                                                    openEnded,\n                                                    thetaStart,\n                                                    thetaLength);\n\n        //manage the material according to the passed params, see the attachMaterial method below\n        this.attachMaterial(this.material);\n\n        this.mesh = new THREE.Mesh( this._geometry, this.material._material );\n    }\n\n    /**\n    * Geometry and resulting mesh method, you should not use directly this method as it is used internally by the constructor. This documentation only aims to help you identify the possibles parameters for a particular shape.\n    * \n    * @method constructIcosahedron\n    * @param {Object} params Parameters object, given by the constructor.\n    * @param {Number} [params.radius=1] the icosahedron radius in world unit\n    * @param {Number} [params.detail=0] the icosahedron number of points (tesselation and \"roundness\")\n    */\n    constructIcosahedron(params)\n    {\n        //radius detail\n        var radius = getOrDefault(params, \"radius\", 1);\n        var detail = getOrDefault(params, \"detail\", 0);\n\n        this._geometry  = new THREE.IcosahedronGeometry(radius, detail);\n        this._geometry.dynamic = true;\n\n        //manage the material according to the passed params, see the attachMaterial method below\n        this.attachMaterial(this.material);\n\n        this.mesh = new THREE.Mesh( this._geometry, this.material._material );\n    }\n\n    /**\n    * Geometry and resulting mesh method, you should not use directly this method as it is used internally by the constructor. This documentation only aims to help you identify the possibles parameters for a particular shape.\n    * \n    * @method constructOctahedron\n    * @param {Object} params Parameters object, given by the constructor.\n    * @param {Number} [params.radius=1] the octahedron radius in world unit\n    * @param {Number} [params.detail=0] the octahedron number of points (tesselation and \"roundness\")\n    */\n    constructOctahedron(params)\n    {\n        var radius = getOrDefault(params, \"radius\", 1);\n        var detail = getOrDefault(params, \"detail\", 0);\n\n        this._geometry = new THREE.OctahedronGeometry( radius, detail);\n        this._geometry.dynamic = true;\n\n        //manage the material according to the passed params, see the attachMaterial method below\n        this.attachMaterial(this.material);\n\n        this.mesh = new THREE.Mesh( this._geometry, this.material._material );\n    }\n\n    /**\n    * Geometry and resulting mesh method, you should not use directly this method as it is used internally by the constructor. This documentation only aims to help you identify the possibles parameters for a particular shape.\n    * \n    * 3D Text is created from a typeface represented in JSON, please use <a href=\"http://gero3.github.io/facetype.js/\">facetype.js</a> to generate a JSON from a font file. The generated JSON must be loader with a Loader.load.JSON() method and passed to the constructor.\n    * \n    * @method constructText\n    * @param {Object} params Parameters object, given by the constructor.\n    * @param {Number} [params.text=\"text\"] the text string\n    * @param {Number} [params.fontSize=1] the text font height\n    * @param {Number} [params.height=1] the glyph extrusion height (or visually speaking, depth). 0 to have flat letters.\n    * @param {Number} [params.segments=5] the text details and tesselation\n    * @param {Number} params.font the text font to use. Must be a json generated from facetype.js\n    */\n    constructText(params)\n    {\n        //FIXME : il faut utiliser un loader pour charger le json de la typo produit par typeface.js\n        let text        = getOrDefault(params, \"text\", \"text\");\n        let fontSize    = getOrDefault(params, \"fontSize\", 1);\n        let height      = getOrDefault(params, \"height\", 1);\n        let segments    = getOrDefault(params, \"segments\", 5);\n        let font        = getOrDefault(params, \"font\", undefined);\n\n        let threeFont = new THREE.Font(font);\n        \n        this._geometry = new THREE.TextGeometry(text, {size: fontSize,\n                                                       height: height,\n                                                       curveSegments: segments,\n                                                       font: threeFont,\n                                                       weight: \"normal\",\n                                                       style: \"normal\",\n                                                       bevelEnabled: false}\n                                               );\n\n        this._geometry.center();\n\n        //manage the material according to the passed params, see the attachMaterial method below\n        this.attachMaterial(this.material);\n\n        this.mesh = new THREE.Mesh( this._geometry, this.material._material );\n    }\n\n    /**\n    * Geometry and resulting mesh method, you should not use directly this method as it is used internally by the constructor. This documentation only aims to help you identify the possibles parameters for a particular shape.\n    * \n    * @method constructArc\n    * @param {Object} params Parameters object, given by the constructor.\n    * @param {Number} [params.radius=1] the arc radius in world unit\n    * @param {Number} [params.width=0.2] the arc width (or weight, distance between the exterior segments and the center) in world unit\n    * @param {Number} [params.segments=32] the segments number (detail level)\n    * @param {Number} [params.startAngle=0] 0 and Math.PI*2 are at 3 o'clock, value is counter clock-wise\n    * @param {Number} [params.endAngle=Math.PI*2] 0 and Math.PI*2 are at 3 o'clock, value is counter clock-wise\n    * @param {Color} [params.color=Color.white] \n    * @param {Number} [params.center=Vector3.zero] \n    */\n    constructArc(params)\n    {\n        this._geometry = new THREE.Geometry();\n        this._geometry.dynamic = true;\n\n        let radius          = getOrDefault(params, \"radius\", 1);\n        let width           = getOrDefault(params, \"width\", 0.2);\n        let segments        = getOrDefault(params, \"segments\", 32);\n        let startAngle      = getOrDefault(params, \"startAngle\", 0);\n        let endAngle        = getOrDefault(params, \"endAngle\", Math.PI*2);\n        let color           = getOrDefault(params, \"color\", Color.white.clone());\n        let texture         = params.texture;\n        let uvScale         = params.uvScale;\n        let center          = getOrDefault(params, \"center\", Vector3.zero.clone());\n\n        this.createArc({center: center,\n                        radius: radius,\n                        segments: segments,\n                        startAngle: startAngle,\n                        endAngle: endAngle,\n                        color: color,\n                        texture: texture,\n                        width: width,\n                        uvScale: uvScale\n                       });\n    }\n\n    /**\n     * Construct an empty and unfinished Mesh for which a geometry must be constructed. Once filled with vertices, constructMesh method must be called, or a method generating a complete Mesh must be used (i.e generateFillMesh)\n     * \n     * @method constructCustom\n     * @param {Object} params Parameters object, given by the constructor.\n     */\n    constructCustom(params)\n    {\n        this._geometry = getOrDefault(params, \"geometry\", new THREE.Geometry());\n        this._geometry.dynamic = true;\n    }\n\n    /*\n     * =====\n     * Mesh generation from vertices defining segments made shapes\n     * =====\n     */\n\n    /**\n    * Generate the mesh for the given vertices and generates flat uvs for it. Usefull for 2D shapes\n    * @method generateFillMesh\n    */\n    generateFillMesh(vertices)\n    {\n        //main shape to hold paths\n        let shape = new THREE.Shape();\n\n        //draw shape\n        shape.moveTo( vertices[0].x, vertices[0].y );\n        for(let i = 1; i < vertices.length; i++)\n        {\n            shape.lineTo( vertices[i].x, vertices[i].y );\n        }\n        shape.closePath();\n\n        //make a geometry from the shape\n        let geometry = new THREE.ShapeGeometry(shape);\n        //construct the Mob Mesh\n        this._geometry = geometry;\n        this.constructMesh();\n\n        //generate flat uvs\n        this.generateFlatUVs();\n    }\n\n    /**\n    * Generate the flat uvs for this mesh.\n    * @method generateFlatUVs\n    */\n    generateFlatUVs()\n    {\n        let geometry = this._geometry;\n        let uvs = [];\n        let bounds = this.getBoundingBox();\n\n        for(let i = 0; i < geometry.faces.length; i++)\n        {\n            let face = geometry.faces[i];\n            uvs[i] = [new Vector2(_Math.map(geometry.vertices[face.a].x, bounds.min.x,bounds.max.x, 0,1),\n                                  _Math.map(geometry.vertices[face.a].y, bounds.min.y,bounds.max.y, 0,1)),\n                      new Vector2(_Math.map(geometry.vertices[face.b].x, bounds.min.x,bounds.max.x, 0,1),\n                                  _Math.map(geometry.vertices[face.b].y, bounds.min.y,bounds.max.y, 0,1)),\n                      new Vector2(_Math.map(geometry.vertices[face.c].x, bounds.min.x,bounds.max.x, 0,1),\n                                  _Math.map(geometry.vertices[face.c].y, bounds.min.y,bounds.max.y, 0,1))];\n        }\n        this.setUVs(0,uvs);\n    }\n\n\n    /**\n    * Static Utils to generate the stroke for the given vertices with the given stroke width\n    * @static\n    * @method generateStrokeShape\n    * @param {Mesh} mesh to use as a base to get vertices\n    * @param {Number} inflateValue stroke width\n    * @return (Shape) a Three.js Shape to make a geometry from\n    */\n    static generateStrokeShape(mesh, inflateValue)\n    {\n        let points = [];\n        let innerGeom = mesh._geometry.clone();\n        let outterGeom = mesh._geometry.clone();\n\n        let tempOutterGeom = mesh._geometry.clone();\n\n        /*\n         * Expand fill of convex polygon algorithm taken from\n         * \n         * https://stackoverflow.com/questions/3749678/expand-fill-of-convex-polygon\n         * credits to Oren Trutner\n         * Some addition to it by Dominique Cunin\n         */\n\n        //defines the rotation to apply further\n        let rot = Mesh.geometryIsCW(innerGeom) ? \"ccw\" : \"cw\";\n\n        for(let i = 0; i < tempOutterGeom.vertices.length; i++)\n        {\n            // get this point (pt1), the point before it\n            // (pt0) and the point that follows it (pt2)\n            let pt0 = tempOutterGeom.vertices[(i > 0) ? i - 1 : tempOutterGeom.vertices.length - 1];\n            let pt1 = tempOutterGeom.vertices[i];\n            let pt2 = tempOutterGeom.vertices[(i < tempOutterGeom.vertices.length - 1) ? i + 1 : 0];\n\n            // find the line vectors of the lines going\n            // into the current point\n            let v01 = new Vector2(pt1.x - pt0.x, pt1.y - pt0.y);\n            let v12 = new Vector2(pt2.x - pt1.x, pt2.y - pt1.y);\n\n            (rot === \"ccw\") ? v01.rotate90CCW() : v01.rotate90CW();\n            (rot === \"ccw\") ? v12.rotate90CCW() : v12.rotate90CW();\n\n            v01.normalize();\n            v12.normalize();\n\n            // find the normals of the two lines, multiplied\n            // to the distance that polygon should inflate\n            let d01 = v01.multiplyScalar(inflateValue).clone();\n            let d12 = v12.multiplyScalar(inflateValue).clone();\n            //console.log(d01, d12);\n\n            // use the normals to find two points on the\n            // lines parallel to the polygon lines\n            let ptx0  = { x: pt0.x + d01.x, y: pt0.y + d01.y };\n            let ptx10 = { x: pt1.x + d01.x, y: pt1.y + d01.y };\n            let ptx12 = { x: pt1.x + d12.x, y: pt1.y + d12.y };\n            let ptx2  = { x: pt2.x + d12.x, y: pt2.y + d12.y };\n            //console.log(ptx0, ptx10, ptx12, ptx2);\n\n            // find the intersection of the two lines, and\n            // add it to the expanded polygon\n            let newPoint = _Math.intersectionPoint([ptx0, ptx10], [ptx12, ptx2]);\n            outterGeom.vertices[i].x = newPoint.x;\n            outterGeom.vertices[i].y = newPoint.y;\n            //console.log(\"newPoint\", newPoint);\n        }\n\n        //Shape and subPath\n        let outterPath = new THREE.Shape();\n        let innerPath = new THREE.Path();\n\n        outterPath.moveTo(outterGeom.vertices[0].x, outterGeom.vertices[0].y);\n        innerPath.moveTo(innerGeom.vertices[0].x, innerGeom.vertices[0].y);\n\n        //!warning! must construct the path CCW (not the shape, that is CW)\n        for(let i = innerGeom.vertices.length-1; i > 0; i--)\n        {\n            outterPath.lineTo(outterGeom.vertices[i].x, outterGeom.vertices[i].y);  \n            innerPath.lineTo(innerGeom.vertices[i].x, innerGeom.vertices[i].y);\n        }\n\n        outterPath.closePath();\n        innerPath.closePath();\n\n        outterPath.holes.push(innerPath);\n\n        return outterPath;\n    }\n\n    /**\n    * Static Utils to check the direction of a geometry (ccw o cw)\n    * @static\n    * @method geometryIsCW\n    * @param {Geometry} geometry Three.js geometry\n    * @return {Boolean} is CW or not\n    */\n    static geometryIsCW(geometry)\n    {\n        let vertices = geometry.vertices;\n\n        for(let i=0; i<vertices.length; i++)\n        {\n            let v1 = new Vector2(vertices[i+1].x - vertices[i].x,\n                                 vertices[i+1].y - vertices[i].y);\n\n            let v2 = new Vector2(vertices[i+2].x - vertices[i+1].x,\n                                 vertices[i+2].y - vertices[i+1].y);\n\n            v1.rotate90CW();\n\n            let dot = v1.dot(v2);\n            \n            if(dot !== 0)\n            {\n                if( v1.dot(v2) > 0 )\n                {\n                    return true;\n                    break;\n                }\n                else\n                {\n                    return false;\n                    break;\n                }\n            }\n            else\n            {\n                console.log(\"dot product is 0\");    \n            }\n        }\n        /*return vecDot(\n            vecRot90CW({ x: p[1].x - p[0].x, y: p[1].y - p[0].y }),\n            { x: p[2].x - p[1].x, y: p[2].y - p[1].y }) >= 0;*/\n    }\n\n    /**\n    * Static Utils to generate the stroke Mesh from a given shape\n    * @static\n    * @method generateStrokeMesh\n    * @param {Mesh} mesh to use as a base to get vertices\n    * @param {Number} inflateValue stroke width\n    * @return {Mesh} the resulting Mesh\n    */\n    static generateStrokeMesh(mesh, inflateValue)\n    {\n        let shape = Mesh.generateStrokeShape(mesh, inflateValue);\n\n        let geometry = new THREE.ShapeGeometry(shape);\n\n        let strokeMesh = new Mesh({primitive:\"custom\", geometry: geometry});\n        strokeMesh.constructMesh();\n\n        return strokeMesh;\n    }\n\n    /**\n    * Utils to regenerate the stroke Mesh when already existing\n    * @method updateStrokeMesh\n    * @param {Number} inflateValue stroke width\n    */\n    updateStroke(mesh, inflateValue)\n    {\n        let shape = Mesh.generateStrokeShape(mesh, inflateValue);\n\n        let geometry = new THREE.ShapeGeometry(shape);\n        this.setVertices(geometry.vertices);\n        this.updateMesh();\n    }\n\n    /**\n    * Static Utils to generate the stroke Mesh from a given shape\n    * @static\n    * @method generateStrokeMeshFromShape\n    * @param {Shape} shape\n    * @return {Mesh} the resulting Mesh\n    */\n    static generateStrokeMeshFromShape(shape)\n    {\n        let geometry = new THREE.ShapeGeometry(shape);\n\n        let strokeMesh = new Mesh({primitive:\"custom\", geometry: geometry});\n        strokeMesh.constructMesh();\n        strokeMesh.material.setColor(this.strokeColor);\n\n        return strokeMesh;\n    }\n\n    /*\n     * =====\n     * Boundings management\n     * =====\n     */\n\n    /**\n    * Compute and returns the bounding box of the current geometry  or Node, which is an object made of 2 Vector3.\n    * \n    * @method getBoundingBox\n    * @return {Object} boundingBox object {min: new Vector3, max: new Vector3}\n    */\n    getBoundingBox()\n    {\n        if(this._geometry)\n        {\n            if(!this._geometry.boundingBox)\n            {\n                this._geometry.computeBoundingBox();\n            }\n            return this._geometry.boundingBox;\n        }\n        else //no geometry, let three do the math\n        {\n            var bbox = new THREE.Box3().setFromObject(this.mesh);\n            return bbox;\n        }\n    }\n\n    /**\n    * Compute and returns the bounding sphere of the current geometry or Node, which is an object with a radius :\n    * \n    * @method getBoundingSphere\n    * @return {Object} boundingSphere object {radius: number}\n    */\n    getBoundingSphere()\n    {\n        if(this._geometry)\n        {\n            if(!this._geometry.boundingSphere)\n            {\n                this._geometry.computeBoundingSphere();\n            }\n            return this._geometry.boundingSphere;\n        }\n        else //no geometry, let three do the math\n        {\n            var bbox = new THREE.Box3().setFromObject(this.mesh);\n            return bbox.getBoundingSphere();\n        }\n    }\n\n    /*setIndex(val){\n        this.index = val;\n    }*/\n\n    //============\n    // 2D Geometry creation\n    //============\n\n    createLine(start, end, color, texture, width, uvScale)\n    {\n        var right = Vector3.zero;\n        var dir = Vector3.zero;\n        dir.subVectors(end, start);\n\n        if(uvScale === undefined)\n        {\n            uvScale = dir.length();\n        }\n\n        dir.normalize();\n\n        right.crossVectors(dir, new Vector3(0,0,1)); //right vector\n        right.x *= width;\n        right.y *= width;\n        right.z *= width;\n\n        var p1 = new Vector3(start.x-right.x, start.y-right.y, start.z-right.z);\n        var p2 = new Vector3(start.x+right.x, start.y+right.y, start.z+right.z);\n        var p3 = new Vector3(end.x+right.x, end.y+right.y, end.z+right.z);\n        var p4 = new Vector3(end.x-right.x, end.y-right.y, end.z-right.z);\n\n        this.transform.setLocalPosition(Vector3.zero.clone());\n\n        var uv1 = new THREE.Vector2(0,uvScale);\n        var uv2 = new THREE.Vector2(1,uvScale);\n        var uv3 = new THREE.Vector2(1,0);\n        var uv4 = new THREE.Vector2(0,0);\n\n        this.pushQuad(p1,p2,p3,p4,uv1,uv2,uv3,uv4);\n        this.material.setColor(color);\n        this.material.setWireframe(false);\n    }\n\n    /**\n    * createCircle\n    * @method createCircle\n    * @param {Number} center\n    * @param {Number} radius\n    * @param {Number} segments\n    * @param {Color} color\n    * @param {Texture} texture\n    * @param {Number} width\n    * @param {Number} uvScale\n    */\n    createCircle(params)\n    {\n        let center  = getOrDefault(params, \"center\", new Vector3(0,0,0));\n        let radius  = getOrDefault(params, \"radius\", 1);\n        let segments  = getOrDefault(params, \"segments\", 32);\n        let color  = getOrDefault(params, \"color\",);\n        let width  = getOrDefault(params, \"width\",);\n        let uvScale  = getOrDefault(params, \"uvScale\", 1);\n\n        this.createArc({\"center\": center,\n                        \"radius\": radius,\n                        \"segments\": segments,\n                        \"startAngle\": 0,\n                        \"endAngle\": 2 * Math.PI,\n                        \"color\": Color.white.clone(),\n                        \"width\": 1,\n                        \"uvScale\": 1\n                       });\n    }\n\n    /**\n    * createArc\n    * @method createArc\n    * @param {Number} center\n    * @param {Number} radius\n    * @param {Number} segments\n    * @param {Number} startAngle\n    * @param {Number} endAngle\n    * @param {Color} color\n    * @param {Texture} texture\n    * @param {Number} width\n    * @param {Number} uvScale\n    */\n    createArc(params)\n    {\n        let center = getOrDefault(params,\"center\", new Vector3(0,0,0));\n        let radius = getOrDefault(params,\"radius\", 1);\n        let segments = getOrDefault(params,\"segments\", 32);\n        let startAngle = getOrDefault(params,\"startAngle\", 0);\n        let endAngle = getOrDefault(params,\"endAngle\", Math.PI*2);\n        let color = getOrDefault(params,\"color\", Color.white.clone());\n        let width = getOrDefault(params,\"width\", 1);\n        let uvScale = getOrDefault(params,\"uvScale\", 1);\n\n        if(uvScale === undefined)\n        {\n            uvScale = radius * (endAngle - startAngle) * 1;\n            //uvScale = Math.floor(uvScale); //(do we want a round count of uv ?)\n        }\n\n        let innerpoints = [];\n        let outerpoints = [];\n        let interval = (Math.PI * 2) / segments;\n\n        let starta = startAngle;\n        let enda = endAngle;\n        let a = 0;\n\n        for (a = starta; a <= enda; a += interval)\n        {\n            innerpoints.push(new Vector3(Math.cos(a) * (radius - width/2), Math.sin(a) * (radius - width/2), 0));\n            outerpoints.push(new Vector3(Math.cos(a) * (radius + width/2), Math.sin(a) * (radius + width/2), 0));\n        }\n\n        //on termine l'arc si on n'était pas sur un multiple\n        if (a !== enda)\n        {\n            innerpoints.push( new Vector3(Math.cos(endAngle) * (radius - width/2), Math.sin(endAngle) * (radius - width/2), 0) );\n            outerpoints.push( new Vector3(Math.cos(endAngle) * (radius + width/2), Math.sin(endAngle) * (radius + width/2), 0) );\n        }\n\n        for (let k=0; k < innerpoints.length-1; ++k)\n        {\n            let p1 = outerpoints[k];\n            let p2 = innerpoints[k];\n            let p3 = innerpoints[(k+1) % innerpoints.length];\n            let p4 = outerpoints[(k+1) % innerpoints.length];\n\n            let uv1 = new Vector2(0,(k+0) * uvScale / (innerpoints.length-1));\n            let uv2 = new Vector2(1,(k+0) * uvScale / (innerpoints.length-1));\n            let uv3 = new Vector2(1,(k+1) * uvScale / (innerpoints.length-1));\n            let uv4 = new Vector2(0,(k+1) * uvScale / (innerpoints.length-1));\n\n            this.pushQuad(p1,p2,p3,p4,uv1,uv2,uv3,uv4);\n        }\n\n        this.material = new Material({type:\"basic\"}); //basic\n        this.material.setColor(color);\n\n        this.mesh = new THREE.Mesh( this._geometry, this.material._material );\n\n        this.transform = new Transform(this);\n        this.transform.setLocalPosition(center);\n    }\n\n    /**\n    * createDisc\n    * @method createDisc\n    * @param {Number} center\n    * @param {Number} radius\n    * @param {Number} segments\n    * @param {Color} color\n    * @param {Texture} texture\n    */\n    createDisc(center, radius, segments, color, texture)\n    {\n        this.createDiscSector(center, radius, segments, 0, 2*Math.PI, color, texture);\n    }\n\n    /**\n    * createDiscSector\n    * @method undefined\n    * @param {Number} center\n    * @param {Number} radius\n    * @param {Number} segments\n    * @param {Number} startAngle\n    * @param {Number} endAngle\n    * @param {Color} color\n    * @param {Texture} texture\n    */\n    createDiscSector(params)\n    {\n\n        let center = getOrDefault(params,\"center\", new Vector3(0,0,0)); \n        let radius = getOrDefault(params,\"radius\", 1); \n        let segments = getOrDefault(params,\"segments\", 32); \n        let startAngle = getOrDefault(params,\"startAngle\", 0); \n        let endAngle = getOrDefault(params,\"endAngle\", Math.PI*2); \n        let color = getOrDefault(params,\"color\", Color.white.clone());\n\n        let points = [];\n        let interval = (Math.PI*2)/segments;\n        let starta = startAngle;\n        let enda = endAngle;\n        let a = 0;\n\n        for (a = starta; a <= enda; a += interval)\n        {\n            points.push(new Vector3(Math.cos(a) * (radius), Math.sin(a) * (radius), 0));\n        }\n        //on termine si on n'était pas sur un multiple\n        if (a !== enda)\n        {\n            points.push(new Vector3(Math.cos(endAngle) * (radius), Math.sin(endAngle) * (radius), 0));\n        }\n\n        let p1 = new Vector3(0,0,0); //local center\n\n        for (let k = 0; k < points.length-1; ++k)\n        {\n            let p2 = points[k];\n            let p3 = points[k + 1];\n\n            //FIXME : à calculer plus finement, quel mode de projection on applique ?\n            this.pushTriangle(p1,p2,p3);\n\n            let uv1 = new Vector2(0,0);\n            let uv2 = new Vector2(1,0);\n            let uv3 = new Vector2(1,1);\n\n            this.pushUV(uv1, uv2, uv3);\n        }\n\n        this.material = new Material({type:\"basic\"}); //basic\n        //this.material.setColor(color);\n\n        this.mesh = new THREE.Mesh( this._geometry, this.material._material );\n\n        this.transform = new Transform(this);\n        this.transform.setLocalPosition(center);\n    }\n\n    /**\n    * Call this method to construct a custom mesh\n    * @method constructMesh\n    */\n    constructMesh()\n    {\n        this.material = new Material({type:\"basic\"}); //basic\n        this.mesh = new THREE.Mesh( this._geometry, this.material._material );\n        this.transform = new Transform(this);\n        this._geometry.computeBoundingBox();\n    }\n\n    //================\n    // VERTEX MANAGEMENT\n    //================\n\n    /**\n    Adds a vertex to the current geometry\n\n    @method pushVertex\n    @param {Vector3} v vertex to add\n    */\n    pushVertex(v)\n    {\n        this._geometry.vertices.push(v);\n        this._geometry.verticesNeedUpdate = true;\n    }\n\n    /**\n    Adds a face to the current geometry\n\n    @method pushFace\n    @param {Integer} i1 Face Index to add\n    @param {Integer} i2 Face Index to add\n    @param {Integer} i3 Face Index to add\n    */\n    pushFace(i1, i2, i3)\n    {\n        let face = new THREE.Face3( i1, i2, i3 );\n        this._geometry.faces.push( face );\n        this._geometry.elementsNeedUpdate = true;\n        return face;\n    }\n\n    /**\n    Adds a UV to the current geometry\n\n    @method pushUV\n    @param {Vector2} uv1 uv coordinates to add\n    @param {Vector2} uv2 uv coordinates to add\n    @param {Vector2} uv3 uv coordinates to add\n    */\n    pushUV(uv1, uv2, uv3)\n    {\n        this._geometry.faceVertexUvs[0].push( [uv1, uv2, uv3] );\n        this._geometry.uvsNeedUpdate = true;\n        this._geometry.elementsNeedUpdate = true;\n    }\n    /**\n    Adds a UV to the current geometry\n\n    @method pushNormal\n    @param {Vector2} n1 n coordinates to add\n    @param {Vector2} n2 n coordinates to add\n    @param {Vector2} n3 n coordinates to add\n    */\n    pushNormal(n1, n2, n3)\n    {\n        this._geometry.faceVertexNormals[0].push( [n1, n2, n3] );\n        this._geometry.uvsNeedUpdate = true;\n        this._geometry.elementsNeedUpdate = true;\n        this._geometry.normalsNeedUpdate = true;\n    }\n\n    /**\n    Adds a triangle to the current geometry\n\n    @method pushTriangle\n    @param {Vector3} v1 vertex coordinates of the triangle\n    @param {Vector3} v2 vertex coordinates of the triangle\n    @param {Vector3} v3 vertex coordinates of the triangle\n    */\n    pushTriangle(v1,v2,v3)\n    {\n        let i  = this._geometry.vertices.length;\n        this._geometry.vertices.push(v1, v2, v3);\n        this._geometry.faces.push( new THREE.Face3( i+0, i+1, i+2 ) );\n        this._geometry.verticesNeedUpdate = true;\n        this._geometry.elementsNeedUpdate = true;\n    }\n\n    /**\n    * Adds a Quad to the current geometry\n    * \n    * @method pushQuad\n    * @param {Vector3} v1 vertex coordinates of the Quad\n    * @param {Vector3} v2 vertex coordinates of the Quad\n    * @param {Vector3} v3 vertex coordinates of the Quad\n    * @param {Vector3} v4 vertex coordinates of the Quad\n    * @param {Vector2} uv1 uv coordinates to add\n    * @param {Vector2} uv2 uv coordinates to add\n    * @param {Vector2} uv3 uv coordinates to add\n    * @param {Vector2} uv3 uv coordinates to add\n    */\n    pushQuad(v1,v2,v3,v4,uv1,uv2,uv3,uv4)\n    {\n        let i  = this._geometry.vertices.length;\n        //var fi = this._geometry.faces.length;\n        this._geometry.vertices.push(v1, v2, v3, v4);\n\n        this._geometry.faces.push( new THREE.Face3( i+0, i+1, i+2 ) );\n        this._geometry.faces.push( new THREE.Face3( i+0, i+2, i+3 ) );\n\n        this._geometry.faceVertexUvs[0].push([uv1, uv2, uv3]);\n        this._geometry.faceVertexUvs[0].push([uv1, uv3, uv4]);\n\n        this._geometry.verticesNeedUpdate = true;\n        this._geometry.elementsNeedUpdate = true;\n        this._geometry.uvsNeedUpdate = true;\n    }\n\n    /**\n    * compute Face and Vertex Normals for the current geometry\n    * \n    * @method computeNormals\n    */\n    computeNormals()\n    {\n        this._geometry.computeFaceNormals();\n        this._geometry.normalsNeedUpdate = true;\n        this._geometry.computeVertexNormals(true);\n        this._geometry.verticesNeedUpdate = true;\n    }\n\n    /**\n    * updateMesh\n    * \n    * @method updateMesh\n    */\n    updateMesh()\n    {\n        this._geometry.normalsNeedUpdate = true;\n        this._geometry.verticesNeedUpdate = true;\n        this._geometry.elementsNeedUpdate = true;\n        this._geometry.uvsNeedUpdate = true;\n    }\n    /**\n    * Clears this mesh's geometry, that is vertices, faces and faceVertexUvs\n    * @method clear\n    */\n    clear()\n    {\n        this._geometry.vertices = [];\n        this._geometry.faces = [];\n        this._geometry.faceVertexUvs[0] = [];\n        //this._geometry.faceVertexNormals[0] = []; //NEW\n        this._geometry.verticesNeedUpdate = true;\n        this._geometry.elementsNeedUpdate = true;\n        this._geometry.uvsNeedUpdate = true;\n    }\n\n    /**\n    * Erase this mesh's geometry and material from memory\n    * @method erase\n    */\n    erase()\n    {\n        this._geometry.dispose();\n        this.material.erase();\n    }\n\n    /**\n    * Set the vertices of this mesh geometry\n    * @method setVertices\n    * @param {Object} vertices\n    */\n    setVertices(vertices)\n    {\n        this._geometry.vertices = vertices;\n        this._geometry.verticesNeedUpdate = true;\n        this._geometry.computeBoundingBox();\n    }\n    /**\n    * Get the vertices of this mesh geometry\n    * @method getVertices\n    * @return {Object} vertices\n    */\n    getVertices()\n    {\n        return this._geometry.vertices;\n    }\n\n    /**\n    * Set the UV of this mesh geometry\n    * @method setUVs\n    * @param {integer} index\n    * @param {Array} uvs\n    */\n    setUVs(index, uvs)\n    {\n        this._geometry.faceVertexUvs[index] = uvs;\n        this._geometry.uvsNeedUpdate = true;\n        this._geometry.elementsNeedUpdate = true;\n    }\n\n    /**\n    * Get the UV of this mesh geometry\n    * @method getUVs\n    * @param {integer} index of the UV to get\n    * @return {Array} uvs\n    */\n    getUVs(index)\n    {\n        return this._geometry.faceVertexUvs[index];\n    }\n\n    /**\n    * Set the vertexColors of this mesh geometry's vertices\n    * @method setVertexColors\n    * @param {Array<Color>} colors\n    */\n    setVertexColors(colors)\n    {\n        this.material._material.vertexColors = THREE.VertexColors;\n        this._geometry.colors = colors;\n        this._geometry.colorsNeedUpdate = true;\n    }\n\n    /**\n    * Get the vertexColors of this mesh geometry's vertices\n    * @method getVertexColors\n    * @return {Array<Color>} colors\n    */\n    getVertexColors()\n    {\n        return this._geometry.colors;\n    }\n\n    /**\n    * Defines the position of the geometry's center (NOT the transform!).\n    *\n    * @method setCenter\n    * @param {number} x x coordinate\n    * @param {number} y y coordinate\n    * @param {number} z z coordinate\n    */\n    setCenter(x,y,z)\n    {\n        this._geometry.applyMatrix( new Matrix4().makeTranslation(x,y,z) );\n    }\n\n    /**\n    * Returns the center of the geometry (vertices) based on boundingbox\n    *\n    * @method getCenter\n    * @return {Vector3} vector3 of the current geometry center\n    */\n    getCenter()\n    {\n        //force bounding box computation\n        if(this._geometry.boundingBox === null)\n        {\n            this._geometry.computeBoundingBox();\n        }\n        return this._geometry.boundingBox.center();\n    }\n\n    /**\n    * Set the scale of the geometry (vertices) - this is not like scaling the transform. Shouldn't be done in loop. Polymorphic : can take various agruments of various types. Possible arguments number is 1, 2 or 3.\n    *\n    * @method setScale\n    * @param {float|Vector3|Vector2} number|Vector3|Vector2 Value for the new scale of the geometry. If a Vector3 is given, its x, y, z will be used for the scale x, y, z. If a Vector2 is given, its x, y will be used for the scale x and y, but z will be 1. If a number is given, it will be the scale x.\n    * @param {float} Number Value for the new y scale of the geometry.\n    * @param {float} Number Value for the new z scale of the geometry.\n    */\n    setScale(arg1, arg2, arg3)\n    {\n        if(arguments.length === 3)\n        {\n            this._geometry.applyMatrix( new Matrix4().makeScale(arg1, arg2, arg3));\n        }\n        else if(arguments.length === 2)\n        {\n            if(typeof arg1 === \"number\" && typeof arg2 === \"number\")\n            {\n                this._geometry.applyMatrix( new Matrix4().makeScale(arg1, arg2, 1));\n            }\n        }\n        else if(arguments.length === 1)\n        {\n            if(arg1 instanceof Vector3)\n            {\n                this._geometry.applyMatrix( new Matrix4().makeScale(arg1.x, arg1.y, arg1.z));\n            }\n            else if(arg1 instanceof Vector2)\n            {\n                this._geometry.applyMatrix( new Matrix4().makeScale(arg1.x, arg1.y,1) );\n            }\n            else if(typeof arg1 === \"number\")\n            {\n                this._geometry.applyMatrix( new Matrix4().makeScale(arg1,arg1,arg1) );\n            }\n        }\n    }\n\n    /**\n    * Set the rotation around x axis of the vertices (not the transform!)\n    *\n    * @method setRotationX\n    * @param {float} value Rotation value in degree\n    */\n    setRotationX(arg1)\n    {\n        this._geometry.applyMatrix( new Matrix4().makeRotationX( _Math.degToRad(arg1)));\n    }\n\n    /**\n    * Set the rotation around y axis of the vertices (not the transform!)\n    * \n    * @method setRotationY\n    * @param {float} value Rotation value in degree\n    */\n    setRotationY(arg1)\n    {\n        this._geometry.applyMatrix( new Matrix4().makeRotationY( _Math.degToRad(arg1)));\n    }\n\n    /**\n    * Set the rotation around z axis of the vertices (not the transform!)\n    * \n    * @method setRotationZ\n    * @param {float} value Rotation value in degree\n    */\n    setRotationZ(arg1)\n    {\n        this._geometry.applyMatrix( new Matrix4().makeRotationZ( _Math.degToRad(arg1)));\n    }\n\n    /**\n    * Set the visibility of this mesh\n    * \n    * @method setVisible\n    * @param {Boolean} value visible or not\n    */\n    setVisible(val)\n    {\n        this.mesh.visible = val;\n    }\n\n    /**\n    * Get the visibility of this mesh\n    * \n    * @method getVisible\n    * @return {Boolean} value visible or not\n    */\n    getVisible()\n    {\n        return this.mesh.visible;\n    }\n\n    /*apply()\n    {\n        this.mesh.visible = this.visible;\n    }*/\n\n    /**\n    * Updates this mesh material\n    * \n    * @method updateMaterial\n    * @private\n    */\n    updateMaterial()\n    {\n        if(this.mesh.material){\n            this.mesh.material = this.material._material;\n        }\n    }\n\n    /**\n    * Sets this Mesh material. Be warned that this method requiers to build a new mesh, so it can be slow on update. Better use it in setup.\n    * @method setMaterial\n    * @param {Material || String} material the new material to set (if String used, one of \"phong\", \"lambert\", \"basic\")\n    */\n    setMaterial(material){\n\n        this.material = null;\n\n        if(material === undefined)\n        {\n            this.material = new Material({type:\"default\"});\n        }\n        else if(material instanceof Material)\n        {\n            this.material = material;\n        }\n        else if(typeof material === \"string\")\n        {\n            this.material = new Material({type:material});\n        }\n        var tempMesh = new THREE.Mesh( this._geometry, this.material._material );\n        var tempTransform = this.transform;\n\n        this.mesh = tempMesh;\n        this.transform = new Transform(this);\n        this.transform.setLocalScale(tempTransform.getLocalScale().x,\n                                     tempTransform.getLocalScale().y,\n                                     tempTransform.getLocalScale().z);\n\n        this.transform.setLocalPosition(tempTransform.getLocalPosition().x,\n                                        tempTransform.getLocalPosition().y,\n                                        tempTransform.getLocalPosition().z);\n\n        this.transform.setLocalRotation(tempTransform.getLocalRotation().x,\n                                        tempTransform.getLocalRotation().y,\n                                        tempTransform.getLocalRotation().z);\n    }\n\n    /**\n    * Attach the material to this mesh. The material must have been created before calling this method\n    *\n    * @method attachMaterial\n    * @param {Material} material\n    */\n    attachMaterial(material)\n    {\n        if(material === undefined)\n        {\n            this.material = new Material({type:\"default\"});\n        }\n        else if(material instanceof Material)\n        {\n            this.material = material;\n        }\n        else if(typeof material === \"string\")\n        {\n            this.material = new Material({type:material});\n        }\n        if(material !== undefined && this.mesh){\n            this.updateMaterial();\n        }\n    }\n\n    setCastShadow(enabled)\n    {\n        this.mesh.castShadow = enabled;\n    }\n\n    setReceiveShadow(enabled)\n    {\n        this.mesh.receiveShadow = enabled;\n    }\n\n    //============\n    // 3D Geometry creation\n    //============\n\n    /**\n     Creates a plane.\n     @method CreatePlane\n     @static\n     @param {Number} width Plane width (in world units).\n     @param {Number} height Plane height (in world units).\n     @param {Number} segments tesselation on all axis (in world units).\n     @param {Object} material Mobilizing Material.\n     */\n    static CreatePlane(width, height, segments, material)\n    {\n        var obj = new Mesh({primitive:\"plane\",\n                            width: width,\n                            height: height,\n                            segments: segments,\n                            material:\"material\"\n                           });\n        return obj;\n    }\n\n    /**\n     Creates a box.\n     @method CreateBox\n     @static\n     @param {Number} sizeX size on the X axis (in world units).\n     @param {Number} sizeY size on the Y axis (in world units).\n     @param {Number} sizeZ size on the Z axis (in world units).\n     @param {Number} segments tesselation on all axis (in world units).\n     @param {Object} material Mobilizing Material.\n     */\n    static CreateBox(sizeX, sizeY, sizeZ, segments, material)\n    {\n        var obj = new Mesh({primitive:\"box\",\n                            width: sizeX,\n                            height: sizeY,\n                            depth: sizeZ,\n                            segments: segments,\n                            material: material\n                           });\n        return obj;\n    }\n\n    /**\n     Creates a text mesh.\n     @method CreateText\n     @static\n     @param {String} text test to render.\n     */\n    static CreateText(text, font, fontSize, material, curveSegments, height)\n    {\n        var obj = new Mesh({primitive:\"text\",\n                            text: text,\n                            font:typeface,\n                            fontSize: fontSize,\n                            height: height,\n                            segments: curveSegments,\n                            material: material\n                           });\n        return obj;\n    }\n\n    /**\n     Creates a sphere\n     @method CreateSphere\n     @static\n     @param {Number} radius the Sphere radius (in world units).\n     @param {Number} widthSegments horizontal segments count (in world units).\n     @param {Number} heightSegments vertical segments count (in world units).\n     @param {Object} material Mobilizing Material.\n     */\n    static CreateSphere(radius, widthSegments, heightSegments, material )\n    {\n        var obj = new Mesh({primitive:\"sphere\",\n                            radius: radius,\n                            widthSegments: hsegments,\n                            heightSegments: vsegments,\n                            material: material\n                           });\n        return obj;\n    }\n\n    /**\n     Creates a circle\n     @method CreateCircle\n     @static\n     @param {Number} radius Plane width (in world units).\n     @param {Number} segments Plane height (in world units).\n     @param {Object} material Mobilizing Material.\n     */\n    static CreateCircle(radius, segments, material )\n    {\n        var obj = new Mesh({primitive:\"circle\",\n                            segments: segments,\n                            material: material\n                           });\n        return obj;\n    }\n}\n\n\n/**\n * EdgesMesh class creates a hiddenline fashioned Mesh from any other Mesh. \"Hard\" edges only will be visible. he result is different from when a Mesh material is set to wireframe, as all the segment will not be visible. All the coplanar segment are erased here in a new geometry that is rendered with a \"line\" type material.\n * @class EdgesMesh\n * @extends Mesh\n * @constructor\n * @param {Object} params parameters this can contains the same parameters than Mesh class\n * @param {Mesh} params.mesh The existing Mesh to use for generate a new edge only Mesh (geometry and material)\n */\nclass EdgesMesh extends Mesh\n{\n    constructor(params)\n    {\n        var _params = getOrDefault(params, {});\n        _params.threshold = getOrDefault(_params.threshold, undefined);\n        super(_params);\n\n        this.material = undefined;\n\n        //this.mesh = new THREE.EdgesHelper(this.mesh, undefined, 90);\n        this.material = undefined;\n        this.material = new Material({type:\"line\"});\n\n        if(_params.mesh){//for imported objects\n            this.mesh = new THREE.LineSegments( new THREE.EdgesGeometry( _params.mesh.geometry, _params.threshold ), this.material._material);\n            //console.log(\"tempMesh.geometry\",_params.mesh);\n        }else{\n            this.mesh = new THREE.LineSegments( new THREE.EdgesGeometry( this._geometry, _params.threshold ), this.material._material);\n        }\n        //this.mesh.matrix = tempMesh.matrixWorld;\n        this.transform = undefined;\n        this.transform = new Transform(this);\n\n    }\n}\n\n// module exports\nexport { Mesh };\nexport { EdgesMesh };\n","import {Mesh} from '../shape/Mesh';\n\nclass Csg\n{\n    /*\n    ThreeCSG simple binding for Mobilizing.\n    Use static method to generate new Mesh from the combination of two existing Mesh.\n    User should be careful of scene management as boolean operations are not produced on one of the given Mesh in argument but generate a new mesh from these two.\n\n    @class Csg\n    @constructor\n    @param {Context} context\n    */\n    constructor(context){\n        this.context =  context;\n    }\n\n    /*\n    Generate a new Mesh from the subtract boolean operation of two Mesh.\n\n    @method substract\n    @static\n    @param {Mesh} mesh First mesh to use for the boolean operation\n    @param {Mesh} mesh Second mesh to use for the boolean operation\n    */\n    static substract(mobMesh1, mobMesh2){\n\n        var csgMesh1 = new ThreeBSP(mobMesh1.mesh);\n        var csgMesh2 = new ThreeBSP(mobMesh2.mesh);\n\n        var newBSP = csgMesh1.subtract( csgMesh2 );\n\n        var BSPGeom = newBSP.toGeometry();\n\n        var newMobMesh = new Mesh(undefined,undefined,BSPGeom);\n\n\n        return newMobMesh;\n    }\n\n    /*\n    Generate a new Mesh from the union boolean operation of two Mesh.\n\n    @method union\n    @static\n    @param {Mesh} mesh First mesh to use for the boolean operation\n    @param {Mesh} mesh Second mesh to use for the boolean operation\n    */\n    static union(mobMesh1, mobMesh2){\n\n        var csgMesh1 = new ThreeBSP(mobMesh1.mesh);\n        var csgMesh2 = new ThreeBSP(mobMesh2.mesh);\n\n        var newBSP = csgMesh1.union( csgMesh2 );\n\n        var BSPGeom = newBSP.toGeometry();\n\n        var newMobMesh = new Mesh(undefined,undefined,BSPGeom);\n\n\n        return newMobMesh;\n    }\n\n    /*\n    Generate a new Mesh from the intersection boolean operation of two Mesh.\n\n    @method intersect\n    @static\n    @param {Mesh} mesh First mesh to use for the boolean operation\n    @param {Mesh} mesh Second mesh to use for the boolean operation\n    */\n    static intersect(mobMesh1, mobMesh2){\n\n        var csgMesh1 = new ThreeBSP(mobMesh1.mesh);\n        var csgMesh2 = new ThreeBSP(mobMesh2.mesh);\n\n        var newBSP = csgMesh1.intersect( csgMesh2 );\n\n        var BSPGeom = newBSP.toGeometry();\n\n        var newMobMesh = new Mesh(undefined,undefined,BSPGeom);\n\n\n        return newMobMesh;\n    }\n\n}\n\n// module exports\nexport { Csg };","const MOBILE = \"mobile\";\n\nconst DESKTOP = \"desktop\";\n\n// A map of regular expressions to test the userAgent with and retreive OS information\nconst OS_REGEX = new Map([\n    [\"Windows 10\", /(Windows 10.0|Windows NT 10.0)/],\n    [\"Windows 8.1\", /(Windows 8.1|Windows NT 6.3)/],\n    [\"Windows 8\", /(Windows 8|Windows NT 6.2)/],\n    [\"Windows 7\", /(Windows 7|Windows NT 6.1)/],\n    [\"Windows Vista\", /Windows NT 6.0/],\n    [\"Windows Server 2003\", /Windows NT 5.2/],\n    [\"Windows XP\", /(Windows NT 5.1|Windows XP)/],\n    [\"Windows 2000\", /(Windows NT 5.0|Windows 2000)/],\n    [\"Windows ME\", /(Win 9x 4.90|Windows ME)/],\n    [\"Windows 98\", /(Windows 98|Win98)/],\n    [\"Windows 95\", /(Windows 95|Win95|Windows_95)/],\n    [\"Windows NT 4.0\", /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/],\n    [\"Windows CE\", /Windows CE/],\n    [\"Windows 3.11\", /Win16/],\n    [\"Android\", /Android/],\n    [\"Open BSD\", /OpenBSD/],\n    [\"Sun OS\", /SunOS/],\n    [\"Linux\", /(Linux|X11)/],\n    [\"iOS\", /(iPhone|iPad|iPod)/],\n    [\"Mac OS X\", /Mac OS X/],\n    [\"Mac OS\", /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/],\n    [\"QNX\", /QNX/],\n    [\"UNIX\", /UNIX/],\n    [\"BeOS\", /BeOS/],\n    [\"OS/2\", /OS\\/2/],\n    [\"Search Bot\", /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\\/Teoma|ia_archiver)/]\n]);\n\nvar _STATICS = {};\n\n/**\n * Device class gives easy access to some device information such as the operating system and browser used\n *\n * @example\n *     Mobilizing.Device.getOS();\n *\n * @class Device\n */\nclass Device\n{\n    \n    /**\n    * Parse OS data from navigator.userAgent and navigator.appVersion\n    * Credit goes to http://stackoverflow.com/questions/9514179/how-to-find-the-operating-system-version-using-javascript\n    *\n    * @method parseOSData\n    * @static\n    * @private\n    */\n    static parseOSData()\n    {\n        let os = \"unknown\";\n        let osVersion = \"unknown\";\n        \n        for(let [key, regex] of OS_REGEX){\n            if(regex.test(navigator.userAgent)){    \n                os = key;\n            \n                if (/Windows/.test(os)) {\n                    osVersion = /Windows (.*)/.exec(os)[1];\n                    os = \"Windows\";\n                }\n                break;\n            }\n        }\n\n        switch (os) {\n            case \"Mac OS X\":\n                osVersion = /Mac OS X (10[\\.\\_\\d]+)/.exec(navigator.userAgent)[1];\n                break;\n\n            case \"Android\":\n                osVersion = /Android ([\\.\\_\\d]+)/.exec(navigator.userAgent)[1];\n                break;\n\n            case \"iOS\":\n                osVersion = /OS (\\d+)_(\\d+)_?(\\d+)?/.exec(navigator.appVersion);\n                osVersion = osVersion[1] + \".\" + osVersion[2] + \".\" + (osVersion[3] | 0);\n                break;\n        }\n            \n        _STATICS[\"os\"] = os;\n        _STATICS[\"osVersion\"] = osVersion;\n        \n    }\n    \n    /**\n    * Parse browser data from navigator.appName, navigator.userAgent and navigator.appVersion\n    * Credit goes to http://stackoverflow.com/questions/9514179/how-to-find-the-operating-system-version-using-javascript\n    *\n    * @method parseBrowserData\n    * @static\n    * @private\n    */\n    static parseBrowserData()\n    {\n        let browser = navigator.appName;\n        let version;\n        let majorVersion;\n        let versionOffset;\n        let ix;\n        \n        // Opera\n        if ((versionOffset = navigator.userAgent.indexOf(\"Opera\")) != -1) {\n            browser = \"Opera\";\n            version = navigator.userAgent.substring(versionOffset + 6);\n            if ((versionOffset = navigator.userAgent.indexOf(\"Version\")) != -1) {\n                version = navigator.userAgent.substring(versionOffset + 8);\n            }\n        }\n        // MSIE\n        else if ((versionOffset = navigator.userAgent.indexOf(\"MSIE\")) != -1) {\n            browser = \"Microsoft Internet Explorer\";\n            version = navigator.userAgent.substring(versionOffset + 5);\n        }\n        // Chrome\n        else if ((versionOffset = navigator.userAgent.indexOf(\"Chrome\")) != -1) {\n            browser = \"Chrome\";\n            version = navigator.userAgent.substring(versionOffset + 7);\n        }\n        // Safari\n        else if ((versionOffset = navigator.userAgent.indexOf(\"Safari\")) != -1) {\n            browser = \"Safari\";\n            version = navigator.userAgent.substring(versionOffset + 7);\n            if ((versionOffset = navigator.userAgent.indexOf(\"Version\")) != -1) {\n                version = navigator.userAgent.substring(versionOffset + 8);\n            }\n        }\n        // Firefox\n        else if ((versionOffset = navigator.userAgent.indexOf(\"Firefox\")) != -1) {\n            browser = \"Firefox\";\n            version = navigator.userAgent.substring(versionOffset + 8);\n        }\n        // MSIE 11+\n        else if (navigator.userAgent.indexOf(\"Trident/\") != -1) {\n            browser = \"Microsoft Internet Explorer\";\n            version = navigator.userAgent.substring(navigator.userAgent.indexOf(\"rv:\") + 3);\n        }\n        // Other browsers\n        else if ((nameOffset = navigator.userAgent.lastIndexOf(\" \") + 1) < (versionOffset = navigator.userAgent.lastIndexOf(\"/\"))) {\n            browser = navigator.userAgent.substring(nameOffset, versionOffset);\n            version = navigator.userAgent.substring(versionOffset + 1);\n            if (browser.toLowerCase() == browser.toUpperCase()) {\n                browser = navigator.appName;\n            }\n        }\n        \n        // trim the version string\n        if ((ix = version.indexOf(\";\")) != -1) version = version.substring(0, ix);\n        if ((ix = version.indexOf(\" \")) != -1) version = version.substring(0, ix);\n        if ((ix = version.indexOf(\")\")) != -1) version = version.substring(0, ix);\n\n        majorVersion = parseInt(\"\" + version, 10);\n        if (isNaN(majorVersion)) {\n            version = \"\" + parseFloat(navigator.appVersion);\n            majorVersion = parseInt(navigator.appVersion, 10);\n        }\n        \n        _STATICS[\"browser\"] = browser;\n        _STATICS[\"browserVersion\"] = version;\n        _STATICS[\"browserMajorVersion\"] = majorVersion;\n        \n    }\n    \n    /**\n    * Get the device type\n    *\n    * @method getType\n    * @static\n    * @return {String} The device type (mobile or desktop)\n    */\n    static getType()\n    {\n        if(!(\"type\" in _STATICS)){\n            _STATICS[\"type\"] = /Mobile|mini|Fennec|Android|iP(ad|od|hone)/.test(navigator.appVersion) ? MOBILE : DESKTOP;\n        }\n        \n        return _STATICS[\"type\"];\n    }\n    \n    /**\n    * Get the operating system's type\n    *\n    * @method getOS\n    * @static\n    * @return {String} The OS type (Windows, Mac OS X, Android, iOS, etc)\n    */\n    static getOS()\n    {\n        if(!(\"os\" in _STATICS)){\n            Device.parseOSData();\n        }\n        \n        return _STATICS[\"os\"];\n    }\n    \n    /**\n    * Get the operating system's version\n    *\n    * @method getOSVersion\n    * @static\n    * @return {String} The OS version\n    */\n    static getOSVersion()\n    {\n        if(!(\"osVersion\" in _STATICS)){\n            Device.parseOSData();\n        }\n        \n        return _STATICS[\"osVersion\"];\n    }\n    \n    /**\n    * Get the name of the web browser\n    *\n    * @method getBrowser\n    * @static\n    * @return {String} The browser's name \n    */\n    static getBrowser()\n    {\n        if(!(\"browser\" in _STATICS)){\n            Device.parseBrowserData();\n        }\n        \n        return _STATICS[\"browser\"];\n    }\n    \n    /**\n    * Get the version of the web browser\n    *\n    * @method getBrowserVersion\n    * @static\n    * @return {String} The browser's version\n    */\n    static getBrowserVersion()\n    {\n        if(!(\"browserVersion\" in _STATICS)){\n            Device.parseBrowserData();\n        }\n        \n        return _STATICS[\"browserVersion\"];\n    }\n    \n    /**\n    * Get the major version number of the web browser\n    *\n    * @method getBrowserMajorVersion\n    * @static\n    * @return {Number} The browser's major version\n    */\n    static getBrowserMajorVersion()\n    {\n        if(!(\"browserMajorVersion\" in _STATICS)){\n            Device.parseBrowserData();\n        }\n        \n        return _STATICS[\"browserMajorVersion\"];\n    }\n    \n    /**\n    * Get the framework the html page is running under (ejecta or cordova), if any\n    *\n    * @method getFramework\n    * @static\n    * @return {String} The framework's name, or null if none\n    */\n    static getFramework()\n    {\n        if(!(\"framework\" in _STATICS)){\n            _STATICS[\"framework\"] = null;\n            \n            if(navigator.userAgent.toLowerCase().indexOf(\"ejecta\") > -1){\n                _STATICS[\"framework\"] = \"ejecta\";\n            }\n            else if(window.cordova){\n                _STATICS[\"framework\"] = \"cordova\";\n            }\n        }\n        \n        return _STATICS[\"framework\"];\n    }\n    \n    /**\n    * Get the screen's width\n    * This does not necessarily indicate the width available\n    * Some of the screen's width might be used by browser widgets and scrollbars\n    *\n    * @method getScreenWidth\n    * @static\n    * @return {Number} The screen's width in pixels\n    */\n    static getScreenWidth()\n    {\n        return window.screen.width;\n    }\n    \n    /**\n    * Get the screen's height\n    * This does not necessarily indicate the height available\n    * Some of the screen's height might be used by browser widgets and scrollbars\n    *\n    * @method getScreenHeight\n    * @static\n    * @return {Number} The screen's height in pixels\n    */\n    static getScreenHeight()\n    {\n        return window.screen.height;\n    }\n    \n    /**\n    * Shortcut to {{#crossLink \"Device/getScreenWidth:method\"}}{{/crossLink}} and {{#crossLink \"Device/getScreenHeight:method\"}}{{/crossLink}}\n    *\n    * @method getScreenSize\n    * @static\n    * @return {Object} An object with \"width\" and \"height\" as keys representing the screen's dimensions\n    */\n    static getScreenSize()\n    {\n        return {\n            \"width\": Device.getScreenWidth(),\n            \"height\": Device.getScreenHeight()\n        };\n    }\n}\n\n// module exports\nexport { Device };\n","import {debug} from './Debug';\nimport {Component} from '../Component';\n\n/**\n * Fired when charging state changed\n * @event chargingchange\n */\nconst EVT_CHARGING_CHANGED = 'chargingchange';\n\n/**\n * Fired when charge level changed\n * @event levelchange\n */\nconst EVT_LEVEL_CHANGED = 'levelchange';\n\n/**\n * Fired when charging time changed\n * @event chargingtimechange\n */\nconst EVT_CHARGING_TIME_CHANGED = 'chargingtimechange';\n\n/**\n * Fired when discharging time changed\n * @event dischargingtimechange\n */\nconst EVT_DISCHARGING_TIME_CHANGED = 'dischargingtimechange';\n\n\n/**\n* Component to monitor battery status changes\n*\n* @class BatteryStatus\n*/\nclass BatteryStatus extends Component\n{\n\n    /**\n    * @method setup\n    */\n    setup(){\n        this._manager = null;\n        \n        this._batteryAvailable = navigator.getBattery !== undefined;\n    }\n\n    /**\n    * @method on\n    */\n    on()\n    {\n        if(this._batteryAvailable){\n            super.on();\n            navigator.getBattery().then(manager => this.onBatteryManager(manager));\n        }\n        else{\n            debug.warn('The battery API is not supported on this device');\n        }\n    }\n\n    /**\n    * @method off\n    */\n    off()\n    {\n        super.off();\n        \n        if(this._manager){\n            this._manager.removeEventListener(\"chargingchange\", event => this.onChargingChange(event));\n            this._manager.removeEventListener(\"chargingtimechange\", event => this.onChargingTimeChange(event));\n            this._manager.removeEventListener(\"levelchange\", event => this.onLevelChange(event));\n            this._manager.removeEventListener(\"dischargingtimechange\", event => this.onDischargingTimeChange(event));\n            \n            this._manager = null;\n        }\n    }\n\n    /**\n    battery API promise callback\n    Adds event listeners on the battery manager\n\n    @method onBatteryManager\n    @param {BatteryManager} manager A BatteryManager (see https://developer.mozilla.org/en-US/docs/Web/API/BatteryManager)\n    @private\n    */\n    onBatteryManager(manager)\n    {\n        if(!this.getStatus()){\n            // this component has been turned off before getting the manager\n            return;\n        }\n        \n        this._manager = manager;\n        \n        this._manager.addEventListener(\"chargingchange\", event => this.onChargingChange(event));\n        this._manager.addEventListener(\"chargingtimechange\", event => this.onChargingTimeChange(event));\n        this._manager.addEventListener(\"levelchange\", event => this.onLevelChange(event));\n        this._manager.addEventListener(\"dischargingtimechange\", event => this.onDischargingTimeChange(event));\n    }\n\n    /**\n    chargingchange event handler\n    Fires a chargingchange event\n\n    @method onChargingChange\n    @private\n    */\n    onChargingChange(event)\n    {\n        this.events.trigger(EVT_CHARGING_CHANGED, event.target.charging);\n    }\n\n    /**\n    chargingtimechange event handler\n    Fires a chargingtimechange event\n\n    @method onChargingTimeChange\n    @private\n    */\n    onChargingTimeChange(event)\n    {\n        this.events.trigger(EVT_CHARGING_TIME_CHANGED, event.target.chargingTime);\n    }\n\n    /**\n    levelchange event handler\n    Fires a levelchange event\n\n    @method onDischargingTimeChange\n    @private\n    */\n    onDischargingTimeChange(event)\n    {\n        this.events.trigger(EVT_DISCHARGING_TIME_CHANGED, event.target.dischargingTime);\n    }\n\n    /**\n    dischargingtimechange event handler\n    Fires a dischargingtimechange event\n\n    @method onLevelChange\n    @private\n    */\n    onLevelChange(event)\n    {\n        this.events.trigger(EVT_LEVEL_CHANGED, event.target.level);\n    }\n\n    /**\n    Check if the battery is currently charging\n    The component needs to be activated before using this method\n\n    @method isCharging\n    @return {Boolean} True if charging, false otherwise\n    */\n    isCharging()\n    {\n        if(!this._manager){\n            debug.warn('The battery component needs to be active to get battery information');\n            return null;\n        }\n        \n        return this._manager.charging;\n    }\n\n    /**\n    Get the time remaining until the battery is fully charge\n    The component needs to be activated before using this method\n\n    @method getChargingTime\n    @return {Number} The remaining time in seconds until the battery is fully charged, or 0 if the battery is already fully charged\n    */\n    getChargingTime()\n    {\n        if(!this._manager){\n            debug.warn('The battery component needs to be active to get battery information');\n            return null;\n        }\n        \n        return this._manager.chargingTime;\n    }\n\n    /**\n    Get the time remaining until the battery is completely discharged\n    The component needs to be activated before using this method\n\n    @method getDischargingTime\n    @return {Number} The remaining time in seconds until the battery is completely discharged and the system will suspend\n    */\n    getDischargingTime()\n    {\n        if(!this._manager){\n            debug.warn('The battery component needs to be active to get battery information');\n            return null;\n        }\n        \n        return this._manager.dischargingTime;\n    }\n\n    /**\n    Get the battery's charge level\n    The component needs to be activated before using this method\n\n    @method getLevel\n    @return {Number} The charge level on a scale from 0.0 to 1.0\n    */\n    getLevel()\n    {\n        if(!this._manager){\n            debug.warn('The battery component needs to be active to get battery information');\n            return null;\n        }\n        \n        return this._manager.level;\n    }\n}\n\n// module exports\nexport { BatteryStatus };\n","import {Component} from '../Component';\nimport {getOrDefault} from '../helpers/Misc';\n\n/**\n * Fired when a new keydown event occures\n * @event keydown\n */\nconst EVT_KEY_DOWN = \"keydown\";\n\n/**\n * Fired when a new keypressed event occures\n * @event keypressed\n */\nconst EVT_KEY_PRESS = \"keypress\";\n\n/**\n * Fired when a new keyup event occures\n * @event keyup\n */\nconst EVT_KEY_UP = \"keyup\";\n\nclass Keyboard extends Component\n{\n    /**\n     * Simple mapping from HTLM keyboard events toward Mobilizing.js. Not of a big interest for now...\n     * \n     * @class Keyboard\n     * @constructor\n     * \n     * @param {Object} params Config parameters\n     * @param {Window} [params.target=window] The DOM element this instance is attached to\n    */\n\n    constructor(params)\n    {\n        super(params);\n        \n        this._target = getOrDefault(params, \"target\", window);\n    }\n\n    on()\n    {\n        super.on();\n\n        this._target.addEventListener(\"keydown\", event => this.onKeyDown(event));\n        this._target.addEventListener(\"keypress\", event => this.onKeyPress(event));\n        this._target.addEventListener(\"keyup\", event => this.onKeyUp(event));\n    }\n\n    off()\n    {\n        super.off();\n\n        this._target.removeEventListener(\"keydown\", event => this.onKeyDown(event));\n        this._target.removeEventListener(\"keypress\", event => this.onKeyPress(event));\n        this._target.removeEventListener(\"keyup\", event => this.onKeyUp(event));\n    }\n\n    setup()\n    {\n        //note: on window, keypress events are continously called, like keydown. It's not the case of html element\n        //we reproduce this behavior here.\n        this._isPressed = false;\n        this._keyDownCode;\n    }\n\n    update()\n    {\n\n    }\n\n    /**\n    * Fast way to verify in an update loop if a specific key is currently down\n    * \n    * @method getKeyIsDown\n    * @param {Object} key\n    * @return {Boolean} is down or not\n    */\n    getKeyIsDown(key)\n    {\n        if(this._keyDownCode === key.toLowerCase()){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    /**\n    * Forward the keydown event\n    * \n    * @private\n    * @method onKeyDown\n    * @param {Object} event\n    */\n    onKeyDown(event)\n    {\n        this._keyDownCode = String.fromCharCode(event.keyCode).toLowerCase();\n\n        this.events.trigger(EVT_KEY_DOWN, event);\n        //event.preventDefault();\n    }\n\n    /**\n    * Forward the keypress event\n    * \n    * @private\n    * @method onKeyPress\n    * @param {Object} event\n    */\n    onKeyPress(event)\n    {\n        //if(!this._isPressed){\n\n            this._keyDownCode = String.fromCharCode(event.keyCode).toLowerCase();\n\n            this.events.trigger(EVT_KEY_PRESS, event);\n            this._isPressed = true;\n        //}\n        event.preventDefault();\n    }\n\n    /**\n    * Forward the keyup event\n    * \n    * @private\n    * @method onKeyUp\n    * @param {Object} event\n    */\n    onKeyUp(event)\n    {\n        this._keyDownCode = undefined;\n        this._isPressed = false;\n\n        this.events.trigger(EVT_KEY_UP, event);\n        //event.preventDefault();\n    }\n}\n\n// module exports\nexport { Keyboard };\n","/**\n * DOM helper class gives easy access to some basics calculations/manipulations frequently done on DOM elements\n *\n * @class DOM\n */\n\nclass _DOM\n{\n    /**\n     * Get an element's position within the document taking into account the scroll positions\n     * @method getElementPosition\n     * @static\n     * @param {Element} el The DOM element\n     * @return {Object} the position of the element as {x, y}\n     */\n    static getElementPosition(el)\n    {\n        let x = 0;\n        let y = 0;\n\n        while (el)\n        {\n            if (el.tagName === \"BODY\")\n            {\n                // deal with browser quirks with body/window/document and page scroll\n                let xScroll = el.scrollLeft || document.documentElement.scrollLeft;\n                let yScroll = el.scrollTop || document.documentElement.scrollTop;\n\n                x += (el.offsetLeft - xScroll + el.clientLeft);\n                y += (el.offsetTop - yScroll + el.clientTop);\n            }\n            else\n            {\n                // for all other non-BODY elements\n                x += (el.offsetLeft - el.scrollLeft + el.clientLeft);\n                y += (el.offsetTop - el.scrollTop + el.clientTop);\n            }\n            el = el.offsetParent;\n        }\n        return { \"x\":x, \"y\":y };\n    }\n\n}\n\n// module exports\nexport { _DOM };\n","import {getOrDefault} from '../helpers/Misc';\nimport {debug} from '../helpers/Debug';\nimport {Device} from '../helpers/Device';\nimport {_DOM} from '../helpers/DOM';\nimport {Component} from '../Component';\n\n// Events\n\n/**\n * Fired when the mouse postupdate is called\n * @event mouseupdate\n */\nconst EVT_MOUSE_UPDATE = \"mouseupdate\";\n\n/**\n * Fired when a mouse move is detected\n * @event mousemove\n */\nconst EVT_MOUSE_MOVE = 'mousemove';\n\n/**\n * Fired when the pointer moves onto the target element\n * @event mouseover\n */\nconst EVT_MOUSE_OVER = 'mouseover';\n\n/**\n * Fired when the pointer moves off the target element\n * @event mouseout\n */\nconst EVT_MOUSE_OUT = 'mouseout';\n\n/**\n * Fired when a button is pressed\n * @event mousepress\n * @param {Number} button The button number pressed\n */\nconst EVT_MOUSE_PRESS = 'mousepress';\n\n/**\n * Fired when a mouse move is detected and a button is being pressed\n * @event mousedrag\n */\nconst EVT_MOUSE_DRAG = 'mousedrag';\n\n/**\n * Fired when a button is released\n * @event mouserelease\n */\nconst EVT_MOUSE_RELEASE = 'mouserelease';\n\n/**\n * Fired when a button is pressed and released on the target element\n * @event mouseclick\n * @param {Number} button The button number pressed\n */\nconst EVT_MOUSE_CLICK = 'mouseclick';\n\n/**\n * Fired when a button is clicked twice on the target element\n * @event mousedblclick\n * @param {Number} button The button number pressed\n */\nconst EVT_MOUSE_DBLCLICK = 'mousedblclick';\n\n/**\n * Fired when the wheel button is rotated\n * @event mousewheel\n * @param {Number} deltaX The scroll amount for the x-axis\n * @param {Number} deltaY The scroll amount for the y-axis\n * @param {Number} deltaZ The scroll amount for the z-axis\n */\nconst EVT_MOUSE_WHEEL = 'mousewheel';\n\n\nclass Mouse extends Component\n{\n    /**\n     * Give simple access to mouse events\n     * \n     * @class Mouse\n     * @extends Component\n     * @constructor\n     * @param {Object} params Config parameters\n     * @param {Object} [params.target=window] The DOM element this instance is attached to\n    */\n    constructor(params)\n    {\n        super(params);\n\n        this._target = getOrDefault(params, \"target\", window);\n    }\n\n    /**\n    * Initialization method\n    * @method setup Setup\n    */\n    setup()\n    {    \n        this._x = null;\n        this._y = null;\n\n        this._pX = null;\n        this._pY = null;\n\n        this._dragStartX = null;\n        this._dragStartY = null;\n\n        // keeps track of total wheel deltas between two updates\n        this._wheelDeltaX = 0;\n        this._wheelDeltaY = 0;\n        this._wheelDeltaZ = 0;\n\n        // keeps track of whether a button is being pressed\n        this._pressed = false;\n\n        // keeps track of whether the wheel has been activated since last update\n        this._wheelActivated = false;\n\n        // keeps track of whether the wheel values should be reset during next update\n        this._resetWheel = false;\n    }\n\n    /**\n    * @method on\n    */\n    on()\n    {        \n        super.on();\n\n        if(!this._target){\n            debug.error(\"Can't activate the mouse input component without a target\");\n            return;\n        }\n\n        this._target.addEventListener(\"mousemove\", event => this.onMouseMove(event));\n        this._target.addEventListener(\"mouseover\", event => this.onMouseOver(event));\n        this._target.addEventListener(\"mouseout\", event => this.onMouseOut(event));\n        this._target.addEventListener(\"mousedown\", event => this.onMouseDown(event));\n        this._target.addEventListener(\"mouseup\", event => this.onMouseUp(event));\n        this._target.addEventListener(\"click\", event => this.onClick(event));\n        this._target.addEventListener(\"dblclick\", event => this.onDblClick(event));\n        this._target.addEventListener(\"wheel\", event => this.onWheel(event));\n    }\n\n    /**\n    * @method off\n    */\n    off()\n    {        \n        super.off();\n\n        if(!this._target){\n            debug.error(\"Can't deactivate the mouse input component without a target\");\n            return;\n        }\n\n        this._target.removeEventListener(\"mousemove\", event => this.onMouseMove(event));\n        this._target.removeEventListener(\"mouseover\", event => this.onMouseOver(event));\n        this._target.removeEventListener(\"mouseout\", event => this.onMouseOut(event));\n        this._target.removeEventListener(\"mousedown\", event => this.onMouseDown(event));\n        this._target.removeEventListener(\"mouseup\", event => this.onMouseUp(event));\n        this._target.removeEventListener(\"click\", event => this.onClick(event));\n        this._target.removeEventListener(\"dblclick\", event => this.onDblClick(event));\n        this._target.removeEventListener(\"wheel\", event => this.onWheel(event));\n    }\n\n    preUpdate()\n    {\n        // check if the wheel was already active at previous update and if it needs to be reset\n        if(this._wheelActivated){\n            if(this._resetWheel){\n                this._wheelActivated = false;\n                this._resetWheel = false;\n\n                this._wheelDeltaX = 0;\n                this._wheelDeltaY = 0;\n                this._wheelDeltaZ = 0;\n            }\n            else{\n                this._resetWheel = true;\n            }\n        }\n    }\n\n    update()\n    {\n    }\n\n    postUpdate()\n    {\n        // update the previous x and y coordinates\n        this._pX = this._x;\n        this._pY = this._y;\n\n        this.events.trigger(EVT_MOUSE_UPDATE, {\n            \"pX\": this.getPX(),\n            \"pY\": this.getPY(),\n            \"x\": this.getX(),\n            \"y\": this.getY()\n        });\n\n    }\n\n    /**\n    mousemove event handler\n    Fires a mousemove event and possibly a mousedrag event\n\n    @method onMouseMove\n    @private\n    */\n    onMouseMove(event)\n    {\n        if(!this._target instanceof Window)\n        {\n            let position = _DOM.getElementPosition(this._target);\n\n            this._x = event.clientX - position.x;\n            this._y = event.clientY - position.y;\n        }\n        else\n        {\n            this._x = event.clientX;\n            this._y = event.clientY;\n        }\n\n        this.events.trigger(EVT_MOUSE_MOVE, {\n            \"pX\": this.getPX(),\n            \"pY\": this.getPY(),\n            \"x\": this.getX(),\n            \"y\": this.getY()\n        });\n\n        if(this.isPressed()){\n            this.events.trigger(EVT_MOUSE_DRAG, {\n                \"pX\": this.getPX(),\n                \"pY\": this.getPY(),\n                \"x\": this.getX(),\n                \"y\": this.getY()\n            });\n        }\n\n        event.preventDefault();\n    }\n\n    /**\n    mouseover event handler\n    Fires a mouseover event\n\n    @method onMouseOver\n    @private\n    */\n    onMouseOver(event)\n    {\n        this.events.trigger(EVT_MOUSE_OVER);\n\n        event.preventDefault();\n    }\n\n    /**\n    mouseover event handler\n    Fires a mouseout event\n\n    @method onMouseOut\n    @private\n    */\n    onMouseOut(event)\n    {\n        this.events.trigger(EVT_MOUSE_OUT);\n\n        event.preventDefault();\n    }\n\n    /**\n    mousedown event handler\n    Fires a mousepress event and updates the pressed state\n\n    @method onMouseDown\n    @private\n    */\n    onMouseDown(event)\n    {        \n        this._pressed = true;\n\n        this._dragStartX = this.getX();\n        this._dragStartY = this.getY();\n\n        this.events.trigger(EVT_MOUSE_PRESS, event.button);\n\n        event.preventDefault();\n    }\n\n    /**\n    mouseup event handler\n    Fires a mouserelease event and updates the pressed state\n\n    @method onMouseUp\n    @private\n    */\n    onMouseUp(event)\n    {\n        this._pressed = false;\n\n        this._dragStartX = null;\n        this._dragStartY = null;\n\n        this.events.trigger(EVT_MOUSE_RELEASE);\n\n        event.preventDefault();\n    }\n\n    /**\n    cick event handler\n    Fires a mouseclick event\n\n    @method onClick\n    @private\n    */\n    onClick(event)\n    {\n        this.events.trigger(EVT_MOUSE_CLICK, event.button);\n\n        event.preventDefault();\n    }\n\n    /**\n    dblcick event handler\n    Fires a mousedblclick event\n\n    @method onDblClick\n    @private\n    */\n    onDblClick(event)\n    {        \n        this.events.trigger(EVT_MOUSE_DBLCLICK, event.button);\n\n        event.preventDefault();\n    }\n\n    /**\n    wheel event handler\n    Fires a mousewheel event\n\n    @method onWheel\n    @private\n    */\n    onWheel(event)\n    {\n        this._wheelActivated = true;\n\n        this._wheelDeltaX += event.deltaX;\n        this._wheelDeltaY += event.deltaY;\n        this._wheelDeltaZ += event.deltaZ;\n\n        this.events.trigger(EVT_MOUSE_WHEEL, event.deltaX, event.deltaY, event.deltaZ);\n\n        event.preventDefault();\n    }\n\n    /**\n    returns whether a mouse button is currently pressed or not\n\n    @method isPressed\n    @return {Boolean} True if a mouse button is currently pressed\n    */\n    isPressed()\n    {\n        return this._pressed;\n    }\n\n    /**\n    returns the current x coordinate of the mouse\n\n    @method getX\n    @return {Number} The x coordinate of the mouse position\n    */\n    getX()\n    {\n        return this._x;\n    }\n\n    /**\n    returns the current y coordinate of the mouse\n\n    @method getY\n    @return {Number} The y coordinate of the mouse position\n    */\n    getY()\n    {\n        return this._y;\n    }\n\n    /**\n    returns the previous x coordinate of the mouse\n\n    @method getPX\n    @return {Number} The x coordinate of the previous mouse position\n    */\n    getPX()\n    {\n        return this._pX;\n    }\n\n    /**\n    returns the previous y coordinate of the mouse\n\n    @method getPY\n    @return {Number} The y coordinate of the previous mouse position\n    */\n    getPY()\n    {\n        return this._pY;\n    }\n\n    /**\n    returns the x delta between the previous and current mouse positions\n\n    @method getDeltaX\n    @return {Number} The x delta value\n    */\n    getDeltaX()\n    {\n        return this._x - this._pX;\n    }\n\n    /**\n    returns the y delta between the previous and current mouse positions\n\n    @method getDeltaY\n    @return {Number} The y delta value\n    */\n    getDeltaY()\n    {\n        return this._y - this._pY;\n    }\n\n    /**\n    returns the x and y deltas between the previous and current mouse positions\n\n    @method getDelta\n    @return {Object} The x and y delta values\n    */\n    getDelta()\n    {\n        return {\n            \"x\": this.getDeltaX(),\n            \"y\": this.getDeltaY()\n        };\n    }\n\n    /**\n    returns the x offset between the current mouse position and the position at the begining of the drag\n\n    @method getDragOffsetX\n    @return {Number} The x offset value\n    */\n    getDragOffsetX()\n    {\n        if(!this.isPressed()){\n            return 0;\n        }\n\n        return this.getX() - this._dragStartX;\n    }\n\n    /**\n    returns the y offset between the current mouse position and the position at the begining of the drag\n\n    @method getDragOffsetY\n    @return {Number} The y offset value\n    */\n    getDragOffsetY()\n    {\n        if(!this.isPressed()){\n            return 0;\n        }\n\n        return this.getY() - this._dragStartY;\n    }\n\n    /**\n    returns the x and y offsets between the current mouse position and the position at the begining of the drag\n\n    @method getDragOffset\n    @return {Object} The x and y offset values\n    */\n    getDragOffset()\n    {\n        return {\n            'x': this.getDragOffsetX(),\n            'y': this.getDragOffsetY()\n        };\n    }\n\n    /**\n    helper method to check if the wheel is supported on the device\n\n    @method isWheelSupported\n    @return {Boolean} True if the wheel is supported, false otherwise\n    */\n    isWheelSupported()\n    {\n        return (Device.getType() === \"desktop\") && (window.WheelEvent !== undefined);\n    }\n\n    /**\n    helper method to check if the wheel has been rotated\n\n    @method isWheelActivated\n    @return {Boolean} True if the wheel has been rotated, false otherwise\n    */\n    isWheelActivated()\n    {\n        return this._wheelActivated;\n    }\n\n    /**\n    returns the scroll amount for the x-axis\n\n    @method getWheelDeltaX\n    @return {Number} The scroll amount for the x-axis\n    */\n    getWheelDeltaX()\n    {\n        return this._wheelDeltaX;\n    }\n\n    /**\n    returns the scroll amount for the y-axis\n\n    @method getWheelDeltaY\n    @return {Number} The scroll amount for the y-axis\n    */\n    getWheelDeltaY()\n    {\n        return this._wheelDeltaY;\n    }\n\n    /**\n    returns the scroll amount for the z-axis\n\n    @method getWheelDeltaZ\n    @return {Number} The scroll amount for the z-axis\n    */\n    getWheelDeltaZ()\n    {\n        return this._wheelDeltaZ;\n    }\n\n    /**\n    returns the scroll amounts for the x, y and z axes\n\n    @method getWheelDelta\n    @return {Object} The scroll amounts for the x, y and z axes\n    */\n    getWheelDelta()\n    {\n        return {\n            \"x\": this.getWheelDeltaX(),\n            \"y\": this.getWheelDeltaY(),\n            \"z\" :this.getWheelDeltaZ()\n        };\n    }\n}\n\n// module exports\nexport { Mouse };\n","import {_Math} from '../helpers/Math';\nimport {debug} from '../helpers/Debug';\nimport {Component} from '../Component';\nimport {getOrDefault} from '../helpers/Misc';\nimport {_DOM} from '../helpers/DOM';\nimport {Time} from '../time/Time';\n\nclass TouchObject\n{\n    /**\n     * Object that represent what defines a Touch. Touch Class returns this type of objets when events are fired.\n     * This class is used internally and is documented for consultation purpose. Users should not make new instances from it.\n     * @private\n     * @class TouchObject\n     * @constructor\n     * @param {Number} x the x coordinate of the touch\n    */\n    constructor(x, y, index)\n    {\n        /**\n        * index\n        * @property {Number} index\n        */\n        this.index = index;\n        /**\n        * x coordinate of the touch\n        * @property {Number} x\n        */\n        this.x = x;\n        /**\n        * y coordinate of the touch\n        * @property {Number} y\n        */\n        this.y = y;\n        /**\n        * pX pevious x coordinate of the touch\n        * @property {Number} pX\n        */\n        this.pX = this.x;\n        /**\n        * pY previous y coordinate of the touch\n        * @property {Number} pY\n        */\n        this.pY = this.y;\n        /**\n        * id used internally to manage the touch list in Touch Class\n        * @property {Object} id\n        */\n        this.id = undefined;\n        /**\n        * xDelta delta on x coordinate (difference between pevious and current x)\n        * @property {Number} xDelta\n        */\n        this.xDelta = 0;\n        /**\n        * yDelta delta on y coordinate (difference between pevious and current y)\n        * @property {Number} yDelta\n        */\n        this.yDelta = 0;\n        /**\n        * startX x coordinate where the touch began\n        * @property {Number} startX\n        */\n        this.startX = this.x;\n        /**\n        * startY x coordinate where the touch began\n        * @property {Number} startY\n        */\n        this.startY = this.y;\n        /**\n        * offset on the X coordinate (difference between startX and current x)\n        * @property {Number} offsetX\n        */\n        this.offsetX = 0;\n        /**\n        * offset on the Y coordinate (difference between startY and current y)\n        * @property {Number} offsetY\n        */\n        this.offsetY = 0;\n    }\n\n    /**\n    * Set a new x coordinate and compute the new xDelta and offsetX\n    * @method setX\n    * @param {Object} x\n    */\n    setX(x)\n    {\n\n        //this.pX = this.x;\n\n        this.x = x;\n        this.xDelta = this.x - this.pX;\n\n        this.offsetX = this.x - this.startX;\n    }\n\n    /**\n    * Set a new y coordinate and compute the new yDelta and offsetY\n    * @method setY\n    * @param {Object} y\n    */\n    setY(y)\n    {\n\n        //this.pY = this.y;\n\n        this.y = y;\n        this.yDelta = this.y - this.pY;\n\n        this.offsetY = this.y - this.startY;\n    }\n\n    setPX()\n    {\n        this.pX = this.x;\n    }\n\n    setPY()\n    {\n        this.pY = this.y;\n    }\n\n}\n\n/**\n * Fired when a touch starts\n * @event touchstart\n */\nconst EVT_TOUCH_START = 'touchstart';\n\n/**\n * Fired when a touch ends\n * @event touchend\n */\nconst EVT_TOUCH_END = 'touchend';\n\n/**\n * Fired when a touch moved\n * @event touchmoved\n */\nconst EVT_TOUCH_MOVED = 'touchmoved';\n\n/**\n * Fired when the tap count changed\n * @event tapchanged\n */\nconst EVT_TAP_CHANGED = 'tapchanged';\n\n/**\n * Fired when the pressed state changed (ie a touch is on screen)\n * @event pressedchanged\n */\nconst EVT_PRESSED_CHANGED = 'pressedchanged';\n\nclass Touch extends Component\n{\n    /**\n     * Touch give an interface to access the multitouch events of the device. It holds a list of currently active touches and various ways to access their coordinates.\n     * \n     * @example\n     *     //this is how to use events in a user's script\n     *     function script()\n     *     {\n     *        \n     *        var M;\n     *        var R;\n     *        \n     *        var camera;\n     *        var cube;\n     *        var light;\n     *    \n     *        var y = 0;\n     *        var speed = 0;\n     *    \n     *        var touch;\n     *        \n     *        this.setup = function()\n     *        {\n     *            M = this.getContext();\n     *            R = M.addComponent( new Mobilizing.Renderer3D() );\n     *            \n     *            touch = M.addComponent(new Mobilizing.input.Touch({\"target\": R.canvas}));\n     *            touch.setup();//set it up\n     *            touch.on();//active it\n     *            \n     *            //construct a default perspective camera\n     *            camera = new Mobilizing.Camera();\n     *            camera.setFarPlane(10000);\n     *            camera.setToPixel();\n     *            R.addCamera(camera);\n     *    \n     *            //make a light\n     *            light = new Mobilizing.Light();\n     *            light.transform.setLocalPosition(500,-100,500);\n     *            light.setDistance(5000);\n     *            R.addToCurrentScene(light);\n     *    \n     *            //make a cube\n     *            cube = new Mobilizing.Mesh({primitive:\"box\", width:1, height:1, depth:1});\n     *            cube.transform.setLocalPosition(0,0,0);\n     *            cube.transform.setLocalScale(50);\n     *            R.addToCurrentScene(cube);\n     *        };\n     *    \n     *        this.update = function()\n     *        {\n     *            if(touch.pressed){\n     *    \n     *                cube.transform.setLocalPosition(\n     *                     touch.getX(0),\n     *                    - touch.getY(0),\n     *                    0);\n     *            }\n     *        };\n     *    };\n     * \n     * @class Touch\n     * @constructor\n     * @extends Component\n     * @param {Object} params Config parameters\n     * @param {DOMElement} params.target The DOM element that will be used to attach touch events on\n    */\n    constructor(params)\n    {\n        super(params);\n\n        this._target = getOrDefault(params, \"target\", window);\n        this._time = new Time();\n    }\n\n    /**\n    * Initialization method\n    * @method setup Setup\n    */\n    setup()\n    {\n        //!!this.getContext() is not already available in constructor as setContext() is called after creation!!\n        let context = this.getContext();\n\n        context.addComponent(this._time);\n        this._time.setup();\n        this._time.on();\n\n        /**\n        Gives the number of touch currently active\n        @property {Number} count\n        */\n        this.count = 0;\n        /**\n        true if the active touch on screen > 1, false otherwise\n        @property {Boolean} pressed\n        */\n        this.pressed = false;\n\n        this.touches = {};\n\n        this.taps = 0;\n        this.tapsMaxInterval = 500; //sec but depends on timeScale (!?)\n        this.oldTapTime = 0;\n\n        this.pinchTouches = [];\n        this.pinchStart = 0;\n        this.pinch = 0;\n        this.pinchActive = false;\n\n        this.touchState;\n        this.touchDown;\n        this.touchUp;\n    }\n\n    on()\n    {\n        super.on();\n\n        this._target.addEventListener( \"touchstart\", event => this.onTouchStart(event));\n\n        this._target.addEventListener( \"touchend\", event => this.onTouchEnd(event));\n        this._target.addEventListener( \"touchcancel\", event => this.onTouchEnd(event));\n        this._target.addEventListener( \"touchleave\", event => this.onTouchEnd(event));\n\n        this._target.addEventListener( \"touchmove\", event => this.onTouchMove(event));\n    }\n\n    off()\n    {\n        super.off();\n\n        this._target.removeEventListener( \"touchstart\", event => this.onTouchStart(event));\n\n        this._target.removeEventListener( \"touchend\", event => this.onTouchEnd(event));\n        this._target.removeEventListener( \"touchcancel\", event => this.onTouchEnd(event));\n        this._target.removeEventListener( \"touchleave\", event => this.onTouchEnd(event));\n\n        this._target.removeEventListener( \"touchmove\", event => this.onTouchMove(event));\n    }\n\n\n    /**\n     * @method update\n     */\n    update()\n    {\n\n        if (this.pressed && !this.touchState)\n        {\n            this.touchDown = true;\n        }\n        else\n        {\n            this.touchDown = false;\n        }\n        if (!this.pressed && this.touchState)\n        {\n            this.touchUp = true;\n        }\n        else\n        {\n            this.touchUp = false;\n        }\n        this.touchState = this.pressed;\n\n        for(let obj in this.touches)\n        {\n            this.touches[obj].setPX();\n            this.touches[obj].setPY();\n        }\n    }\n\n    /**\n     * onTouchStart listener\n     * Manage a new touch and organize it in the main touch list Input.touches\n     *\n     * @method onTouchStart\n     * @private\n    */\n    onTouchStart(event)\n    {\n        let context = this.getContext();\n\n        let position = _DOM.getElementPosition(this._target);\n\n        let newTouch = null;\n\n        if( event.changedTouches !== null && event.changedTouches !== undefined)\n        {//touch\n\n            for(let i=0; i<event.changedTouches.length; i++)\n            {\n                let touch = event.changedTouches[i];\n\n                if( !(touch.identifier in this.touches) )\n                {//no touch in memory, build it\n\n                    var x = touch.pageX - position.x;\n                    var y = touch.pageY - position.x;\n\n                    newTouch = new TouchObject(x, y, this.count);\n                    debug.log(\"newTouch\",newTouch);\n\n                    newTouch.setX( x );\n                    newTouch.setY( y );\n                    newTouch.id = touch.identifier;\n\n                    newTouch.up = false; //JON\n                    newTouch.down = true; //JON\n\n                    //à laisser ici!\n                    this.touches[touch.identifier] = newTouch;\n\n                    this.count += 1;\n\n                }\n                else\n                {//touch is already there, update\n\n                    let touch = this.touches[touch.identifier];\n\n                    let x = touch.pageX - position.x;\n                    let y = touch.pageY - position.x;\n\n                    touch.setX( x );\n                    touch.setY( y );\n                }\n\n                //Events\n                this.events.trigger(EVT_TOUCH_START, newTouch);\n            }\n        }\n\n        //tap management, add a tap after a time interval\n        if(this._time.getTime() - this.oldTapTime < this.tapsMaxInterval)\n        {\n            this.taps += 1;\n            //Events\n            this.events.trigger(EVT_TAP_CHANGED, this.taps);\n        }\n        else\n        {\n            this.taps = 1;\n            //Events\n            this.events.trigger(EVT_TAP_CHANGED, this.taps);\n        }\n        //current time memory for next tap\n        this.oldTapTime = this._time.getTime();\n\n        //pressed state\n        this.pressed = true;\n        this.events.trigger(EVT_PRESSED_CHANGED, this.pressed);\n\n        //avoid the browser's defaults interactions\n        event.preventDefault();\n    }\n\n    /**\n     * onTouchEnd listener\n     * \n     * Manage a touch removal and organize it in the main touch list Input.touches\n     * \n     * @method onTouchEnd\n     * @private\n    */\n    onTouchEnd(event)\n    {\n        if( event.changedTouches !== null && event.changedTouches !== undefined ) {//touch\n\n            for(let i=0; i<event.changedTouches.length; i++)\n            {\n\n                let touch = event.changedTouches[i];\n\n                if(touch.identifier in this.touches) {//touch is there!\n\n                    //Events\n                    this.events.trigger(EVT_TOUCH_END, this.touches[touch.identifier]);\n                    //erase\n                    delete this.touches[touch.identifier];\n                    this.count -= 1;\n                }\n            }\n\n            //reset pinch value when no fingers\n            if(this.count <= 1)\n            {\n                this.pinchTouches = [];\n                this.pinchStart = 0;\n                this.pinch = 0;\n                this.pinchActive = false;\n            }\n\n        }\n\n        if(this.count === 0)\n        {\n            this.pressed = false;\n            this.events.trigger(EVT_PRESSED_CHANGED, this.pressed);\n        }\n\n        event.preventDefault();\n    }\n\n    /** \n     * onTouchMove listener\n     *\n     * Manage a touch move and organize it in the main touch list Input.touches\n     *\n     * @method onTouchMove\n     * @private\n    */\n    onTouchMove(event)\n    {\n        let position = _DOM.getElementPosition(this._target);\n\n        if( event.changedTouches !== null && event.changedTouches !== undefined ) {//touch\n\n            for(let i=0; i<event.changedTouches.length; i++)\n            {\n\n                let touch = event.changedTouches[i];\n\n                if(touch.identifier in this.touches) {//touch is there!\n\n                    let myTouch = this.touches[touch.identifier];\n\n                    var x = touch.pageX - position.x;\n                    var y = touch.pageY - position.y;\n\n                    myTouch.setX( x );\n                    myTouch.setY( y );\n\n                    this.events.trigger(EVT_TOUCH_MOVED, myTouch);\n                }\n            }\n        }\n\n        this.taps = 0;\n\n        event.preventDefault();\n    }\n\n    /**\n     * returns the x coordinate of the touch given as paramater\n     *\n     * @method getX\n     * @param {Number:Int} index the index of the touch to get x coordinate from\n     * @return {Number:Int} x coordinate of the touch if active, -1 if not active\n    */\n    getX(index)\n    {\n        let val;\n\n        if(typeof index === \"number\")\n        {\n            for(let obj in this.touches)\n            {\n                if(this.touches[obj].index === index)\n                {\n                    val = this.touches[obj].x;\n                }\n            }\n        }\n        return val;\n    }\n\n    /**\n     * returns the y coordinate of the touch given as paramater\n     *\n     * @method getY\n     * @param {Number:Int} index the index of the touch to get y coordinate from\n     * @return {Number:Int} y coordinate of the touch if active, -1 if not active\n    */\n    getY(index)\n    {\n        let val;\n\n        if(typeof index === \"number\")\n        {\n            for(let obj in this.touches)\n            {\n                if(this.touches[obj].index === index)\n                {\n                    val = this.touches[obj].y;\n                }\n            }\n        }\n        return val;\n    }\n\n    /**\n     * returns a TouchObject\n     *\n     * @method get\n     * @param {Number:Int} index the index of the touchObject to get\n     * @return {TouchObject}\n    */\n    get(index)\n    {\n        let val;\n\n        if(typeof index === \"number\")\n        {\n            for(let obj in this.touches)\n            {\n                if(this.touches[obj].index === index)\n                {\n                    val = this.touches[obj];\n                }\n            }\n        }\n        return val;\n    }\n\n    /**\n     * Returns a Number that represents the coordinate of the touch delta,\n     * that is the numerical difference between the previous state in time and the actual one.\n     *\n     * @method getDeltaX\n     * @param {Number:Int || Object:Touch} index the index of the touch to get x coordinate from, or the touch object\n     * @return {Number:Int}, the x coordinates of the touch delta;\n    */\n    getDeltaX(index)\n    {\n        let val;\n\n        if(typeof index === \"number\")\n        {\n\n            for(let obj in this.touches)\n            {\n\n                let touch = this.touches[obj];\n\n                if(touch.index === index)\n                {\n\n                    val = touch.xDelta;\n                }\n            }\n        }\n        return val;\n    }\n\n    /**\n     * Returns a Number that represents the coordinate of the touch delta,\n     * that is the numerical difference between the previous state in time and the actual one.\n     *\n     * @method getDeltaY\n     * @param {Number:Int || Object:Touch} index the index of the touch to get y coordinate from, or the touch object\n     * @return {Number:Int}, the y coordinates of the touch delta;\n    */\n    getDeltaY(index)\n    {\n        let val;\n\n        if(typeof index === \"number\")\n        {\n\n            for(let obj in this.touches)\n            {\n\n                let touch = this.touches[obj];\n\n                if(touch.index === index)\n                {\n\n                    val = touch.yDelta;\n                }\n            }\n        }\n        return val;\n    }\n\n    /**\n     * Returns an object {x:Number, y:Number} that represents the coordinate of the touch delta,\n     * that is the numerical difference between the previous state in time and the actual one.\n     *\n     * @method getDelta\n     * @param {Number:Int || Object:Touch} index the index of the touch to get coordinates from, or the touch object\n     * @return {Object} {x:Number, y:Number}, the x & y coordinates of the touch delta;\n    */\n    getDelta(index)\n    {\n        let val;\n\n        if(typeof index === \"number\")\n        {\n\n            for(let obj in this.touches)\n            {\n\n                let touch = this.touches[obj];\n\n                if(touch.index === index)\n                {\n\n                    val = {\"x\":touch.xDelta, \"y\":touch.yDelta};\n                }\n            }\n        }\n        return val;\n    }\n\n    /**\n     * Returns a Number that represents the x coordinate of the touch offset,\n     * that is the numerical difference between the start point of the touch and the actual one.\n     *\n     * @method getOffsetX\n     * @param {Number:Int || Object:Touch} index the index of the touch to get x offset coordinate from, or the touch object\n     * @return {Number} the x coordinates of the touch offset;\n    */\n    getOffsetX(index)\n    {\n        let val;\n\n        for(let obj in this.touches)\n        {\n\n            let touch = this.touches[obj];\n\n            if(touch.index === index)\n            {\n                val = touch.offsetX;\n            }\n        }\n        return val;\n    }\n\n    /**\n     * Returns a Number that represents the y coordinate of the touch offset,\n     * that is the numerical difference between the start point of the touch and the actual one.\n     *\n     * @method getOffsetY\n     * @param {Number:Int || Object:Touch} index the index of the touch to get y offset coordinate from, or the touch object\n     * @return {Number} the y coordinates of the touch offset;\n    */\n    getOffsetY(index)\n    {\n        let val;\n\n        for(let obj in this.touches)\n        {\n\n            let touch = this.touches[obj];\n\n            if(touch.index === index)\n            {\n                val = touch.offsetY;\n            }\n        }\n        return val;\n    }\n\n    /**\n     * Returns an object {x:Number, y:Number} that represents the coordinate of the touch offset,\n     * that is the numerical difference between the start point of the touch and the actual one.\n     *\n     * @method getOffset\n     * @param {Number:Int || Object:Touch} index the index of the touch to get offset coordinate from, or the touch object\n     * @return {Object} {x:Number, y:Number}, the x & y coordinates of the touch offset;\n    */\n    getOffset(index)\n    {\n        let val;\n\n        for(let obj in this.touches)\n        {\n\n            let touch = this.touches[obj];\n\n            if(touch.index === index)\n            {\n                val = {\"x\":touch.offsetX, \"y\":touch.offsetY};\n            }\n        }\n        return val;\n    }\n    /**\n     *Returns a Number that represents the pinch touch move,\n     *that is the numerical difference between the start point of 2 touches and the actual one.\n     *\n     * @method getPinch\n     * @return {Number} the pinch delta value;\n    */\n    getPinch()\n    {\n\n        let touchNb = 0;\n\n        //We must use a min of 2 touches\n        if(this.count >= 2)\n        {\n            //if don't have the touches, find and save them, else compute start point\n            if(this.pinchTouches[1] === undefined)\n            {\n                //loop through touches to find at least 2\n                for(let obj in this.touches)\n                {\n                    if(touchNb < 2)\n                    {\n                        //gather 2 touch if not already in memory\n                        this.pinchTouches[touchNb] = this.touches[obj];\n                        touchNb++;\n                    }\n                    if(touchNb === 2)\n                    {\n\n                        this.pinchActive = true;\n                        //we have 2 touches in memory, compute startpoint\n                        this.pinchStart = _Math.dist(\n                            this.pinchTouches[0].x,\n                            this.pinchTouches[0].y,\n                            this.pinchTouches[1].x,\n                            this.pinchTouches[1].y);\n\n                        //debug.log(\"pinchStart at break\",this.pinchStart);\n                        break;//2 touches found, break loop;\n                    }\n                }\n            }\n\n            //pinch computation's ready to be done\n            this.pinch =\n                _Math.dist(\n                this.pinchTouches[0].x,\n                this.pinchTouches[0].y,\n                this.pinchTouches[1].x,\n                this.pinchTouches[1].y)\n                - this.pinchStart;\n\n            //we have 2 touches in memory, compute startpoint\n            this.pinchStart = _Math.dist(\n                this.pinchTouches[0].x,\n                this.pinchTouches[0].y,\n                this.pinchTouches[1].x,\n                this.pinchTouches[1].y);\n        }\n        else\n        {\n            this.pinchStart = 0;\n            this.pinch = 0;\n            this.pinchTouches = [];\n        }\n\n        return this.pinch;\n    }\n}\n\n// module exports\nexport { Touch };\n","import {Vector3} from '../core/Vector3';\nimport {debug} from '../helpers/Debug';\nimport {Component} from '../Component';\nimport {Device} from '../helpers/Device';\n\n/**\n * Fired when a new acceleration is available\n * @event acceleration\n */\nconst EVT_ACC = 'acceleration';\n\n/**\n * Fired when a new acceleration including gravity is available\n * @event accelerationIncludingGravity\n */\nconst EVT_ACC_GRAVITY = 'accelerationIncludingGravity';\n\n/**\n * Fired when a new gravity vector is available\n * @event accelerationGravityVector\n */\nconst EVT_ACC_GRAVITY_VECTOR = 'accelerationGravityVector';\n\n/**\n * Fired when a new rotationrate data is available\n * @event rotationrate\n */\nconst EVT_ROTATION_RATE = 'rotationrate';\n\nclass Motion extends Component\n{\n    /**\n     * @class Motion\n     * @constructor\n     * Motion gives access to the embbeded accelerometers data of you device.\n    */\n    constructor(param){\n        super(param);\n\n        /**\n         * true if the acceloremeters are available on the device, false otherwise\n         * @property {Boolean} _accAvailable\n        */\n        this._accAvailable = window.DeviceMotionEvent;\n    }\n\n    setup(){\n\n        this.rotationRate = new Vector3();\n        this.acc = new Vector3();\n        this.userAcc = new Vector3();\n\n        this.smoothedAcc = new Vector3();\n\n        this.accel = [0, 0, 0];\n        this.kFilteringFactor = 0.07;\n        this.gravityVector = new Vector3();\n    }\n\n    on(){\n        if(this._accAvailable){\n            super.on();\n            \n            window.addEventListener( 'devicemotion', event => this.onDeviceMotion(event) );\n\n        }else{\n            debug.info(\"this device doesn't have acceloremeters\");\n        }\n    }\n\n    off(){\n        super.off();\n\n        window.removeEventListener( 'devicemotion', event => this.onDeviceMotion(event) );\n    }\n\n    onDeviceMotion(event){\n        \n        //Chrome manage everything reversed to Safari. We use Safari as 1, Chrome as -1\n        let reverse = 1;\n\n        if(Device.getOS() === \"Android\"){\n            reverse = -1;\n        }\n\n        if (event.acceleration)\n        {\n            this.userAcc.x = event.acceleration.x * reverse;\n            this.userAcc.y = event.acceleration.y * reverse;\n            this.userAcc.z = event.acceleration.z * reverse;\n\n            //if the device doesn't support acceleration without gravity\n            if(event.acceleration.x === null || event.acceleration.x === undefined){\n                this.computeUserAcc();\n            }\n            this.events.trigger(EVT_ACC, this.userAcc);\n        }\n\n        if (event.accelerationIncludingGravity)\n        {\n            this.acc.x = event.accelerationIncludingGravity.x * reverse;\n            this.acc.y = event.accelerationIncludingGravity.y * reverse;\n            this.acc.z = event.accelerationIncludingGravity.z * reverse;\n\n            //propagate event to user script\n            this.events.trigger(EVT_ACC_GRAVITY, this.acc);\n\n            //propagate custom event to user script\n            this.events.trigger(EVT_ACC_GRAVITY_VECTOR, () => {\n                this.computeGravityVector();\n                return this.gravityVector;\n            });\n        }\n\n        if (event.rotationRate)\n        {\n            this.rotationRate.x = event.rotationRate.alpha;\n            this.rotationRate.y = event.rotationRate.beta;\n            this.rotationRate.z = event.rotationRate.gamma;\n\n            //propagate custom event to user script\n            this.events.trigger(EVT_ROTATION_RATE, this.rotationRate);\n        }\n    }\n\n    /**\n    * Compute the values for the acc on devices that gives \"undefined\" for the event.acceleration prop (some Android)\n    * @private\n    * @method computeUserAcc\n    */\n    computeUserAcc(){\n\n        this.accel[0] = this.acc.x * this.kFilteringFactor + this.accel[0] * (1.0 - this.kFilteringFactor);\n        this.accel[1] = this.acc.y * this.kFilteringFactor + this.accel[1] * (1.0 - this.kFilteringFactor);\n        this.accel[2] = this.acc.z * this.kFilteringFactor + this.accel[2] * (1.0 - this.kFilteringFactor);\n\n        /*debug.log( this.acc.x - this.accel[0],\n                        this.acc.y - this.accel[1],\n                        this.acc.z - this.accel[2]);*/\n\n        this.userAcc.x = this.acc.x - this.accel[0];\n        this.userAcc.y = this.acc.y - this.accel[1];\n        this.userAcc.z = this.acc.z - this.accel[2];\n    }\n\n    /**\n    * Method to compute the gravity orientation vector based on accel including gravity.\n    * The result can also be get through the event onAccelerationGravityVector\n    * \n    * @method computeGravityVector\n    * @private\n    */\n    computeGravityVector()\n    {\n        this.accel[0] = this.acc.x * this.kFilteringFactor + this.accel[0] * (1.0 - this.kFilteringFactor);\n        this.accel[1] = this.acc.y * this.kFilteringFactor + this.accel[1] * (1.0 - this.kFilteringFactor);\n        this.accel[2] = this.acc.z * this.kFilteringFactor + this.accel[2] * (1.0 - this.kFilteringFactor);\n\n        this.gravityVector.z = this.accel[2] *( 360 /(2 * Math.PI) ) *1.1;\n        this.gravityVector.x = this.accel[1] *( 360 /(2 * Math.PI) ) *1.1;\n        this.gravityVector.y = Math.atan2(this.accel[0], this.accel[1]) * (180.0 / Math.PI) ;\n\n    }\n\n    /**\n     * Method to get the accel values without gravity.\n     * The result can also be get through the event onAcceleration\n     * \n     * @method getUserAcc\n     * @return {Object} userAcc object composed by x, y & z components\n    */\n    getUserAcc(){\n        return this.userAcc;\n    }\n\n    /**\n     * Method to get the accel values including gravity.\n     * The result can also be get through the event onAccelerationIncludingGravity\n     * \n     * @method getAcc\n     * @return {Object} acc object composed by x, y & z components\n    */\n    getAcc(){\n        return this.acc;\n    }\n\n    /**\n     * Method to get the gravity orientation vector based on accel including gravity.\n     * The result can also be get through the event onAccelerationGravityVector\n     * \n     * @method getGravityVector\n     * @return {Object} gravityVector object composed by x, y & z components\n    */\n    getGravityVector(){\n        return this.gravityVector;\n    }\n\n    /**\n     * Method to get the filtered accel including gravity.\n     * \n     * @method getSmoothedAcc\n     * @param {Number} factor The number to use for the filtering aglorithm (0.07 gives good results)\n     * @return {Object} smoothedAcc object composed by x, y & z components\n    */\n    getSmoothedAcc(factor)\n    {\n        this.smoothedAcc.x = this.acc.x * factor + this.smoothedAcc.x * (1.0 - factor);\n        this.smoothedAcc.y = this.acc.y * factor + this.smoothedAcc.y * (1.0 - factor);\n        this.smoothedAcc.z = this.acc.z * factor + this.smoothedAcc.z * (1.0 - factor);\n        return this.smoothedAcc;\n    }\n}\n\n// module exports\nexport { Motion };\n","import {Euler} from '../core/Euler';\nimport {Vector3} from '../core/Vector3';\nimport {Matrix4} from '../core/Matrix4';\nimport {Quaternion} from '../core/Quaternion';\nimport {_Math} from '../helpers/Math';\nimport {Component} from '../Component';\n\n/**\n * Fired when a new orientation is available\n * @event deviceorientation\n */\nconst EVT_DEVICE_ORIENTATION = \"deviceorientation\";\n\n/**\n * Fired when calibration is required\n * @event compassneedscalibration\n */\nconst EVT_COMPASS_CALIBRATION = \"compassneedscalibration\";\n\nclass Orientation extends Component\n{\n    /**\n     * Uses built-in compass and/or gyroscope to produce orientation Data. Some heplers functions are in there to generate quarternion that can be applied on a camera or a 3D object's transform.\n     * \n     * @class Orientation\n     * @extends Component\n     * @constructor\n    */\n    constructor(params){\n        super(params)\n\n        /**\n        * true if the magnetometer/compass is available on the device, false otherwise\n        * @property {Boolean} compassAvailable\n        */\n        this.compassAvailable = window.DeviceOrientationEvent;\n    }\n\n    setup(){\n\n        this.compass = new Vector3();\n\n        this.deviceRotationMatrix = new Matrix4();\n        this.deviceHeading = null;\n        this.deviceAttitude = null;\n        this.deviceBank = null;\n    }\n\n    on(){\n        super.on();\n\n        window.addEventListener(\"deviceorientation\", event => this.onDeviceOrientation(event) );\n        window.addEventListener(\"compassneedscalibration\", event => this.onCompassCalibration(event));\n    }\n\n    off(){\n        super.off();\n\n        window.removeEventListener(\"deviceorientation\", event => this.onDeviceOrientation(event) );\n        window.removeEventListener(\"compassneedscalibration\", event => this.onCompassCalibration(event));\n    }\n\n    /**\n     * Returns the compass/gyro current raw values.\n     * This can also be get with the onDeviceOrientation event from the user script\n     * \n     * @method getDeviceOrientation\n     * @return {Object} compass object with x, y & z components\n    */\n    getDeviceOrientation()\n    {\n        return this.compass;       \n    }\n\n    /**\n    * Creates a Quaternion that matches the device's current orientation. Calculated in radians.\n    * @private\n    * @method createGyroQuaternion\n    * @param {Number} alpha the angle to use for the quaternion creation\n    * @param {Number} beta  the angle to use for the quaternion creation\n    * @param {Number} gamma the angle to use for the quaternion creation\n    * @param {Object} screenOrientation orientation of the screen in degree! Can be very different depending on the plateform...\n    * @author Rich Tibbett, https://github.com/richtr/threeVR\n    */\n    createGyroQuaternion(alpha, beta, gamma, screenOrientation){\n\n        if ( alpha !== 0 && beta !== 0 && gamma !== 0) {\n\n            var finalQuaternion = new Quaternion();\n            var deviceEuler = new Euler();\n            var screenTransform = new Quaternion();\n            var worldTransform = new Quaternion( - Math.sqrt(0.5), 0, 0, Math.sqrt(0.5) ); // - PI/2 around the x-axis\n            var minusHalfAngle = 0;\n\n            deviceEuler.set( beta, alpha, -gamma, 'YXZ' );\n            finalQuaternion.setFromEuler( deviceEuler );\n            minusHalfAngle = -screenOrientation / 2;\n\n            screenTransform.set( 0, Math.sin( minusHalfAngle ), 0, Math.cos( minusHalfAngle ) );\n\n            finalQuaternion.multiply( screenTransform );\n            finalQuaternion.multiply( worldTransform );\n\n            return finalQuaternion;\n        }else{\n            return new Quaternion(0,0,0);//we have nothing to give\n        }\n    }\n\n    /**\n     * Can be used in the transform of a perspective camera to produce a \"blind camera\" effect : move the screen around to frame a part of the current scene like if you were using a camera.\n     * \n     * @method getGyroQuaternion\n     */\n    getGyroQuaternion()\n    {\n        if(this.compassAvailable)\n        {\n            if(this.compass.alpha)\n            {\n                var quaternion = this.createGyroQuaternion(\n                    _Math.degToRad(this.compass.alpha),\n                    _Math.degToRad(this.compass.beta),\n                    _Math.degToRad(this.compass.gamma),\n                    _Math.degToRad(window.orientation || 0)\n                );\n                return quaternion;\n            }\n        }\n    }\n\n    /**\n    * compass calibration event callback\n    * @private\n    * @method compassCalibrationHandler\n    * @param {Object} event\n    */\n    onCompassCalibration(event)\n    {\n        //alert(\"onCompassCalibration call\", event);\n        this.events.trigger(EVT_COMPASS_CALIBRATION, event);\n    }\n\n    /**\n    * callback used to access compass event.\n    * \n    * @private\n    * @method onDeviceorientation\n    * @param {Object} event\n    */\n    onDeviceOrientation(event)\n    {\n        this.compass.alpha = event.alpha;//x\n        this.compass.beta = event.beta;//y\n        this.compass.gamma = event.gamma;//z\n\n        //this.compass.heading = event.compassHeading || event.webkitCompassHeading || event.mozCompassHeading || event.ieCompassHeading;// || -event.alpha;\n\n        //When the device doesn't generate a heading information, find a substitute.\n        if (event.webkitCompassHeading)\n        {\n            this.compass.heading = event.webkitCompassHeading;\n        }\n        else\n        {\n            this.compass.heading =-event.alpha;\n        }\n\n        this.events.trigger(EVT_DEVICE_ORIENTATION, this.compass);\n    }\n\n    //FIXME (may be garbage code...)\n    computeRotationMatrix( alpha, beta, gamma )\n    {\n\n        var _x = beta  ? _Math.degToRad(beta)  : 0; // beta value\n        var _y = gamma ? _Math.degToRad(gamma) : 0; // gamma value\n        var _z = alpha ? _Math.degToRad(alpha) : 0; // alpha value\n\n        var cX = Math.cos( _x );\n        var cY = Math.cos( _y );\n        var cZ = Math.cos( _z );\n        var sX = Math.sin( _x );\n        var sY = Math.sin( _y );\n        var sZ = Math.sin( _z );\n\n        //\n        // ZXY rotation matrix construction.\n        //\n\n        var m11 = cZ * cY - sZ * sX * sY;\n        var m12 = - cX * sZ;\n        var m13 = cY * sZ * sX + cZ * sY;\n\n        var m21 = cY * sZ + cZ * sX * sY;\n        var m22 = cZ * cX;\n        var m23 = sZ * sY - cZ * cY * sX;\n\n        var m31 = - cX * sY;\n        var m32 = sX;\n        var m33 = cX * cY;\n\n        this.deviceRotationMatrix.set(\n            m11,    m21,    m31, 0,\n            m12,    m22,    m32, 0,\n            m13,    m23,    m33, 0,\n            0,      0,      0,   1\n        );\n\n        if (m12 > 0.998) { // singularity at north pole\n            this.deviceHeading = Math.atan2(m31,m33);\n            this.deviceAttitude = Math.PI/2;\n            this.deviceBank = 0;\n            return;\n        }\n        if (m12 < -0.998) { // singularity at south pole\n            this.deviceHeading = Math.atan2(m31,m33);\n            this.deviceAttitude = -Math.PI/2;\n            this.deviceBank = 0;\n            return;\n        }\n\n        this.deviceHeading = Math.atan2(-m13,m11);\n        this.deviceBank = Math.atan2(-m32,m22);\n        this.deviceAttitude = Math.asin(m12);\n    }\n\n    updateDeviceRotationMatrix(){\n        this.computeRotationMatrix(this.compass.alpha, this.compass.beta, this.compass.gamma);\n    }\n\n    getDeviceRotationMatrix() {\n        this.updateDeviceRotationMatrix();\n        return this.deviceRotationMatrix;\n    }\n}\n\n// module exports\nexport { Orientation };\n","import {getOrDefault} from '../helpers/Misc';\nimport {debug} from '../helpers/Debug';\nimport {Component} from '../Component';\nimport {_Math} from '../helpers/Math';\n\n/**\n * Fired when the location has been updated\n * @event locationupdated\n */\nconst EVT_LOC_UPDATED = \"locationupdated\";\n\n/**\n * Fired when the location update generated an error\n * @event locationerror\n */\nconst EVT_LOC_ERROR = \"locationerror\";\n\nclass GPS extends Component\n{\n    /**\n     * @class GPS\n     * @constructor\n     * \n     * @param {Object} params Config parameters\n     * @param {Object} params.context the Mobilizing context this Input instance is linked to\n     * @param {Boolean} params.enableHighAccuracy Boolean to activate accurate location (eats more battery and takes time)\n     * @param {Number} params.maximumAge Number of millisecond to define the maximum age of the geolocation data (default = 500000)\n     * @param {Number} params.timeout timeout of the location service in millisecond\n     */\n    constructor(params)\n    {\n        super(params)\n\n        /**\n        * Accurate location (eats more battery and takes time)\n        * @private\n        * @property {Boolean} _enableHighAccuracy\n        */\n        this._enableHighAccuracy = getOrDefault(params, \"enableHighAccuracy\", false);\n\n        /**\n        * Number of millisecond to define the maximum age of the geolocation data\n        * @private\n        * @property {Number} _maximumAge\n        */\n        this._maximumAge = getOrDefault(params, \"maximumAge\", undefined);\n\n        /**\n        * Timeout of the location service in millisecond\n        * @private\n        * @property {Number} _timeout\n        */\n        this._timeout = getOrDefault(params, \"timeout\", undefined);\n\n        /**\n         * true if the GPS is available on the device, false otherwise\n         * @private\n         * @property {Boolean} _GPSAvailable\n        */\n        this._GPSAvailable = (navigator !== undefined) && (\"geolocation\" in navigator);\n    }\n\n    /**\n    * Set the GPS up.\n    * @method setup\n    */\n    setup()\n    {\n        /**\n         * Object containing the informations given by the GPS. Used internally.\n         * @property {Object} _location\n         * @private\n        */\n        this._location = {\n            latitude : null,\n            longitude : null,\n            altitude : null,\n            accuracy: null,\n            altitudeAccuracy : null,\n            heading : null,\n            speed : null,\n            timestamp : null\n        };\n\n        this._watchID;\n    }\n\n    /**\n    * Activates the component\n    * @method on\n    */\n    on()\n    {\n        if(this._GPSAvailable)\n        {\n            super.on();\n\n            let positionOptions = {\n                enableHighAccuracy: this._enableHighAccuracy,\n                timeout: this._timeout,\n                maximumAge: this._maximumAge\n            };\n\n            this._watchID = navigator.geolocation.watchPosition(\n                event => this.updateLocationCallBack(event),\n                event => this.updateLocationErrorCallBack(event),\n                positionOptions\n            );\n        }\n        else\n        {\n            debug.info(\"this device has no GPS!\");\n        }\n    }\n\n    /**\n    * Deactivate the component\n    * @method off\n    */\n    off()\n    {\n        super.off();\n\n        navigator.geolocation.clearWatch(this._watchID);\n    }\n\n    /**\n    * Enable HighAccuracy. Requieres to set the component off once then to set it on again to use the new value.\n    * @method setHighAccuracy\n    * @param {Boolean} val Enable or not high accuracy\n    */\n    setEnableHighAccuracy(val)\n    {\n        this._enableHighAccuracy = val;\n    }\n\n    /**\n    * Set the time out for location update. Requieres to set the component off once then to set it again on to use the new value.\n    * @method setTimeout\n    * @param {Number} val the new value\n    */\n    setTimeout(val)\n    {\n        this._timeout = val;\n    }\n\n    /**\n    * Set the maximum age of a location data. Requieres to set the component off once then to set it on again to use the new value.\n    * @method setMaximumAge\n    * @param {Number} val the new value\n    */\n    setMaximumAge(val)\n    {\n        this._maximumAge = val;\n    }\n\n    /**\n      * returns the most recent location data. Location service MUST be activated on the device, or errors will get out from the callbacks!\n      * The return objects contains the standard HTML5 properties for geolocation :\n      * \n      *     location.longitude\n      *     location.latitude\n      *     location.altitude\n      *     location.accuracy\n      *     location.altitudeAccuracy\n      *     location.heading\n      *     location.speed\n      *     location.timestamp\n      * \n      * @method getLocation\n      * @return {Object} the location object updated with the most recent data.\n      */\n    getLocation()\n    {\n        if(this._active){\n            return this._location;\n        }else{\n            debug.warn(\"geolocation is off, turn it on with context.input.setGeolocationStatus(true);\");\n        }\n    }\n\n    /**\n     * Listener for the update of the location object with the most recent data.\n     * \n     * @method updateLocationCallBack\n     * @param {Object} position the HTML5 position object to use for the Mobilizing location object's update\n     * @private\n    */\n    updateLocationCallBack(position)\n    {\n        //debug.log(position);\n        this._location.longitude = position.coords.longitude;\n        this._location.latitude = position.coords.latitude;\n        this._location.altitude = position.coords.altitude;\n        this._location.accuracy = position.coords.accuracy;\n        this._location.altitudeAccuracy = position.coords.altitudeAccuracy;\n        this._location.heading = position.coords.heading;\n        this._location.speed = position.coords.speed;\n        this._location.timestamp = position.timestamp;\n        this._location.error = \"no error\";\n\n        this.events.trigger(EVT_LOC_UPDATED, this._location);\n    }\n\n    /**\n     * Listener for the update errors of the location object with the most recent data.\n     * \n     * @method updateLocationErrorCallBack\n     * @param error \n     * @private\n    */\n    updateLocationErrorCallBack(error)\n    {\n        if(error.code === 1){\n            console.error(\"location permission denied\");\n            this._location.error = \"location permission denied\";\n\n        }else if(error.code === 2){\n            console.error(\"location unavailable\");\n            this._location.error = \"location unavailable\";\n\n        }else if(error.code === 3){\n            console.error(\"location timeout\");\n            this._location.error = \"location timeout\";\n        }\n\n        this.events.trigger(EVT_LOC_ERROR, this._location.error);\n    }\n\n    /**\n     * reset the location object to avoid bugs\n     * @private\n     * @deprecated\n     * @method resetLocation\n     */\n    resetLocation()\n    {\n        this._location = {\n            latitude : null,\n            longitude : null,\n            altitude : null,\n            accuracy: null,\n            altitudeAccuracy : null,\n            heading : null,\n            speed : null,\n            timestamp : null\n        };\n    }\n};\n\nvar _STATICS = {};\n_STATICS.zoom = 1;\n_STATICS.worldSize = 512 * (Math.pow(2, _STATICS.zoom));\n\n/**\n* Some GPS coordinates convertion tools to use maps in Mobilizing.js\n* @class GPSUtils\n* @constructor\n* @static\n*/\nclass GPSUtils\n{\n\n    /**\n    * Converts longitude and latitude coords (from an OpenStreetMap map) into absolute pixels coords. This method don't calculate the pixels coords within a given map bound's! Use getCoordinateInMap for this.\n    * @static\n    * @method getPixelsCoordsFromOSMLngLat\n    * @param {Number} longitute longitute\n    * @param {Number} latitude latitude\n    * @param {Number} zoom the zoom factor fo this map\n    */\n    static getPixelsCoordsFromOSMLngLat(longitute, latitude, zoom)\n    {\n        if(zoom)\n        {\n            _STATICS.zoom = zoom;\n            _STATICS.worldSize = 512 * (Math.pow(2, _STATICS.zoom));\n        }\n\n        return {x: GPSUtils.lngX(longitute), y: GPSUtils.latY(latitude)};\n    }\n\n    /**\n    * Compute GPS coordinates into pixels x, y coordinates in a map. Here, we adopt the OSM standard for mappinp. Therefore, you should generate your bitmap earth map with a tool using OSM tiles (like MapBox, TileMill). You should give the zoom factor and the map bounds (in lognititude and latitude) to this method for the calculation to be effective\n    * @static\n    * @method getCoordinateInMap\n    * @param {Number} longitute\n    * @param {Number} latitude\n    * @param {Number} zoom zoom factor fo this map\n    * @param {Array} mapCoord MapBox/TileMill map coords array, like [-180,-85.0511,180,85.0511]\n    * @param {Number} mapWidth the map width in pixels\n    * @param {Number} mapHeight the map height in pixels\n    */\n    static getCoordinateInMap(longitute, latitude, mapCoord, mapWidth, mapHeight, zoom)\n    {\n        if(zoom)\n        {\n            _STATICS.zoom = zoom;\n        }\n        //construct local variable to simplify expressions writing\n        let leftLong = mapCoord[0];\n        let bottomLat = mapCoord[1];\n\n        let rightLong = mapCoord[2];\n        let topLat = mapCoord[3];\n\n        //construct the corners pixel coordinates\n        let topRight = GPSUtils.getPixelsCoordsFromOSMLngLat(rightLong, topLat);\n        let topLeft = GPSUtils.getPixelsCoordsFromOSMLngLat(leftLong, topLat);\n\n        let bottomRight = GPSUtils.getPixelsCoordsFromOSMLngLat(rightLong, bottomLat);\n        let bottomLeft = GPSUtils.getPixelsCoordsFromOSMLngLat(leftLong, bottomLat);\n\n        let absCoord = GPSUtils.getPixelsCoordsFromOSMLngLat(longitute, latitude);\n\n        let coords = {x: _Math.map(absCoord.x, topRight.x, topLeft.x, mapWidth/2, -mapHeight/2),\n                      y: _Math.map(absCoord.y, topRight.y, bottomRight.y, mapWidth/2, -mapHeight/2)};\n\n        return coords;\n    }\n\n    /**\n     * latitude to absolute x coord\n     * @static\n     * @method lngX\n     * @param {Number} lon\n     * @returns {Number} pixel coordinate\n     */\n    static lngX(lng) {\n        return (180 + lng) * _STATICS.worldSize / 360;\n    }\n    /**\n     * latitude to absolute y coord\n     * @static\n     * @method latY\n     * @param {Number} lat\n     * @returns {Number} pixel coordinate\n     */\n    static latY(lat) {\n        const y = 180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360));\n        return (180 - y) * _STATICS.worldSize / 360;\n    }\n\n    static xLng(x) {\n        return x * 360 / _STATICS.worldSize - 180;\n    }\n    static yLat(y) {\n        const y2 = 180 - y * 360 / _STATICS.worldSize;\n        return 360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90;\n    }\n\n    /**\n    * Convert GPS coords to cartesian coords. NB : this algorithm is adapted to three.js geoms!\n    * @static\n    * @property getPolarFromLngLat\n    * @param {Numbe} longitude\n    * @param {Numbe} latitude\n    * @param {Numbe} radius\n    * @return {Object} {x, y, z} coordinates\n    */\n    static getPolarFromLngLat(longitude, latitude, radius)\n    {\n        let lng = _Math.degToRad(longitude + 180);\n        let lat = _Math.degToRad(90 - latitude);\n\n        let x = -(radius * Math.cos(lng) * Math.sin(lat));\n        let y = radius * Math.cos(lat);\n        let z = radius * Math.sin(lat) * Math.sin(lng);\n\n        return {x: x, y: y, z: z};\n    }\n\n}\n\n// module exports\nexport { GPS, GPSUtils };","import {Vector3} from '../core/Vector3';\n\n/*\n * MeshFX provides a set of static methods to work on 3D models verticies and to apply various effects on it.\n *\n * @class MeshFX\n */\nclass MeshFX\n{\n\n    /*\n    * Noise the vertices of the Mesh\n    * @static\n    * @method Noise\n    * @param {Mesh} mesh\n    * @param {Vector3} amount\n    */\n    static Noise(mesh, amount)\n    {\n        var vertices = mesh.getVertices();\n        for (var i =0;i<vertices.length;++i)\n        {\n            var noise = new Vector3(Math.random()-0.5, Math.random()-0.5, Math.random()-0.5);\n            vertices[i] = new Vector3(vertices[i].x+noise.x*amount, vertices[i].y+noise.y*amount, vertices[i].z+noise.z*amount);\n\n        }\n        mesh.setVertices(vertices);\n    }\n\n\n    static Nothing(mesh, amount)\n    {\n        var vertices = mesh.getVertices();\n        for (var i =0;i<vertices.length;++i)\n        {\n            var noise = new Vector3(Math.random()-0.5, Math.random()-0.5, Math.random()-0.5);\n            vertices[i] = new Vector3(vertices[i].x, vertices[i].y, vertices[i].z);\n\n        }\n        mesh.setVertices(vertices);\n    }\n\n    /*\n    * Offsets the vertices of the Mesh\n    * @static\n    * @method Offset\n    * @param {Mesh} mesh\n    * @param {Vector3} offset\n    */\n    static Offset(mesh, offset)\n    {\n        var vertices = mesh.getVertices();\n        for (var i =0;i<vertices.length;++i)\n        {\n            vertices[i] = new Vector3(vertices[i].x+offset.x, vertices[i].y+offset.y, vertices[i].z+offset.z);\n\n        }\n        mesh.setVertices(vertices);\n    }\n\n    /*\n    * Scales the vertices of the Mesh\n    * @static\n    * @method Scale\n    * @param {Mesh} mesh\n    * @param {Vector3} scale\n    */\n    static Scale(mesh, scale)\n    {\n        var vertices = mesh.getVertices();\n        for (var i =0;i<vertices.length;++i)\n        {\n            vertices[i] = new Vector3(vertices[i].x*scale.x, vertices[i].y*scale.y, vertices[i].z*scale.z);\n\n        }\n        mesh.setVertices(vertices);\n    }\n\n}\n\n// module exports\nexport { MeshFX };","import {debug} from './Debug';\nimport {Component} from '../Component';\n\nclass Midi extends Component\n{\n    /**\n     Gives access to the midi devices. This class requires the Web MIDI API to operate properly.\n\n     @class Midi\n     @constructor\n     @param {Object} params the parameters object\n     @param {String} params.in The Midi IN interface name we want to open.\n     @param {String} params.out The Midi OUT interface name we want to open.\n     @param {Function} params.onMidiIn The Midi IN callback we want to be called on a midi in event.\n     \n     @requires Web Midi API\n     */\n    constructor(params)\n    {\n        super(params);\n        this.midioutname    = params.out;\n        this.midiinname     = params.in;\n        //callbacks\n        this.onMidiIn       = params.onMidiIn;\n        debug.log(\"params.onMidiIn=\"+params.onMidiIn);\n        debug.log(\"this.onMidiIn=\"+this.onMidiIn);\n        if (navigator.requestMIDIAccess)\n        {\n            navigator.requestMIDIAccess().then( this.onMIDIInit.bind(this), this.onMIDIReject.bind(this) );\n        }\n        else\n        {\n            console.warn(\"No MIDI support present in your browser. Try in another browser.\");\n        }\n    }\n    \n    /**\n     Web MIDI API success callback.\n     @method onMIDIInit\n     @private\n     @param {Object} midi\n     */\n    onMIDIInit(midi)\n    {\n        this.midiAccess = midi;\n        this.hookUpMIDI();\n        this.midiAccess.onstatechange = this.hookUpMIDI;\n    }\n\n    /**\n     Web MIDI API failure callback.\n     @method onMIDIReject\n     @private\n     @param {Object} err\n     */\n    onMIDIReject(err)\n    {\n        alert(\"The MIDI system failed to start.  You're gonna have a bad time.\");\n    }\n\n    /**\n    * hookUpMIDI\n    * @method hookUpMIDI\n    * @private\n    */\n    hookUpMIDI()\n    {\n        if (this.midiinname !== undefined)\n        {\n            var inputs = this.midiAccess.inputs.values();\n            debug.log(\"MIDI inputs on your system : \");\n            for ( var input = inputs.next(); input && !input.done; input = inputs.next())\n            {\n                debug.log(\"input=\", input);\n                var midiname = input.value.name;\n                if (midiname === this.midiinname)\n                {\n                    debug.log(\"found midi interface IN : \" + midiname);\n                    input.value.onmidimessage = this.onMIDIMessage.bind(this);\n                }\n            }\n        }\n        if (this.midioutname !== undefined)\n        {\n            var outputs = this.midiAccess.outputs.values();\n            debug.log(\"MIDI outputs on your system : \");\n            for ( var output = outputs.next(); output && !output.done; output = outputs.next())\n            {\n                debug.log(\"output=\", output);\n                var midiname = output.value.name;\n            \n            \n                if (midiname === this.midioutname)\n                {\n                    debug.log(\"found midi interface OUT : \" + midiname);\n                    this.midioutput = output.value;\n                }\n            }\n        }\n    }\n    \n    /**\n    * onMIDIMessage\n    * @method onMIDIMessage\n    * @param {Object} event MIDI event\n    * @private\n    */\n    onMIDIMessage(event)\n    {\n        debug.log(\"this.onMidiIn=\" + this.onMidiIn);\n        if (this.onMidiIn !== undefined)\n        {\n            //channel message data1 data2\n            let message = event.data[0] & 0xf0;\n            let channel = event.data[0] - message;\n            let data1 = event.data[1];\n            let data2 = event.data[2];\n            this.onMidiIn(channel, message, data1, data2);\n        }\n    }\n\n    /**\n     Sends a Control Change MIDI message.\n     @method ControlChange\n     @param {Number} channel MIDI channel [0-15]\n     @param {Number} cc ControlChange number [0-127]\n     @param {Number} val ControlChange value [0-127]\n     @example\n         midi.ControlChange(2,11,50);\n     */\n    ControlChange(channel, cc, val)\n    {\n        if (this.midioutput === undefined)\n            return;\n        var ccMessage;\n        var m = 0xB0+channel;\n        ccMessage = [m, cc, val];\n        this.midioutput.send(ccMessage);\n    }\n\n    /**\n     Sends a NoteOn MIDI message.\n     @method NoteOn\n     @param {Number} channel MIDI channel [0-15]\n     @param {Number} note Midi Note number [0-127]\n     @param {Number} vel note MIDI velocity [0-127]\n     @example\n         midi.NoteOn(0,60,127);\n     */\n    NoteOn(channel, note, vel)\n    {\n        if (this.midioutput === undefined)\n            return;\n        var ccMessage;\n        var m = 0x90+channel;\n        ccMessage = [m, note, vel];\n        this.midioutput.send(ccMessage);\n    }\n\n    /**\n     Sends a NoteOff MIDI message.\n     @method NoteOff\n     @param {Number} channel MIDI channel [0-15]\n     @param {Number} note Midi Note number [0-127]\n     @param {Number} vel note MIDI velocity [0-127]\n     @example\n         midi.NoteOff(0,60,0);\n     */\n    NoteOff(channel, note, vel)\n    {\n        if (this.midioutput === undefined)\n            return;\n        var ccMessage;\n        var m = 0x80+channel;\n        ccMessage = [m, note, vel];\n        this.midioutput.send(ccMessage);\n    }\n\n}\n/**\n* Note On\n*/\nMidi.NoteOn = 144;\n/**\n * Note Off\n */\nMidi.NoteOff = 128;\n/**\n * After touch\n */\nMidi.Aftertouch = 160;\n/**\n * Control change\n */\nMidi.ControlChange = 176;\n/**\n * Program change\n */\nMidi.ProgramChange = 192;\n\n\n// module exports\nexport { Midi };\n","import {debug} from './Debug';\nimport {Component} from '../Component';\n\n/*\n * Profiler class should not be used by users\n *\n * @class Profiler\n * @private\n */\n\nclass Profiler extends Component\n{\n\n    /**\n     * Profiler is a Profiler component.\n     * \n     *\n     * @example\n     *     //to do\n     *\n     * @class Profiler\n     * @constructor\n     * @extends Component\n     * @param {Object} params Config parameters\n    */\n    constructor(params){\n        super(params);\n        this.timers          = [];\n        this.current_frame   = 0;\n        this.last_time       = 0;\n        this.initialize();\n    }\n\n    initialize()\n    {\n        var t = this.getTime();\n        var dt = this.last_time - t;\n        this.last_time = t;\n    }\n\n\n    update()\n    {\n        var t = this.getTime();\n        var dt = t - this.last_time;\n        this.last_time = t;\n        var frame = this.timers[this.current_frame];\n        if (!frame)\n        {\n            frame = {};\n            this.timers[this.current_frame] = frame;\n        }\n        this.timers[this.current_frame].dt = dt;\n        this.current_frame++;\n\n        this.logTimers();\n    }\n\n\n    startTimer(id)\n    {\n        //var t = Profiler.getTime();\n        //Profiler.timers[Profiler.current_frame].\n    }\n\n\n    getTime()\n    {\n        //return Date.now().getTime();\n        return new Date().getTime();\n    }\n\n\n    logTimers()\n    {\n        var str = \"\";\n        for (var i in this.timers)\n        {\n            str += this.timers[i].dt + \" \";\n        }\n        console.log(\"Profiler timers : \" + str);\n    }\n}\n\n\n// module exports\nexport { Profiler };","import {EventEmitter} from '../helpers/EventEmitter';\nimport {getOrDefault} from '../helpers/Misc';\n\n// Events\n/**\n * Fired when the readystate of the request changes\n * @event readystatechange\n * @param {Ajax} ajax The Ajax instance\n */\nconst EVT_READYSTATE_CHANGE = 'readystatechange';\n\n/**\n * Fired when the request is opened\n * @event start\n * @param {Ajax} ajax The Ajax instance\n */\nconst EVT_START = 'start';\n\n/**\n * Fired when an operation is in progress\n * @event progress\n * @param {Ajax} ajax The Ajax instance\n */\nconst EVT_PROGRESS = 'progress';\n\n/**\n * Fired when the request has finished loading\n * @event load\n * @param {Ajax} ajax The Ajax instance\n * @param {Boolean} success Whether the request was successfull or not\n */\nconst EVT_LOAD = 'load';\n\n/**\n * Fired when the request has finished loading and the status is greater or equal to 200 and less than 300, or is equal to 304\n * @event success\n * @param {Ajax} ajax The Ajax instance\n */\nconst EVT_SUCCESS = 'success';\n\n/**\n * Fired when the request encountered an error, or if it finished loading with an error status \n * @event error\n * @param {Ajax} ajax The Ajax instance\n */\nconst EVT_ERROR = 'error';\n\n\nclass Ajax\n{\n    /**\n    * Ajax is a helper class used to simplify the use of the XMLHttpRequest API\n    *\n    * @example\n    *    //TODO\n    *\n    * @class Ajax\n    * @constructor\n    * @param {Object} params The parameters object\n    * @param {String} params.url The URL to which the request is sent\n    * @param {String} [params.method = \"GET\"] The method used for the request (GET, POST, or PUT)\n    * @param {Object} [params.data = null] Data to be send along with the request\n    * @param {Object} [params.headers = null] An object of header key/value pairs to send along with requests\n    * @param {Boolean} [params.async = true] Whether the request is asynchronous or not\n    * @param {Boolean} [params.autoSend = true] Whether the request should be automatically sent\n    * @param {Boolean} [params.withCredentials = null] Whether cross-site Access-Control requests should be made using credentials such as cookies or authorization headers\n    * @param {String} [params.responseType = \"\"] The responseType this request must return\n    * @param {Number} [params.timeout = null] The number of milliseconds the request can take before automatically being terminated\n    * @param {Function} [params.onReadyStateChange = null] A function to be called when the readyState of the request changes\n    * @param {Function} [params.onStart = null] A function to be called when the request starts\n    * @param {Function} [params.onProgress = null] A function to be called when the request progresses\n    * @param {Function} [params.onLoad = null] A function to be called when the request finishes\n    * @param {Function} [params.onSuccess = null] A function to be called if the request succeeds\n    * @param {Function} [params.onError = null] A function to be called if the request fails\n    */\n    constructor(params)\n    {\n        this.url = params.url;\n        this.method = getOrDefault(params, \"method\", \"GET\");\n        let data = getOrDefault(params, \"data\", null);\n        let headers = getOrDefault(params, \"headers\", null);\n        this.async = getOrDefault(params, \"async\", true);\n        let autoSend = getOrDefault(params, \"autoSend\", true);\n        let withCredentials = getOrDefault(params, \"withCredentials\", null);\n        let timeout = getOrDefault(params, \"timeout\", null);\n        let responseType = getOrDefault(params, \"responseType\", \"text\");\n        let onReadyStateChange = getOrDefault(params, \"onReadyStateChange\", null);\n        let onStart = getOrDefault(params, \"onStart\", null);\n        let onProgress = getOrDefault(params, \"onProgress\", null);\n        let onLoad = getOrDefault(params, \"onLoad\", null);\n        let onSuccess = getOrDefault(params, \"onSuccess\", null);\n        let onError = getOrDefault(params, \"onError\", null);\n        \n        this.events = new EventEmitter({\"scope\": this});\n        \n        this._xhr = new XMLHttpRequest();\n        \n        // bind custom callbacks to events\n        if(onReadyStateChange){\n            this.events.on(EVT_READYSTATE_CHANGE, onReadyStateChange);\n        }        \n        if(onStart){\n            this.events.on(EVT_START, onStart);\n        }        \n        if(onProgress){\n            this.events.on(EVT_PROGRESS, onProgress);\n        }        \n        if(onLoad){\n            this.events.on(EVT_LOAD, onLoad);\n        }        \n        if(onSuccess){\n            this.events.on(EVT_SUCCESS, onSuccess);\n        }        \n        if(onError){\n            this.events.on(EVT_ERROR, onError);\n        }\n        \n        this._xhr.addEventListener(\"readystatechange\", this.onReadyStateChange.bind(this));\n        \n        // if this is a GET request, the data needs to be treated as URL parameters\n        if(this.method === 'GET' && data){\n            let url_params = [];\n            \n            for(let key in data){\n                url_params.push(key +'='+ encodeURIComponent(data[key]));\n            }\n            \n            this.url += '?'+ url_params.join('&');\n            \n            data = null;\n        }\n        \n        this.setResponseType(responseType);\n\n        // set custom headers\n        if(headers !== null){\n            for(let key in headers){\n                this.setRequestHeader(key, headers[key]);\n            }\n        }\n        \n        if(withCredentials !== null){\n            this.setWithCredentials(withCredentials);\n        }\n        \n        if(timeout !== null){\n            this.setTimeout(timeout);\n        }\n        \n        if(autoSend){\n            this._xhr.open(this.method, this.url, this.async);\n            this.send(data);\n        }\n    }\n\n    /**\n    * A helper function to create a request of type GET\n    *\n    * @method get\n    * @static\n    * @param {Object} params The parameters to send to the constructor\n    */\n    static get(params)\n    {        \n        params.method = 'GET';\n        \n        return new Ajax(params);\n    }\n\n    /**\n    * A helper function to create a request of type POST\n    *\n    * @method post\n    * @static\n    * @param {Object} params The parameters to send to the constructor\n    */\n    static post(params)\n    {        \n        params.method = 'POST';\n        \n        return new Ajax(params);\n    }\n\n    /**\n    * A helper function to create a request of type PUT\n    *\n    * @method put\n    * @static\n    * @param {Object} params The parameters to send to the constructor\n    */\n    static put(params)\n    {        \n        params.method = 'PUT';\n        \n        return new Ajax(params);\n    }\n\n    /**\n    * The readystatechange event handler\n    *\n    * @method onReadyStateChange\n    * @private\n    */\n    onReadyStateChange()\n    {        \n        this.events.trigger(EVT_READYSTATE_CHANGE, this);\n        \n        switch(this.getReadyState()){\n            case XMLHttpRequest.OPENED:\n                this.events.trigger(EVT_START, this);\n                break;\n                \n            case XMLHttpRequest.LOADING:\n                this.events.trigger(EVT_PROGRESS, this);\n                break;\n                \n            case XMLHttpRequest.DONE:                \n                let status = this.getStatus();\n                let success = false;\n                \n                if(status === 200 && status < 300 || status === 304){\n                    success = true;\n                }\n                // local requests can return a status of 0 even if no error occurs\n                else if(status === 0 && !this._xhr.error){\n                    success = true;\n                }\n                \n                this.events.trigger(EVT_LOAD, this, success);\n                \n                if(success){\n                    this.events.trigger(EVT_SUCCESS, this);\n                }\n                else{\n                    this.events.trigger(EVT_ERROR, this);\n                }\n                \n                break;\n        }\n    }\n\n    /**\n    * Get the XMLHttpRequest instance for the request\n    * see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n    *\n    * @method getXHR\n    * @return {XMLHttpRequest} The XMLHttpRequest instance\n    */\n    getXHR()\n    {\n        return this._xhr;\n    }\n\n    /**\n    * Wrapping method for the setRequestHeader method of XMLHttpRequest\n    * see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n    *\n    * @method setRequestHeader\n    * @param {String} header The name of the header\n    * @param {String} value The value of the header\n    */\n    setRequestHeader(header, value)\n    {\n        this._xhr.setRequestHeader(header, value);\n    }\n\n    /**\n    * Wrapping method for the withCredentials property of XMLHttpRequest\n    * see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n    *\n    * @method setWithCredentials\n    * @param {Boolean} value Whether cross-site Access-Control requests should be made using credentials such as cookies or authorization headers\n    */\n    setWithCredentials(value)\n    {\n        this._xhr.withCredentials = value;\n    }\n\n    /**\n    * Wrapping method for the timeout property of XMLHttpRequest\n    * see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\n    *\n    * @method setTimeout\n    * @param {Number} value The number of milliseconds the request can take before automatically being terminated\n    */\n    setTimeout(value)\n    {\n        this._xhr.timeout = value;\n    }\n    \n    /**\n    * Wrapping method for the responseType property of XMLHttpRequest\n    * see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responsetype\n    *\n    * @method setResponseType\n    * @param {String} value The type of response to be given by this request. Possible values are : \"arraybuffer\", \"text\", \"json\", \"document\", \"blob\"\n    */\n    setResponseType(value)\n    {\n        this._xhr.responseType = value;\n    }\n\n    /**\n    * Wrapping method for the send method of XMLHttpRequest\n    * see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/send\n    *\n    * @method send\n    * @param {Mixed} data The data to send along the request\n    */\n    send(data)\n    {\n        this._xhr.open(this.method, this.url, this.async);\n        this._xhr.send(data);\n    }\n\n    /**\n    * Wrapping method for abort method of XMLHttpRequest\n    * see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/abort\n    *\n    * @method abort\n    */\n    abort()\n    {\n        this._xhr.abort();\n    }\n\n    /**\n    * Wrapping method for status property of XMLHttpRequest\n    * see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/status\n    *\n    * @method getStatus\n    * @return {Number} The status of the request\n    */\n    getStatus()\n    {\n        return this._xhr.status;\n    }\n\n    /**\n    * Wrapping method for statusText property of XMLHttpRequest\n    * see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/statusText\n    *\n    * @method getStatusText\n    * @return {DOMString} The status message of the request\n    */\n    getStatusText()\n    {\n        return this._xhr.statusText;\n    }\n\n    /**\n    * Wrapping method for readyState property of XMLHttpRequest\n    * see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState\n    *\n    * @method getReadyState\n    * @return {Number} The state the XMLHttpRequest client is in\n    */\n    getReadyState()\n    {\n        return this._xhr.readyState;\n    }\n\n    /**\n    * Wrapping method for responseType property of XMLHttpRequest\n    * see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType\n    *\n    * @method getResponseType\n    * @return {String} The response's type\n    */\n    getResponseType()\n    {\n        return this._xhr.responseType;\n    }\n\n    /**\n    * Wrapping method for response property of XMLHttpRequest\n    * see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/response\n    *\n    * @method getResponse\n    * @return {Mixed} The response's body\n    */\n    getResponse()\n    {\n        return this._xhr.response;\n    }\n\n    /**\n    * Wrapping method for responseText property of XMLHttpRequest\n    * see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseText\n    *\n    * @method getResponseText\n    * @return {String} The text response\n    */\n    getResponseText()\n    {\n        return this._xhr.responseText;\n    }\n\n    /**\n    * Return the XMLHttpRequest responseText as a JSON object\n    *\n    * @method getJSON\n    * @return {Object} The responseText parsed as a JSON object\n    */\n    getJSON()\n    {\n        return JSON.parse(this.getResponseText());\n    }\n}\n\n// module exports\nexport { Ajax };","import {Mesh} from '../shape/Mesh';\nimport {Material} from '../scene/Material';\nimport {Color} from '../core/Color';\nimport {Vector2} from '../core/Vector2';\nimport {Vector3} from '../core/Vector3';\nimport {debug} from '../helpers/Debug';\n\n/**\n * OBJ class gives easy access to some calculations specific to OBJs. It is used to load an external .obj model file.\n *\n * @class OBJ\n */\n\nclass OBJ\n{\n    /**\n     * Load an OBJ and dependencies from a URL\n     * @method load\n     * @static\n     * @param {Loader} loader\n     * @param {Object} params The parameters object\n     * @param {Function} [params.onStart = null] A function to be called when the loading starts\n     */\n    static load(loader, params)\n    {\n        OBJ.callBack = params.onLoad;\n        return loader.loadText({\n            url:params.url,\n            onLoad:OBJ.parseOBJ.bind(null,loader)\n        });\n    }\n\n    /**\n     * Attach a texture to the given model\n     * @method attachTexture\n     * @static\n     * @param {Loader} loader\n     * @param {Object} model The model to attach a texture to\n     * @param {Texture} texture The Texture object to attach\n     */\n    static attachTexture(loader, model, texture)\n    {\n        debug.log(\"attachTexture \", loader, model, texture);\n        model.material.setTexture(texture);\n    }\n    \n    /**\n     * parse the MTL file associated to the obj file\n     * @method parseMTL\n     * @static\n     * @param {Loader} loader\n     * @param {Object} model The model to attach a texture to\n     * @param {Object} data The data to parse\n     */\n    static parseMTL(loader, model, data)\n    {\n        debug.log(\"model=\" + model);\n        //OBJ.mtl = data;\n        debug.log(\"mtl content =\", data);\n        let lines = data.toString().split(\"\\n\");\n        //debug.log(\"MTL lines = \" + lines);\n        lines.forEach(line => {\n            let words = line.split(\" \");\n            //debug.log(\"WORDS:\"+words);\n            switch(words[0])\n            {\n                    //comment, we just ignore\n                case \"#\":\n                    break;\n                    //new material declared\n                case \"newmtl\":\n                    debug.log(\"new material : \" + words[1]);\n                    break;\n                    //ambient term\n                case \"Ka\":\n                    model.material.setEmissiveColor(new Mobilizing.Color(words[1],words[2],words[3]));\n                    break;\n                case \"Kd\": //diffuse\n                    model.material.setColor(new Mobilizing.Color(words[1],words[2],words[3]));\n                    break;\n\n                case \"Ks\": //specular\n                    model.material.setSpecularColor(new Mobilizing.Color(words[1],words[2],words[3]));\n                    model.material._material.shininess = 20;\n                    break;\n\n                case \"Ns\": //specular exponent\n\n                    break;\n\n                case \"d\": //dissolved == opacity\n\n                    break;\n\n                case \"Tr\": //Transparent\n                    //d = 1-Tr;\n                    break;\n\n                case \"illum\": //illumination model\n\n                    break;\n\n                case \"map_Kd\": //Map diffuse\n                    //load texture\n                    //debug.log(\"load texture : \" + words[1]);\n                    let texture = loader.loadTexture({url:words[1], onLoad:OBJ.attachTexture.bind(null,loader, model)});\n                    model.updateMaterial();\n\n                    break;\n                default:\n                    debug.log(\"unknown MTL line : \" , words);\n                    break;\n            }\n        });\n        //model.material.setColor(Mobilizing.Color.green);\n    }\n    \n    /**\n     * parse the OBJ file\n     * @method parseOBJ\n     * @static\n     * @param {Loader} loader\n     * @param {Object} data The data to parse\n     */\n    static parseOBJ(loader, data)\n    {\n        debug.log(\"onLoaded data=\", data);\n        debug.log(\"loader=\", loader);\n        //debug.log(\"onLoaded result=\", this.result);\n        //this.text = data.getResponseText();\n        OBJ.text = data;\n        debug.log(\"text=\", OBJ.text);\n        //this.text = this.result._value; //FIXME\n\n        let p;\n        if (OBJ.mesh !== undefined)\n        {\n            p = OBJ.mesh;\n        }\n        else\n        {\n            debug.log(\"create material\");\n            p = new Mesh({});\n            p.clear();//empty the current mesh to have clean buffers\n\n            p.material = new Material({type:\"phong\"});\n            debug.log(\"Material created : \" , p.material);\n        }\n\n        debug.log(\"parsing obj file...\");\n        \n        //OBJ parsing =====================================\n        let lines = OBJ.text.toString().split(\"\\n\");\n        let uvs = [];\n        let normals = [];\n\n        lines.forEach(line => {\n            let words = line.split(\" \");\n\n            //debug.log(\"LINE \" + line);\n            switch(words[0])\n            {\n                case \"mtllib\": //chargement de la lib\n                    debug.log(\"mtllib \" + words[1]);\n                    OBJ.resultmtl = loader.loadText({\n                        url:words[1],\n                        onLoad:OBJ.parseMTL.bind(null,loader, p)\n                    });\n                    break;\n\n                case \"usemtl\":\n                    debug.log(\"usemtl \" + words[1]);\n                    //to do : load mtl file\n\n                    break;\n\n                case \"o\":\n                    debug.log(\"OBJ o \" + words[1]);\n                    break;\n\n                case \"g\":\n                    debug.log(\"OBJ g \" + words[1]);\n                    break;\n\n                case \"v\":\n                    //debug.log(\"Vertice\")\n                    let v = new Vector3(words[1], words[2], words[3]);\n                    p.pushVertex(v);\n                    break;\n\n                case \"vt\":\n                    debug.log(\"uv \" + words[1] + \" \" + words[2]);\n                    let vUV = new Vector2(words[1], words[2]);\n                    uvs.push(vUV);\n                    break;\n\n                case \"vn\":\n                    let vN = new Vector3(words[1], words[2], words[3]);\n                    normals.push(vN);\n                    //debug.log(\"normal\")\n                    break;\n\n                case \"s\":\n                    //debug.log(\"Face\")\n                    break;\n\n                case \"f\": //FACE definition\n                    //debug.log(uvs);\n                    //debug.log(\"Face\")\n                    let index1 = words[1].split(\"/\");\n                    let index2 = words[2].split(\"/\");\n                    let index3 = words[3].split(\"/\");\n                    let f = p.pushFace(index1[0]-1, index2[0]-1, index3[0]-1);\n                    p.pushUV(uvs[index1[1]-1], uvs[index2[1]-1], uvs[index3[1]-1]);\n                    //debug.log(index1, index2, index3);\n                    //p.pushNormal(normals[index1[2]-1], normals[index2[2]-1], normals[index3[2]-1]); //NEW\n                    //f.normal = new Vector3(normals[index1[2]-1], normals[index2[2]-1], normals[index3[2]-1]);\n\n                    if (words.length > 4)\n                    {\n                        //we have quads, we need to add an additionnal triangle\n                        let index4 = words[4].split(\"/\");\n                        p.pushFace(index1[0]-1, index3[0]-1, index4[0]-1);\n                        p.pushUV(uvs[index1[1]-1], uvs[index3[1]-1], uvs[index4[1]-1]);\n                    }\n                    break;\n\n                case \"#\":\n                    //debug.log(\"Comment\")\n                    break;\n            }\n        });\n\n        p.updateMesh();\n        p.computeNormals();\n        //p.updateMaterial();\n        debug.log(\"callback called : \", p);\n        OBJ.callBack(p);\n        //p.material.setTexture(OBJ.texture);\n    }\n}\n\n// module exports\nexport { OBJ };\n","import {EventEmitter} from './EventEmitter';\nimport {debug} from './Debug';\nimport {Ajax} from '../net/Ajax';\nimport {Texture} from '../texture/Texture';\nimport {OBJ} from '../helpers/OBJ';\nimport {getOrDefault, singletonize} from '../helpers/Misc';\n\n/**\n * Fired by a LoadRequest when it has started loading\n * @event start\n */\nconst EVT_REQUEST_START = 'start';\n\n/**\n * Fired by a LoadRequest when it has successfully finished loading\n * @event load\n * @param {Mixed} value The loaded and processed value\n */\nconst EVT_REQUEST_LOAD = 'load';\n\n/**\n * Fired by a LoadRequest when it has failed loading\n * @event error\n * @param {String} error The error\n */\nconst EVT_REQUEST_ERROR = 'error';\n\n/**\n * Fired when one of the Loader's requests has finished loading\n * @event load\n * @param {LoadRequest} request The LoadRequest\n */\nconst EVT_LOAD = 'load';\n\n/**\n * Fired when one of the Loader's requests has failed loading\n * @event error\n * @param {LoadRequest} request The LoadRequest\n */\nconst EVT_ERROR = 'error';\n\n/**\n * Fired when all the Loader's request have finished loading (whether successfully or not)\n * @event complete\n * @param {Array} requests The list of consumed requests\n */\nconst EVT_COMPLETE = 'complete';\n\n/**\n * A status indicating that the loader has not yet started consuming requests\n * @property pending\n * @static\n * @final\n * @private\n */\nconst STATUS_PENDING = 'pending';\n\n/**\n * A status indicating that the loader has started consuming requests\n * @property loading\n * @static\n * @final\n * @private\n */\nconst STATUS_LOADING = 'loading';\n\n/**\n * A status indicating that the loader has finished consuming all requests\n * @property complete\n * @static\n * @final\n * @private\n */\nconst STATUS_COMPLETE = 'complete';\n\n/**\n * LoadRequest object encapsulates a request of a loader\n * \n * @class LoadRequest\n * @constructor\n * @param {Object} params The parameters object\n * @param {Function} params.consume A function to be called (with this request as an argument) to consume the request\n * @param {Function} [params.onStart = null] A function to be called when the loading starts\n * @param {Function} [params.onLoad = null] A function to be called when the loading finishes\n * @param {Function} [params.onError = null] A function to be called when the loading fails\n*/\nclass LoadRequest{\n\n    constructor(params){\n\n        this._consumeCallback = params.consume;\n        this._value = undefined;\n        this._error = undefined;\n\n        this.events = new EventEmitter({\"scope\": this});\n\n        let onStart = getOrDefault(params, \"onStart\", null);\n        let onLoad = getOrDefault(params, \"onLoad\", null);\n        let onError = getOrDefault(params, \"onError\", null);\n\n        if(onStart){\n            this.events.on(EVT_REQUEST_START, onStart);\n        }  \n        if(onLoad){\n            this.events.on(EVT_REQUEST_LOAD, onLoad);\n        }\n        if(onError){\n            this.events.on(EVT_REQUEST_ERROR, onError);\n        }\n    }\n\n    /**\n    * Launch the associated Ajax request\n    * @method consume\n    */\n    consume(){\n        this._consumeCallback(this);\n    }\n\n    /**\n    * Set the value of this LoadRequest. Will be filled after loading completion\n    * @method setValue\n    * @param {Object} value\n    */\n    setValue(value){\n        this._value = value;\n    }\n\n    /**\n    * Get the value of this LoadRequest\n    * @method getValue\n    * @return {Mixed} value\n    */\n    getValue(){\n        return this._value;\n    }\n\n    /**\n    * Set the error that occured if any\n    * @method setError\n    * @param {Mixed} error\n    */\n    setError(error){\n        this._error = error;\n    }\n\n    /**\n    * Get the error that occured if any\n    * @method getError\n    * @return {Mixed} error\n    */\n    getError(){\n        return this._error;\n    }\n}\n\nclass Loader{\n    /**\n    * A loader class that manage the loading of datas from url. This is mainly used internally to manage the preLoad method in users script. Users should usually use this class methods to load datas and obtain the result encapsulated in a LoadRequest object.\n    * \n    * @class Loader\n    * @constructor\n    * @param {Object} params Config parameters\n    * @param {Function} params.onLoad\n    * @param {Function} params.onError\n    * @param {Function} params.onComplete\n    * \n    * @example\n    *     this.preLoad = function(loader){\n    *     \n    *       logoFile = loader.loadImage({url:\"logo_mobilizing.png\",\n    *                                    onStart: function(){console.log(\"Started loading of logo\");},\n    *                                    onLoad: function(data){console.log(\"Hell Yeah! Got\", data);}\n    *                                   });\n    *     }\n    *\n    *     this.setup = function(){\n    *\n    *       console.log(\"logoFile\", logoFile);\n    *       //will print the LoadRequest object. Access the loaded data with logoFile.getValue()\n    *     }\n    */\n    constructor(params){\n\n        let onLoad = getOrDefault(params, \"onLoad\", null);\n        let onError = getOrDefault(params, \"onError\", null);\n        let onComplete = getOrDefault(params, \"onComplete\", null);\n\n        this._status = STATUS_PENDING;\n        this._requests = [];\n        this._complete = 0;\n\n        this.events = new EventEmitter({\"scope\": this});\n\n        if(onLoad){\n            this.events.on(EVT_LOAD, onLoad);\n        }  \n        if(onError){\n            this.events.on(EVT_ERROR, onError);\n        }\n        if(onComplete){\n            this.events.on(EVT_COMPLETE, onComplete);\n        }\n    }\n\n    /**\n    * Consume (executes) all the requests\n    * @method consumeAll\n    */\n    consumeAll(){\n\n        if(this._requests.length > 0)\n        {\n            this._status = STATUS_LOADING;\n\n            for (let request of this._requests)\n            {\n                request.consume();\n            }\n        }\n        else\n        {\n            this.doComplete();\n        }\n    }\n\n    /**\n    * Helper method to update the status and trigger the complete event\n    * @method doComplete\n    * @private\n    */\n    doComplete(){\n        this._status = STATUS_COMPLETE;\n        this.events.trigger(EVT_COMPLETE, this._requests);\n    }\n\n    /**\n    * Loads data from a URL. This static method must be provided a callback method.\n    * @static\n    * @method load\n    * @param {String} url the URL to load data from\n    * @param {Function} callback callback function that the user wants to call on load completion\n    * @param {Mixed} callback.result The load result if successful\n    * @param {String} callback.error The load error if unsuccessful\n    * @param {String} [responseType] The type of the respons to return from the Ajax call\n    * @param {Function} [processData] function definning what to do with the data coming from the promise\n    */\n    static load(url, callback, responseType, processData){\n\n        //check if the url is aleady in cache for loading\n        if(Loader.Cache.isLoading(url))\n        {\n            if(callback)\n            {\n                Loader.Cache.addCallback(url, callback);\n                //console.log(\"adding\", callback);\n                return;\n            }\n        }\n        //check if the file is already cached (loaded)\n        if(Loader.Cache.isCached(url))\n        {\n            debug.info(\"ressource \"+url+\" is cached and won't be loaded again\");\n            return Loader.Cache.get(url);\n        }\n        else\n        {\n            //add this url to the file to cache\n            Loader.Cache.addKey(url);\n        }\n\n        let ajax = new Ajax({\n            \"url\": url,\n            \"responseType\": responseType,\n            \"autoSend\": false\n        });\n\n        if(processData === undefined){\n            processData = (ajax) => {\n                return ajax.getResponse();\n            };\n        }\n\n        ajax.events.on(\"success\", (ajax) => {\n            let result = processData(ajax);\n            callback( result );\n            //this is the loading response whithout further process,\n            //add it to the cache and pass the response to all other registred callback\n            Loader.Cache.addValue(url, result);\n        });\n\n        ajax.events.on(\"error\", (ajax) => {\n            callback( undefined, ajax.getStatusText() );\n        });\n\n        ajax.send();\n    }\n\n    /**\n    * Loads a text from a URL. This static method must be provided a callback method.\n    * @method loadText\n    * @static \n    * @param {String} url the URL to load data from\n    * @param {Function} callback callback function that the user wants to call on load completion\n    * @param {Mixed} callback.result The load result if successful\n    * @param {String} callback.error The load error if unsuccessful\n    */\n    static loadText(url, callback)\n    {\n        Loader.load(url, callback, \"text\");\n    }\n\n    /**\n    * Loads a JavaScript object, parsed from a JSON string from a URL. This static method must be provided a callback method.\n    * @method loadJSON\n    * @static \n    * @param {String} url the URL to load data from\n    * @param {Function} callback callback function that the user wants to call on load completion\n    * @param {Mixed} callback.result The load result if successful\n    * @param {String} callback.error The load error if unsuccessful\n    */\n    static loadJSON(url, callback)\n    {\n        Loader.load(url, callback, \"json\");\n    }\n\n    /**\n    * Loads an arraybuffer from a URL. This static method must be provided a callback method.\n    * @method loadArrayBuffer\n    * @static \n    * @param {String} url the URL to load data from\n    * @param {Function} callback callback function that the user wants to call on load completion\n    * @param {Mixed} callback.result The load result if successful\n    * @param {String} callback.error The load error if unsuccessful\n    */\n    static loadArrayBuffer(url, callback)\n    {\n        Loader.load(url, callback, \"arraybuffer\");\n    }\n\n    /**\n    * Loads a blob from a URL. This static method must be provided a callback method.\n    * @method loadBlob\n    * @static \n    * @param {String} url the URL to load data from\n    * @param {Function} callback callback function that the user wants to call on load completion\n    */\n    static loadBlob(url, callback)\n    {\n        Loader.load(url, callback, \"blob\");\n    }\n\n    /**\n    * Loads an image from a URL. This static method must be provided a callback method.\n    * @static\n    * @method loadImage\n    * @param {String} url the URL to load data from\n    * @param {Function} callback callback function that the user wants to call on load completion\n    * @param {Mixed} callback.result The load result if successful\n    * @param {String} callback.error The load error if unsuccessful\n    */\n    static loadImage(url, callback)\n    {\n        let img = new Image();\n\n        img.addEventListener(\"load\", () => {\n            callback(img);\n        }, false);\n\n        img.addEventListener(\"error\", () => {\n            callback(undefined, \"Error loading the image \"+ url);\n        }, false);\n\n        img.src = url;\n    }\n\n    /**\n    * Loads a script from a URL. This static method must be provided a callback method.\n    * @method loadScript\n    * @static \n    * @param {String} url the URL to load data from\n    * @param {Function} callback callback function that the user wants to call on load completion\n    */\n    static loadScript(url, callback)\n    {\n        let script = document.createElement(\"script\");\n        document.head.appendChild(script);\n        script.addEventListener(\"load\", function(){ callback() });\n        script.src = url;\n    }\n    \n    /*static loadOBJ(params, callback)\n    {\n        return OBJ.load(this, params);\n    }*/\n\n    /**\n    * Load a data from the URL given in parameters. ResponseType is the default one of an Ajax object, that is String.\n    * @method load\n    * @param {Object} params The parameters object\n    * @param {String} params.url the URL to load data from\n    * @param {Function} [params.onStart = null] A function to be called when the loading starts\n    * @param {Function} [params.onLoad = null] A function to be called when the loading finishes\n    * @param {Function} [params.onError = null] A function to be called when the loading fails\n    * @param {String} [params.responseType] The type of the respons to return from the Ajax call\n    * @param {Function} params.processData function definning what to do with the data coming from the promise\n    * @return {LoadRequest} the LoadRequest object is incomplete at call and will be filled by the inner promise manager, when fulfilled.\n    */\n    load(params)\n    {\n        let url = params.url;\n        let onStart = getOrDefault(params, \"onStart\", null);\n        let onLoad = getOrDefault(params, \"onLoad\", null);\n        let onError = getOrDefault(params, \"onError\", null);\n        let responseType = getOrDefault(params, \"responseType\", \"\");\n        let processData = getOrDefault(params, \"processData\", (ajax) => {return ajax.getResponse();});\n\n        let ajax = new Ajax({\"url\": url, \"responseType\": responseType, \"autoSend\": false});\n\n        let request = new LoadRequest({\n            \"consume\": (request) => {\n                ajax.send();\n            },\n            \"onStart\" : onStart,\n            \"onLoad\" : onLoad,\n            \"onError\" : onError\n        });\n\n        ajax.events.on(\"start\", (ajax) => {\n            request.events.trigger(EVT_REQUEST_START);\n        });\n\n        ajax.events.on(\"success\", (ajax) => {\n            let value = processData(ajax, this);\n\n            request.setValue(value);\n            request.events.trigger(EVT_REQUEST_LOAD, value);\n\n            this.events.trigger(EVT_LOAD, request);\n\n            this._complete++;\n\n            if(this._complete == this._requests.length){\n                this.doComplete();\n            }\n        });\n\n        ajax.events.on(\"error\", (ajax) => {\n            let error = ajax.getStatusText();\n\n            request.setError(error);\n            request.events.trigger(EVT_REQUEST_ERROR, error);\n\n            this.events.trigger(EVT_ERROR, request);\n\n            this._complete++;\n\n            if(this._complete == this._requests.length){\n                this.doComplete();\n            }\n        });\n\n        this._requests.push(request);\n\n        if(this._status === STATUS_LOADING){\n            request.consume();\n        }\n\n        return request;\n    }\n\n    /**\n    * Loads a text from a URL.\n    * @method loadText\n    * @param {Object} params The parameters object\n    * @param {String} params.url the URL to load data from\n    * @param {Function} [params.onStart = null] A function to be called when the loading starts\n    * @param {Function} [params.onLoad = null] A function to be called when the loading finishes\n    * @param {Function} [params.onError = null] A function to be called when the loading fails\n    * @return {LoadRequest} a LoadRequest who's value is incomplete at first and will be filled once the Ajax request is fulfilled\n    */\n    loadText(params)\n    {\n        return this.load(Object.assign({}, params, {\n            responseType: \"text\"\n        }));\n    }\n\n    /**\n    * Loads a JavaScript object, parsed from a JSON string from a URL.\n    * @method loadJSON\n    * @param {Object} params The parameters object\n    * @param {String} params.url the URL to load data from\n    * @param {Function} [params.onStart = null] A function to be called when the loading starts\n    * @param {Function} [params.onLoad = null] A function to be called when the loading finishes\n    * @param {Function} [params.onError = null] A function to be called when the loading fails\n    * @return {LoadRequest} a LoadRequest who's value is incomplete at first and will be filled once the Ajax request is fulfilled\n    */\n    loadJSON(params)\n    {\n        return this.load(Object.assign({}, params, {\n            responseType: \"json\"\n        }));\n    }\n\n    /**\n    * Load an image from the URL given in parameters. The Image Object is given as the returned LoadRequest's value.\n    * @method loadImage\n    * @param {Object} params The parameters object\n    * @param {String} params.url the URL to load data from\n    * @param {Function} [params.onStart = null] A function to be called when the loading starts\n    * @param {Function} [params.onLoad = null] A function to be called when the loading finishes\n    * @param {Function} [params.onError = null] A function to be called when the loading fails\n    * @return {LoadRequest} a LoadRequest who's value is incomplete at first and will be filled once the Ajax request is fulfilled\n    */\n    loadImage(params)\n    {\n        let url = params.url;\n        let onStart = getOrDefault(params, \"onStart\", null);\n        let onLoad = getOrDefault(params, \"onLoad\", null);\n        let onError = getOrDefault(params, \"onError\", null);\n\n        let img = new Image();\n\n        let request = new LoadRequest({\n            \"consume\": (request) => {\n                img.src = url;\n                request.events.trigger(EVT_REQUEST_START);\n            },\n            \"onStart\" : onStart,\n            \"onLoad\" : onLoad,\n            \"onError\" : onError\n        });\n\n        img.addEventListener(\"load\", () => {\n            request.setValue(img);\n            request.events.trigger(EVT_REQUEST_LOAD, img);\n\n            this.events.trigger(EVT_LOAD, request);\n\n            this._complete++;\n\n            if(this._complete == this._requests.length){\n                this.doComplete();\n            }\n        }, false);\n\n        img.addEventListener(\"error\", () => {\n            let error = \"Error loading the image \"+ url;\n\n            request.setError(error);\n            request.events.trigger(EVT_REQUEST_ERROR, error);\n\n            this.events.trigger(EVT_ERROR, request);\n\n            this._complete++;\n\n            if(this._complete == this._requests.length){\n                this.doComplete();\n            }\n        });\n\n        this._requests.push(request);\n\n        if(this._status === STATUS_LOADING){\n            request.consume();\n        }\n\n        return request;\n    }\n\n    /**\n    * Load a video from the URL given in parameters. The Video Object is given as the returned LoadRequest's value.\n    * @method loadVideo\n    * @param {Object} params The parameters object\n    * @param {String} params.url the URL to load data from\n    * @param {Function} [params.onStart = null] A function to be called when the loading starts\n    * @param {Function} [params.onLoad = null] A function to be called when the loading finishes\n    * @param {Function} [params.onError = null] A function to be called when the loading fails\n    * @return {LoadRequest} a LoadRequest who's value is incomplete at first and will be filled once the request is fulfilled\n    */\n    loadVideo(params)\n    {\n        let url = params.url;\n        let onStart = getOrDefault(params, \"onStart\", null);\n        let onLoad = getOrDefault(params, \"onLoad\", null);\n        let onError = getOrDefault(params, \"onError\", null);\n\n        let video = document.createElement(\"video\");\n        video.autoplay = false;\n\n        let request = new LoadRequest({\n            \"consume\": (request) => {\n                video.src = url;\n                video.load();\n                request.events.trigger(EVT_REQUEST_START);\n            },\n            \"onStart\" : onStart,\n            \"onLoad\" : onLoad,\n            \"onError\" : onError\n        });\n\n        video.addEventListener(\"canplay\", () => {\n            request.setValue(video);\n            request.events.trigger(EVT_REQUEST_LOAD, video);\n\n            this.events.trigger(EVT_LOAD, request);\n\n            this._complete++;\n\n            if(this._complete == this._requests.length){\n                this.doComplete();\n            }\n        }, false);\n\n        video.addEventListener(\"error\", () => {\n            let error = \"Error loading the video \"+ url + \" \" + video.error.code;\n\n            debug.log(video.error);\n\n            request.setError(error);\n            request.events.trigger(EVT_REQUEST_ERROR, error);\n\n            this.events.trigger(EVT_ERROR, request);\n\n            this._complete++;\n\n            if(this._complete == this._requests.length){\n                this.doComplete();\n            }\n        });\n\n        this._requests.push(request);\n\n        if(this._status === STATUS_LOADING){\n            request.consume();\n        }\n\n        return request;\n    }\n\n    /**\n    * Loads an ArrayBuffer from a URL.\n    * @method loadArrayBuffer\n    * @param {Object} params The parameters object\n    * @param {String} params.url the URL to load data from\n    * @param {Function} [params.onStart = null] A function to be called when the loading starts\n    * @param {Function} [params.onLoad = null] A function to be called when the loading finishes\n    * @param {Function} [params.onError = null] A function to be called when the loading fails\n    * @return {LoadRequest} a LoadRequest who's value is incomplete at first and will be filled once the Ajax request is fulfilled\n    */\n    loadArrayBuffer(params)\n    {\n        return this.load(Object.assign({}, params, {\n            responseType: \"arraybuffer\"\n        }));\n    }\n\n    /**\n    * Loads a blob from a URL.\n    * @method loadBlob\n    * @param {Object} params The parameters object\n    * @param {String} params.url the URL to load data from\n    * @param {Function} [params.onStart = null] A function to be called when the loading starts\n    * @param {Function} [params.onLoad = null] A function to be called when the loading finishes\n    * @param {Function} [params.onError = null] A function to be called when the loading fails\n    * @return {LoadRequest} a LoadRequest who's value is incomplete at first and will be filled once the Ajax request is fulfilled\n    */\n    loadBlob(params)\n    {\n        return this.load(Object.assign({}, params, {\n            responseType: \"blob\"\n        }));\n    }\n\n    /**\n    * Loads an OBJ from a URL.\n    * @method loadOBJ\n    * @param {Object} params The parameters object\n    * @param {String} params.url the URL to load data from\n    * @param {Function} [params.onStart = null] A function to be called when the loading starts\n    * @param {Function} [params.onLoad = null] A function to be called when the loading finishes\n    * @param {Function} [params.onError = null] A function to be called when the loading fails\n    * @return {LoadRequest} a LoadRequest who's value is incomplete at first and will be filled once the Ajax request is fulfilled\n    */\n    loadOBJ(params)\n    {\n        return OBJ.load(this, params);\n    }\n\n\n    loadTexture(params)\n    {\n        var t = new Texture();\n        console.log(\"try to load \" + params.url);\n        var result = this.loadImage({url:params.url,\n                                     onLoad: function (img)\n                                     {\n                                         t.fromImage(img);\n                                         if (params.onLoad !== undefined)\n                                         {\n                                             console.log(\"call onLoad:\", params.onLoad);\n                                             params.onLoad(t);\n                                         }\n                                     }\n                                    });\n        console.log(\"result=\", result);\n        return t;\n    }\n\n}\n\nclass Cache{\n    /**\n    * Cache gives the possibility to automatically avoid the reloading of the same ressource. It uses url to check if a given ressource has already been loaded or if it's currently loading.\n    * Cache exists only once as a static class of Loader and should never be created by user.\n    * Cache is enabled by default. To disable it, use Loader.Cache.enable(false) before you start using a Loader or a component that uses a Loader internally (like Button, RichText, etc.)\n    * It is used only in Loader static methods for now (to fix!).\n    * @class Cache\n    * @constructor\n    */\n    constructor()\n    {\n        this.enabled = true;\n        this.files = {};\n        this.callbacks = [];\n    }\n\n    /**\n    * Enable or disable cache\n    * @method enable\n    * @param {Boolean} bool\n    */\n    enable(bool)\n    {\n        this.enabled = false;\n    }\n\n    /**\n    * Add a file to the cache with the given key\n    * @method add\n    * @param {Object} key\n    * @param {Object} file\n    */\n    add(key, file)\n    {\n        if ( this.enabled === false )\n        {\n            return;\n        }\n\n        if(!this.getKey(key))\n        {\n            debug.info( 'Cache Adding key and file:', key, file );\n            this.files[ key ] = file;\n        }\n    }\n\n    /**\n    * Add a key to the cache with no value, for further completion\n    * @method addKey\n    * @param {Object} key\n    */\n    addKey(key)\n    {\n        if ( this.enabled === false )\n        {\n            return;\n        }\n\n        if(!this.getKey(key))\n        {\n            debug.info( 'Cache Adding key:', key );\n            this.files[ key ] = undefined;\n        }\n    }\n\n    /**\n    * Add a value to the cache to the given, already existing key\n    * @method addValue\n    * @param {Object} key\n    * @param {Object} file\n    */\n    addValue(key, file)\n    {\n        if ( this.enabled === false )\n        {\n            return;\n        }\n\n        if(this.getKey(key) && this.files[key] === undefined)\n            if(this.getKey(key) && this.files[key] === undefined)\n            {\n                debug.info( 'Cache Adding value:', file, \"to key\", key );\n                this.files[key] = file;\n\n                //process then remove callback consumed\n                for(let i = this.callbacks.length-1; i >= 0; i--)\n                {\n                    //console.log(\"this.callbacks\", this.callbacks[i]);\n                    if(this.callbacks[i].key === key)\n                    {\n                        let callback = this.callbacks[i].callback;\n                        callback(file);\n\n                        this.callbacks.splice(i,1);\n                    }\n                }\n                debug.log(\"this.callbacks.length\",this.callbacks.length);\n            }\n    }\n\n    /**\n    * Get the value of the given key\n    * @method get\n    * @param {Object} key\n    * @return {Object} the file in cache\n    */\n    get(key)\n    {\n        if( this.enabled === false ) return;\n        //console.log( 'Cache', 'Checking key:', key );\n        return this.files[ key ];\n    }\n\n    /**\n    * Remove the given key\n    * @method remove\n    * @param {Object} key\n    */\n    remove(key)\n    {\n        delete this.files[ key ];\n    }\n\n    /**\n    * Check if the file of the given key is aleady cached\n    * @method isCached\n    * @param {Object} key\n    * @return {Boolean} is cached or not\n    */\n    isCached(key)\n    {\n        //console.log( 'Cache', 'Checking key:', key, \"in\", this.files[key] );\n        if(this.files[key])\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    /**\n    * Check if the file of the given key is loading (only the key exists, not the value)\n    * @method isLoading\n    * @param {Object} key\n    * @return {Boolean} is loading or not\n    */\n    isLoading(key)\n    {\n        if(this.getKey(key))\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    /**\n    * Get the key if it exists, even with no value\n    * @method getKey\n    * @param {Object} key\n    * @return {Object} the key or undefined\n    */\n    getKey(key)\n    {\n        let keys = Object.keys(this.files);\n\n        for(let k = 0; k < keys.length; k++)\n        {\n            if(keys[k] === key)\n            {\n                //console.log(\"getKey found\",keys[k], key);\n                return keys[k];\n            }\n        }\n        return undefined;\n    }\n\n    /**\n    * Empty the file list\n    * @method clear\n    */\n    clear()\n    {\n        this.files = {};\n    }\n\n    /**\n    * Adds a callback coming from a Loader, with its associated key. We use a list of object as we must be able to register several callback that can have the same key.\n    * @method addCallback\n    * @param {Object} key\n    * @param {Function} callback\n    */\n    addCallback(key, callback)\n    {\n        let temp = {key: key, callback: callback};\n        //console.log(\"will add key\",  temp.key,\"callback\", temp.callback);\n        this.callbacks.push(temp);\n    }\n}\n\nLoader.Cache = new Cache();\n\n// module exports\nexport { Loader };\nexport { Cache };\n","import {debug} from './helpers/Debug';\nimport {Component} from './Component';\n\nclass ComponentProxy extends Component\n{\n    /**\n     * ComponentProxy is a proxy that converts (like a kind of casting) scripts into Mobilizing Components. It was designed specifically to convert users script to regular Components, so they can be used besides all the other Components used by the program. The script should implement the methods preLoad(), setup(), update(). Users can define their own Component using this class for converting their script to a regular Mobilizing Component, we call it custom behavior.\n     *\n     * @example\n     *     //to do\n     *\n     * @class ComponentProxy\n     * @constructor\n     * @extends Component\n     * \n     * @param {Object} params Config parameters\n     * @param {Script} params.targetScript The Mobilizing user's script to convert in a Component\n    */\n    constructor(params)\n    {\n        super(params);\n\n        this.targetScript = params.targetScript; \n        this.targetScript.context = params.context;\n\n        this.targetScript.getContext = function(){\n            return this.context;\n        };\n    }\n\n    /**\n     * @method preLoad\n     */\n    preLoad(...args)\n    {\n        if(typeof this.targetScript.preLoad === \"function\")\n        {\n            this.targetScript.preLoad(...args);\n        }\n    }\n\n    /**\n    * Initialization method\n    * @method setup Setup\n    */\n    setup()\n    {\n        this.targetScript.setup();   \n    }\n    /**\n     * @method update\n     */\n    update()\n    {\n        this.targetScript.update();\n    }\n\n}\n\n// module exports\nexport { ComponentProxy };\n","import * as THREE from 'three';\n\nimport {debug} from './helpers/Debug';\nimport {Component} from './Component';\nimport {Loader} from './helpers/Loader';\nimport {ComponentProxy} from './ComponentProxy';\n\nclass Context extends Component\n{\n    /**\n    * Mobilizing.js defines a context to enable the use of multiple Mobilizing.js instances in the same webpage.\n    *\n    * @class Context\n    * @constructor\n    */\n    constructor(params)\n    {\n        super(params);\n        this._components = []; //list of components\n        this.loader = new Loader(); //default loader\n    }\n\n    /**\n    * Context initialization. Instanciates a Loader.\n    *\n    * @method init\n    */\n    init()\n    {\n        \n    }\n    \n    /**\n     * Setup for this Context instance (setup all components)\n     *\n     * @method setup\n     */\n    setup()\n    {\n        for (var c in this._components)\n        {\n            //this._components[c].setup();\n            this.chainedCall(this._components[c], \"setup\");\n        }\n        \n    }\n    \n    /**\n    * preLoad all components\n    * \n    * @method setup\n    */\n    preLoad()\n    {\n        for (var c in this._components)\n        {\n            this._components[c].preLoad(this.loader);\n            //this.chainedCall(this._components[c], \"preLoad\", this.loader);\n        } \n    }\n\n    /**\n    * Update\n    * @method update\n    */\n    update()\n    {\n        //new components pre-update-post\n        for (var c in this._components)\n        {\n            //this._components[c].preUpdate();\n            this.chainedCall(this._components[c], \"preUpdate\");\n        }\n\n        for (var c in this._components)\n        {\n            this.chainedCall(this._components[c], \"update\");\n        }\n\n        for (var c in this._components)\n        {\n            //this._components[c].postUpdate();\n            this.chainedCall(this._components[c], \"postUpdate\");\n        }\n    }\n\n\n    chainedCall(component, method, arg)\n    {\n        component[method](arg); //execute first\n        var chained = component.getChainedComponents();\n        //recurse then\n        if (chained.length > 0)\n        {\n            for (var c in chained)\n            {\n                this.chainedCall(chained[c], method(arg));\n            }\n        }\n    }\n\n    /**\n    * Add a Component to this context\n    * @method addComponent\n    * @param {Component} component\n    */\n    addComponent(component)\n    {\n        //encapsulate class in a component : useful for user script\n        if ( !(component instanceof Component ))\n        {\n            component = new ComponentProxy({targetScript:component, context:this});\n        }\n\n        this._components.push(component);\n        component.setContext(this);//add the context to the component\n        //component.setup(); //no\n        //component.preLoad(this.loader);\n        return component;\n    }\n    /*\n    \n    addBehaviour(target, component)\n    {\n        component.context = this;\n        component.getContext = function(){return this.context;};\n        component.target = target;\n        component.getTarget = function(){return this.target;};\n        this.components.push(component);\n        component.setup();\n    }\n    \n     */\n}\n// module exports\nexport { Context };\n","import {Context} from '../Context';\nimport {debug} from './Debug';\nimport {getOrDefault} from './Misc';\n\nclass Runner\n{\n    /**\n     A runner is used to instanciate a Mobilizing.js user's script inside a specific context. It is requiered to use a Runner to initiate a context and to attech a script to it.\n\n     @class Runner\n     @constructor\n     @param mobscriptinstance the Mobilizing.js script instance given by the user\n     @param params JSON parameters to activate or not some Mobilizing.js modules when used in an other lib (i.e. CoSiMa)\n     @param params.canvas canvas used by the engine\n     @param params.callback a callback function that get called when the user script setup() is finished (function args are the Runner instance and the user script instance)\n     @param params.inputEnabled enable the Mobilizing Input built-in manager\n     @param params.audioEnabled enable the Mobilizing Audio manager\n\n     @example\n         <!DOCTYPE html>\n            <html>\n                <head>\n                    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf8\">\n                    <meta charset=\"UTF-8\">\n                    <meta name=\"viewport\" content=\"height=device-height,width=device-width\" />\n                    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,user-scalable=no\" />\n                    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n                    <meta name=\"apple-touch-fullscreen\" content=\"yes\">\n\n                    <link rel='stylesheet' href='css/main.css' />\n\n                    <script src=\"../../vendor/three/three.min.js\"></script>\n                    <script src=\"../../vendor/opentype/opentype.js\"></script>\n                    <script src=\"../../dist/Mobilizing.js\"></script>\n                    <script src=\"script.js\"></script>\n                    <script>\n                        //script.js is a user written script that must be instanciate for the Runner\n                        var runner = new Mobilizing.Runner(new script());\n                    </script>\n                </head>\n            <body>\n            </body>\n          </html>\n\n     @example\n         function script()\n         {\n            this.setup = function(){\n            //get the current context to work with\n                var context = this.getContext();\n            };\n\n            this.update = function(){\n\n            };\n          };\n     */\n    constructor(params)\n    {\n        this.callback = getOrDefault(params, \"callback\", undefined); \n        this.context = params.context;\n\n        if (document.readyState === \"complete\")\n        {\n            this.run();\n        }\n        else\n        {\n            window.addEventListener(\"load\", this.run.bind(this));\n        }\n        this.frame = 0;\n    }\n\n    /**\n     * Runs the runner, init the context, create the preLoader and launch it, then execute the script\n     *\n     * @method run\n     * @private\n     */\n    run()\n    {\n        this.context.init();\n        this.context.preLoad();\n        this.context.loader.events.on(\"complete\", function(){ this.startLoop()}.bind(this) );\n        this.context.loader.consumeAll();\n    }\n\n    /**\n    * Starts the loop of the user's script, that is the update function\n    * @method startLoop\n    * @private\n    */\n    startLoop()\n    {\n        this.context.setup();   //call all components setups\n        this.loop();        //start the main loop\n    }\n\n    /**\n    * onFrameBegin\n    * \n    * @method onFrameBegin\n    */\n    onFrameBegin()\n    {\n        //move to a component ?\n        this.frame++;\n\n        if (this.context.stats !== undefined)\n        {\n            this.context.stats.begin();\n        }\n    }\n\n    /**\n    * onFrameEnd\n    * \n    * @method onFrameEnd\n    */\n    onFrameEnd()\n    {\n        if (this.context.stats !== undefined)\n        {\n            this.context.stats.end();\n        }\n    }\n\n    /**\n     * Runner's requestAnimationFrame loop manager\n     *\n     * @method loop\n     * @private\n     */\n    loop()\n    {\n        this.onFrameBegin();\n        this.context.update();//engine update\n        //we don't need anymore user script update and 3D rendering (this is done internally by the context)\n        this.onFrameEnd();\n        requestAnimationFrame(this.loop.bind(this));//schedule next\n    }\n\n}\n\n// module exports\nexport { Runner };\n","import {_Math} from './Math';\nimport {debug} from './Debug';\nimport {Component} from '../Component';\nimport {getOrDefault} from './Misc';\nimport {Mouse} from '../input/Mouse';\nimport {Touch} from '../input/Touch';\nimport {EventEmitter} from './EventEmitter';\n\nvar TOUCH_TYPE = \"touch\";\nvar MOUSE_TYPE = \"mouse\";\n\nclass PointerObject\n{\n    /**\n    * PointerObject is a thin layer that unify all inputs to simplify UI interactions\n    * \n    * @class PointerObject\n    * @constructor\n    * @param {Number} x\n    * @param {Number} y\n    * @param {Number} state\n    * @param {Number} type\n    */\n    constructor(params)\n    {\n        let x = getOrDefault(params, \"x\", 0);\n        let y = getOrDefault(params, \"y\", 0);\n        let state = getOrDefault(params, \"state\", false);\n        let type = getOrDefault(params, \"type\", undefined);\n\n        this._x = x;\n        this._y = y;\n        this._deltaX = 0;\n        this._deltaY = 0;\n        this._state = state;\n        this._type = type;\n        this._component = null;\n    }\n    /**\n    * Set the component\n    * \n    * @method setComponent\n    * @param {Object} component\n    */\n    setComponent(component)\n    {\n        this._component = component;\n    }\n    /**\n    * get the component\n    * \n    * @method getComponent\n    * @return {Object} component\n    */\n    getComponent(component)\n    {\n        return this._component;\n    }\n    /**\n    * Set the x coordinate\n    * \n    * @method setX\n    * @param {Object} x\n    */\n    setX(x)\n    {\n        this._x = x;\n    }\n    /**\n    * Set the y coordinate\n    * \n    * @method setY\n    * @param {Object} y\n    */\n    setY(y)\n    {\n        this._y = y;\n    }\n    /**\n    * Get the x coordinate\n    * \n    * @method getX\n    * @return {Object} x\n    */\n    getX()\n    {\n        return this._x;\n    }\n    /**\n    * Get the y coordinate\n    * \n    * @method getY\n    * @return {Object} y\n    */\n    getY()\n    {\n        return this._y;\n    }\n    /**\n    * Set the x coordinate\n    * \n    * @method setDeltaX\n    * @param {Object} x\n    */\n    setDeltaX(x)\n    {\n        this._deltaX = x;\n    }\n    /**\n    * Set the y delta coordinate\n    * \n    * @method setDeltaY\n    * @param {Object} y\n    */\n    setDeltaY(y)\n    {\n        this._deltaY = y;\n    }\n    /**\n    * Get the x coordinate\n    * \n    * @method getDeltaX\n    * @return {Object} x\n    */\n    getDeltaX()\n    {\n        return this._deltaX;\n    }\n    /**\n    * Get the y coordinate\n    * \n    * @method getDeltaY\n    * @return {Object} y\n    */\n    getDeltaY()\n    {\n        return this._deltaY;\n    }\n    /**\n    * Set the state\n    * \n    * @method setState\n    * @param {Boolean} state\n    */\n    setState(state)\n    {\n        this._state = state;\n    }\n    /**\n    * Get the state\n    * \n    * @method getState\n    * return {Boolean} state\n    */\n    getState()\n    {\n        return this._state;\n    }\n    /**\n    * Set the type\n    * \n    * @method setType\n    * return {String} type\n    */\n    setType(type)\n    {\n        this._type = type;\n    }\n    /**\n    * Get the type\n    * \n    * @method getType\n    * return {String} type\n    */\n    getType()\n    {\n        return this._type;\n    }\n}\n\n/**\n * Fired when a pointer is on (pressed or down)\n * @event on\n */\nconst EVT_ON = 'on';\n\n/**\n * Fired when a pointer is off (released or erased)\n * @event off\n */\nconst EVT_OFF = 'off';\n\n/**\n * Fired when a pointer moved\n * @event moved\n */\nconst EVT_MOVED = 'moved';\n\nclass Pointer extends Component\n{\n    /**\n    * Pointer is an abstraction that enables various input devices to send the same kind of events. It is designed to accumulate various type of inputs in a Map of PointerOject. Each input device is converted in a PointerOject in order to unify its interface. Usefully mainly internally for interactive UI objects like buttons.\n    * \n    * @example\n    *    //TODO\n    *\n    * @class Pointer\n    * @constructor\n    * @param {Object} params Parameters Object\n    * @param {Component} params.components the input components to add to this pointer (i.e. Mouse)\n    */\n    constructor(params)\n    {\n        super(params);\n\n        let components = getOrDefault(params, \"components\", undefined);\n        this.pointers = new Map();\n\n        // special pointer to get the last active pointer\n        this.lastActivePointer = new PointerObject();\n        this.lastActivePointer.setType(\"lastActive\");\n\n\n        if(components)\n        {\n            for(var i in components)\n            {\n                let component = components[i];\n                this.add(component);\n            }\n        }\n    }\n\n    /**\n    * Remove unused Pointers\n    * \n    * @method postUpdate\n    */\n    postUpdate()\n    {\n        for(let pointerKey of this.pointers.keys())\n        {\n            let pointer = this.pointers.get(pointerKey);\n\n            if(pointer.getState() === false && pointer.getType() === TOUCH_TYPE)\n            {\n                //console.log(\"erase\",pointer);\n                this.pointers.delete(pointerKey);\n            }\n\n            //update ce qui doit l'être mais qui ne peut l'être ailleurs\n            if(pointer.getType() === \"touch\")\n            {\n                pointer.setDeltaX(pointer.getComponent().getDeltaX());\n                pointer.setDeltaY(pointer.getComponent().getDeltaY());\n            }\n            else if(pointer.getType() === \"mouse\")\n            {\n                pointer.setDeltaX(pointer.getComponent().getDeltaX());\n                pointer.setDeltaY(pointer.getComponent().getDeltaY());\n            }\n\n        }\n    }\n\n    /**\n    * Adds the specified input component as a PointerObject to the pointers list.\n    * @method add\n    * @param {Component} component\n    */\n    add(component)\n    {\n        //console.log(\"component\",component);\n\n        if(component instanceof Touch)\n        {\n            let touchComponent = component;//just to understand better\n            //console.log(\"will add Touch comp\", touchComponent);\n\n            //register a new Pointer at touch creation\n            touchComponent.events.on(\"touchstart\", (touch) => {\n\n                let pointer = new PointerObject();\n                pointer.setComponent(component);\n                pointer.setType(TOUCH_TYPE);\n                pointer.setState(true);\n                pointer.setX(touch.x);\n                pointer.setY(touch.y);\n                this.pointers.set(touch.id, pointer);\n\n                this.events.trigger(EVT_ON, {pointer:pointer, x:pointer.getX(), y:pointer.getY()});\n\n                this.lastActivePointer.setState(true);\n                this.lastActivePointer.setX(touch.x);\n                this.lastActivePointer.setY(touch.y);\n                //console.log(\"touchstart\", pointer, this.pointers);\n            });\n\n            //updates a Pointer at touch mouved\n            touchComponent.events.on(\"touchmoved\", (touch) => {\n\n                let pointer = this.pointers.get(touch.id);\n                pointer.setState(true);\n                pointer.setX(touch.x);\n                pointer.setY(touch.y);\n                pointer.setDeltaX(touch.xDelta);\n                pointer.setDeltaY(touch.yDelta);\n                this.events.trigger(EVT_MOVED, {pointer:pointer, x:pointer.getX(), y:pointer.getY()});\n\n                this.lastActivePointer.setState(true);\n                this.lastActivePointer.setX(touch.x);\n                this.lastActivePointer.setY(touch.y);\n                this.lastActivePointer.setDeltaX(touch.xDelta);\n                this.lastActivePointer.setDeltaY(touch.yDelta);\n                //console.log(\"touchmoved\", pointer);\n            });\n\n            //updates a Pointer at touch mouved\n            touchComponent.events.on(\"touchend\", (touch) => {\n\n                let pointer = this.pointers.get(touch.id);\n                pointer.setState(false);\n                pointer.setX(touch.x);\n                pointer.setY(touch.y);\n\n                this.events.trigger(EVT_OFF, {pointer:pointer});\n\n                this.lastActivePointer.setState(false);\n                this.lastActivePointer.setX(touch.x);\n                this.lastActivePointer.setY(touch.y);\n                //console.log(\"touchend\", pointer);\n            });\n\n        }\n        else if(component instanceof Mouse)\n        {\n            let mouseComponent = component;//just to understand better\n\n            let pointer = new PointerObject();\n            pointer.setComponent(component);\n            pointer.setType(MOUSE_TYPE);\n\n            mouseComponent.events.on(\"mousepress\", (coords) => {\n                let pointer = this.pointers.get(component.getID());\n                pointer.setState(true);\n                this.events.trigger(EVT_ON, {pointer:pointer, x:pointer.getX(), y:pointer.getY()});\n\n                this.lastActivePointer.setState(true);\n            });\n\n            mouseComponent.events.on(\"mouserelease\", (coords) => {\n                let pointer = this.pointers.get(component.getID());\n                pointer.setState(false);\n                this.events.trigger(EVT_OFF, {pointer:pointer});\n\n                this.lastActivePointer.setState(false);\n            });\n\n            mouseComponent.events.on(\"mousemove\", (coords) => {\n                let pointer = this.pointers.get(component.getID());\n\n                pointer.setDeltaX(mouseComponent.getDeltaX());\n                pointer.setDeltaY(mouseComponent.getDeltaY());\n\n                pointer.setX(coords.x);\n                pointer.setY(coords.y);\n\n                this.events.trigger(EVT_MOVED, {pointer:pointer, x:pointer.getX(), y:pointer.getY()});\n\n                this.lastActivePointer.setState(true);\n                this.lastActivePointer.setX(pointer.getX());\n                this.lastActivePointer.setY(pointer.getY());\n                this.lastActivePointer.setDeltaX(pointer.getDeltaX());\n                this.lastActivePointer.setDeltaY(pointer.getDeltaY());\n            });\n\n            mouseComponent.events.on(\"mouseupdate\", (coords) => {\n                let pointer = this.pointers.get(component.getID());\n\n                pointer.setDeltaX(mouseComponent.getDeltaX());\n                pointer.setDeltaY(mouseComponent.getDeltaY());\n\n                /*this.events.trigger(EVT_MOVED, {pointer:pointer, x:pointer.getX(), y:pointer.getY()});*/\n\n                this.lastActivePointer.setState(true);\n                this.lastActivePointer.setDeltaX(pointer.getDeltaX());\n                this.lastActivePointer.setDeltaY(pointer.getDeltaY());\n            });\n\n\n            this.pointers.set(component.getID(), pointer);\n        }\n    }\n\n    /**\n    * Returns the specified PointerObject to work with its state\n    * @method get\n    * @param {Component} component\n    * @return {Component} the corresponding input Component\n    */\n    get(component)\n    {\n        return this.pointers.get(component.id);\n    }\n\n    /**\n    * Returns an Array from the pointers Map object. For debug purpose.\n    * @method getPointersArray\n    * @return {Array} Pointers array\n    */\n    getPointers()\n    {\n        return Array.from(this.pointers.values());\n    }\n\n    /**\n    * Returns true if ANY of the PointerObjects (input Component) state is true, false otherwise. i.e. if you add a mouse and a touch component to the pointer, this will return true if any of these 2 has it's state to true.\n    * @method getState\n    * @return {Array} pointers array\n    */\n    getState()\n    {\n        for(let pointer of this.pointers.values())\n        {\n            //the virtual pointer is on true\n            if(pointer.getState())\n            {\n                return true;\n            }\n        }\n        this.events.trigger(\"off\");\n        return false;\n    }\n\n    /**\n    * Returns x coordinates of the PointerObject (input Component) of the given index. If no index is given, the last active pointer will return.\n    * @method getX\n    * @return {Number} x coordinate\n    */\n    getX(index)\n    {\n        let values = [];\n\n        for(let pointer of this.pointers.values())\n        {\n            values.push(pointer.getX());\n        }\n\n        if(index) // we want a specific pointer in the list\n        {\n            return index === undefined ? values : values[index];\n        }\n        else // we want a value\n        {\n            return this.lastActivePointer.getX();\n        }\n    }\n\n    /**\n    * Returns y coordinates of the PointerObject (input Component) of the given index. If no index is given, the last active pointer will return.\n    * @method getY\n    * @return {Number} y coordinate\n    */\n    getY(index)\n    {\n        let values = [];\n\n        for(let pointer of this.pointers.values())\n        {\n            values.push(pointer.getY());\n        }\n        if(index) // we want a specific pointer in the list\n        {\n            return index === undefined ? values : values[index];\n        }\n        else // we want a value\n        {\n            return this.lastActivePointer.getY();\n        }\n    }\n\n    /**\n    * Returns x delta coordinates of the PointerObject (input Component) of the given index. If no index is given, the last active pointer will return.\n    * @method getDeltaX\n    * @return {Number} coordinate\n    */\n    getDeltaX(index)\n    {\n        let values = [];\n\n        for(let pointer of this.pointers.values())\n        {\n            values.push(pointer.getDeltaX());\n        }\n        if(index) // we want a specific pointer in the list\n        {\n            return index === undefined ? values : values[index];\n        }\n        else // we want a value\n        {\n            return this.lastActivePointer.getDeltaX();\n        }\n    }\n\n    /**\n    * Returns y delta coordinates of the PointerObject (input Component) of the given index. If no index is given, the last active pointer will return.\n    * @method getDeltaY\n    * @return {Number} coordinate\n    */\n    getDeltaY(index)\n    {\n        let values = [];\n\n        for(let pointer of this.pointers.values())\n        {\n            values.push(pointer.getDeltaY());\n        }\n        if(index) // we want a specific pointer in the list\n        {\n            return index === undefined ? values : values[index];\n        }\n        else // we want a value\n        {\n            return this.lastActivePointer.getDeltaY();\n        }\n    }\n}\n\n// module exports\nexport { Pointer };","import {EventEmitter} from '../helpers/EventEmitter';\nimport {getOrDefault} from '../helpers/Misc';\n\n/**\n * Fired when the client successfully connects to the server\n * @event connect\n */\nconst EVT_CONNECT = 'connect';\n\n/**\n * Fired when the client disconnects from the server\n * @event disconnect\n */\nconst EVT_DISCONNECT = 'disconnect';\n\n/**\n * Fired when a connection error occurs\n * @event error\n */\nconst EVT_ERROR = 'error';\n\n\nclass PubSub\n{\n    /**\n    * PubSub is a publish-subscribe messaging system based on socket.io\n    * It allows simple socket communication between different clients\n    * An runing instance of MobilizingServer is required to make this work\n    *\n    * @example\n    *    //TODO\n    *\n    * @class PubSub\n    * @constructor\n    * @param {Object} params The parameters object\n    * @param {String} [params.url=\"\"] The URL of the server on which the MobilizingServer instance is running\n    * @param {Boolean} [params.autoConnect=true] Whether the connection should be automatically opened\n    */\n    constructor(params)\n    {\n        let url = getOrDefault(params, \"url\", \"\");\n        let autoConnect = getOrDefault(params, \"autoConnect\", true);\n\n        this.events = new EventEmitter({\"scope\": this});\n\n        if(autoConnect){\n            this.open(url);\n        }\n    }\n\n    /**\n    * Open the socket connection\n    * @method open\n    * @param {String} url URL of the server on which the MobilizingServer instance is running\n    */\n    open(url)\n    {        \n        if(typeof io === \"undefined\"){\n            let script = document.createElement('script');\n            script.src = url +'/socket.io/socket.io.js';\n            script.onload = () => {\n                this.open(url);\n            };\n\n            document.head.appendChild(script);\n        }\n        else{\n            this.socket = io(url);\n\n            this.socket.on('connect', () => {\n                this.socket.on('disconnect', () => {\n                    this.events.trigger(EVT_DISCONNECT);\n                });\n\n                this.events.trigger(EVT_CONNECT);\n            });\n\n            this.socket.on('error', (error) => {\n                this.events.trigger(EVT_ERROR, error);\n            });\n        }\n    }\n\n    /**\n    * Close the socket connection\n    * @method close\n    */\n    close()\n    {\n        if(this.socket)\n        {\n            this.socket.disconnect();\n            delete this.socket;\n        }\n    }\n\n    /**\n    * Publish a message to a specific channel\n    * @method publish\n    * @param {String} channel The channel on which to publish the message\n    * @param {Mixed} message The message to publish\n    */\n    publish(channel, message)\n    {\n        if(this.socket){\n            this.socket.emit('publish', {'channel': channel, 'message': message});\n        }\n    }\n\n    /**\n    * Subscribe for messages from a specific channel\n    * @method subscribe\n    * @param {String} channel The channel on which to subscribe\n    * @param {Function} callback The callback to call when a message is received on the channel\n    */\n    subscribe(channel, callback)\n    {\n        if(this.socket){\n            this.socket.emit('subscribe', {'channel': channel});\n            this.socket.on(channel, callback);\n        }\n    }\n\n    /**\n    * Unsubscribe for messages from a specific channel\n    * @method unsubscribe\n    * @param {String} channel The channel from which to unsubscribe\n    */\n    unsubscribe(channel)\n    {\n        if(this.socket){\n            this.socket.emit('unsubscribe', {'channel': channel});\n            this.socket.off(channel);\n        }\n    }\n\n    /**\n    * id accessor\n    *\n    * @property id\n    * @type String\n    */\n    getID()\n    {\n        return this.socket ? this.socket.id : null;\n    }\n}\n\n// module exports\nexport { PubSub };","import {Vector3} from '../core/Vector3';\nimport {_Math} from '../helpers/Math';\nimport {Time} from '../time/Time';\nimport {Component} from '../Component';\nimport {getOrDefault} from '../helpers/Misc';\n\nclass PhysicsEngine extends Component\n{\n    /**\n     * PhysicsEngine Class\n     *\n     * @class PhysicsEngine\n     * @constructor\n     * @param {Object} params Parameters Object\n     * @param {Number} params.iterations iterations of the physic engine when constrains are calculated\n     */\n    constructor(params)\n    {\n        super(params);\n\n        this.joints = [];\n        this.bodies = [];\n        this.iterations = getOrDefault(params, \"iterations\", 5);\n\n        this.G = 6.6742 * Math.pow(10, -11); //constante gravitationnelle\n        this.ke =  8.99 * Math.pow(10, 9); //coulomb's constant\n        this.relaxationCoeff = 1;\n    }\n\n    /**\n     * Initialization method\n     * @method setup Setup\n     */\n    setup()\n    {\n        this.context = this.getContext();\n        this._time = new Time();\n        this.context.addComponent(this._time);\n        this._time.setup();\n        this._time.on();\n    }\n\n    /*on(){\n        super.on();\n\n    }\n\n    off(){\n        super.off();\n\n    }*/\n\n    /**\n    * Description for undefined\n    * @method update\n    */\n    update()\n    {\n        if(this._active)\n        {\n            let i = 0;\n            let j = 0;\n            let body;\n            let joint;\n            let p1;\n            let p2;\n            let x;\n            let y;\n            let z;\n            let distance;\n            let dt = this._time.getDelta();//this.context.time.deltaTime;\n            if (dt == 0)\n            {\n                return;\n            }\n            if (dt > 1)\n                dt = 1;\n            //console.log(\"dt=\"+dt);\n            let force;\n            //apply forces / acc / vel / pos\n            for (let i=0; i < this.bodies.length; ++i)\n            {\n                body = this.bodies[i];\n                body.forces = new Vector3(0,0,0);\n            }\n\n\n            //springs\n            for (let j=0; j < this.joints.length; ++j)\n            {\n                joint = this.joints[j];\n\n                if(!joint.enabled)\n                {\n                    continue; //ignore this joint\n                }\n                if (joint.type === \"spring\")\n                {\n                    p1 = joint.body1.position;\n                    p2 = joint.body2.position;\n                    x = p2.x-p1.x;\n                    y = p2.y-p1.y;\n                    z = p2.z-p1.z;\n\n                    distance = Math.sqrt(x*x + y*y + z*z);\n\n                    //compute spring force\n                    force = (distance - joint.distance) * joint.k;\n                    joint.body1.forces.x += x*force;\n                    joint.body1.forces.y += y*force;\n                    joint.body1.forces.z += z*force;\n\n                    joint.body2.forces.x -= x*force;\n                    joint.body2.forces.y -= y*force;\n                    joint.body2.forces.z -= z*force;\n\n                    //damping force\n                    let sx = joint.body2.velocity.x - joint.body1.velocity.x;\n                    let sy = joint.body2.velocity.y - joint.body1.velocity.y;\n                    let sz = joint.body2.velocity.z - joint.body1.velocity.z;\n\n\n                    joint.body1.forces.x += sx*joint.damping;\n                    joint.body1.forces.y += sy*joint.damping;\n                    joint.body1.forces.z += sz*joint.damping;\n\n                    joint.body2.forces.x -= sx*joint.damping;\n                    joint.body2.forces.y -= sy*joint.damping;\n                    joint.body2.forces.z -= sz*joint.damping;\n                }\n                else if (joint.type === \"gravity\")\n                {\n                    p1 = joint.body1.position;\n                    p2 = joint.body2.position;\n                    x = p2.x - p1.x;\n                    y = p2.y - p1.y;\n                    z = p2.z - p1.z;\n\n                    distance = Math.sqrt(x*x+y*y+z*z);\n\n                    //normalize\n                    x /= distance;\n                    y /= distance;\n                    z /= distance;\n\n                    //compute gravity force\n                    let mass = joint.body1.mass+joint.body2.mass;\n                    force = this.G * mass / (distance*distance);\n                    joint.body1.forces.x += x*force;\n                    joint.body1.forces.y += y*force;\n                    joint.body1.forces.z += z*force;\n\n                    joint.body2.forces.x -= x*force;\n                    joint.body2.forces.y -= y*force;\n                    joint.body2.forces.z -= z*force;\n\n                }\n\n                else if (joint.type === \"electrostatics\")\n                {\n                    p1 = joint.body1.position;\n                    p2 = joint.body2.position;\n                    x = p2.x - p1.x;\n                    y = p2.y - p1.y;\n                    z = p2.z - p1.z;\n\n                    distance = Math.sqrt(x*x + y*y + z*z);\n\n                    //normalize\n                    x /= distance;\n                    y /= distance;\n                    z /= distance;\n\n                    //compute electrostatics force\n                    force = this.ke * joint.charge1 * joint.charge2 / (distance*distance);\n                    joint.body1.forces.x -= x*force;\n                    joint.body1.forces.y -= y*force;\n                    joint.body1.forces.z -= z*force;\n\n                    joint.body2.forces.x += x*force;\n                    joint.body2.forces.y += y*force;\n                    joint.body2.forces.z += z*force;\n\n                }\n            }\n\n            for (i=0;i<this.bodies.length;++i)\n            {\n                body = this.bodies[i];\n                let pos = body.position;\n\n                //quasi Verlet\n                if (body.speed !== undefined)\n                {\n                    body.velocity = new Vector3(body.speed.x, body.speed.y, body.speed.z);\n                    body.speed = undefined;\n                }\n                else\n                {\n                    body.velocity = new Vector3(body.position.x - body.previousposition.x,\n                                                body.position.y - body.previousposition.y,\n                                                body.position.z - body.previousposition.z);\n\n                    body.velocity.x /= dt;\n                    body.velocity.y /= dt;\n                    body.velocity.z /= dt;\n                }\n\n                body.previousposition = new Vector3(body.position.x,\n                                                    body.position.y,\n                                                    body.position.z);\n\n\n                //apply gravity (FIXME, not accurate !!!)\n                if (this.globalgravity !== undefined)\n                {\n                    body.forces.x += this.globalgravity.x * body.mass;\n                    body.forces.y += this.globalgravity.y * body.mass;\n                    body.forces.z += this.globalgravity.z * body.mass;\n                }\n\n                if (this.globalwind !== undefined)\n                {\n                    body.forces.x += this.globalwind.x;\n                    body.forces.y += this.globalwind.y;\n                    body.forces.z += this.globalwind.z;\n                }\n\n                //acc\n                let acc = new Vector3(0,0,0);\n                acc.x = body.forces.x / body.mass;\n                acc.y = body.forces.y / body.mass;\n                acc.z = body.forces.z / body.mass;\n                //console.log(\"body acc\", acc);\n                //speed\n                body.velocity.x += acc.x * dt;\n                body.velocity.y += acc.y * dt;\n                body.velocity.z += acc.z * dt;\n                //pos\n                body.position.x += body.velocity.x * dt;\n                body.position.y += body.velocity.y * dt;\n                body.position.z += body.velocity.z * dt;\n\n                //console.log(\"body position\", body.position);\n            }\n\n            //satisfy constraints\n            for (let i=0; i < this.iterations; ++i)\n            {\n                for (let j=0; j < this.joints.length; ++j)\n                {\n                    joint = this.joints[j];\n                    if (!joint.enabled)\n                    {\n                        continue; //ignore this joint\n                    }\n\n                    if (joint.type === \"stick\" || joint.type === \"string\")\n                    {\n                        p1 = joint.body1.position;\n                        p2 = joint.body2.position;\n                        x = p2.x - p1.x;\n                        y = p2.y - p1.y;\n                        z = p2.z - p1.z;\n                        distance = Math.sqrt(x*x + y*y + z*z);\n\n                        //satisfy distance constraint\n                        let err = (distance - joint.distance)/distance*1;\n                        //console.log(\"err=\" + err);\n\n                        if (joint.type === \"stick\" || (joint.type === \"string\" && distance > joint.distance))\n                        {\n                            let err1 = err/2;\n                            let err2 = err/2;\n                            if (joint.body1.fixed)\n                            {\n                                err1 = 0;\n                                err2 = err;\n                            }\n                            else if (joint.body2.fixed)\n                            {\n                                err1 = err;\n                                err2 = 0;\n                            }\n\n                            p1.x = p1.x+x * err1 * this.relaxationCoeff;\n                            p2.x = p2.x-x * err2 * this.relaxationCoeff;\n                            p1.y = p1.y+y * err1 * this.relaxationCoeff;\n                            p2.y = p2.y-y * err2 * this.relaxationCoeff;\n                            p1.z = p1.z+z * err1 * this.relaxationCoeff;\n                            p2.z = p2.z-z * err2 * this.relaxationCoeff;\n                        }     \n                    }\n                    else if (joint.type === \"fixed\")\n                    {\n                        //console.log(\"fixed = \" , joint.position);\n                        joint.body1.position = new Vector3(joint.position.x,\n                                                           joint.position.y,\n                                                           joint.position.z);\n                        joint.body1.velocity = new Vector3(0,0,0);\n                    }\n                }\n            }\n\n            //apply new positions\n            for (i=0;i<this.bodies.length;++i)\n            {\n                body = this.bodies[i];\n                if (body.object !== undefined)\n                {\n                    //console.log(\"new pos=\" , body.position);\n                    body.object.transform.setLocalPosition(body.position);\n                }\n            }\n        }\n    }\n\n    /**\n    * addBody\n    * @method addBody\n    * @param {Vector3} position\n    * @param {Number} mass\n    * @param {Mesh} object the Mesh to attach this physics body to\n    * @return {Body} the added physic body\n    */\n    addBody(position, mass, object)\n    {\n        let body = {};\n        body.position = new Vector3(position.x, position.y, position.z);\n        //console.log(\"body position : \", body.position);\n        body.previousposition = new Vector3(position.x, position.y, position.z);\n        body.mass = mass;\n        body.object = object;\n        body.velocity = new Vector3(0,0,0);\n        this.bodies.push(body);\n        return body;\n    }\n\n    /**\n    * addFixedJoint\n    * @method addFixedJoint\n    * @param {Mesh} body\n    * @param {Vector3} position\n    * @return {Body} the added joint body\n    */\n    addFixedJoint(body, position)\n    {\n        let joint = {};\n        joint.body1 = body;\n        joint.body1.fixed = true;\n        joint.type = \"fixed\";\n        joint.position = new Vector3(position.x, position.y, position.z);\n        joint.enabled = true;\n        this.joints.push(joint);\n        return joint;\n    }\n\n    /**\n    * addStickJoint\n    * @method addStickJoint\n    * @param {Mesh} body1\n    * @param {Mesh} body2\n    * @param {Number} distance\n    * @return {Body} the added joint body\n    */\n    addStickJoint(body1, body2, distance)\n    {\n        let joint = {};\n        joint.body1 = body1;\n        joint.body2 = body2;\n        joint.type = \"stick\";\n        joint.distance = distance;\n        joint.enabled = true;\n        this.joints.push(joint);\n        return joint;\n    }\n\n    /**\n    * addSpringJoint\n    * @method addSpringJoint\n    * @param {Mesh} body1\n    * @param {Mesh} body2\n    * @param {Number} distance\n    * @param {Number} k\n    * @param {Number} damping\n    * @return {Body} the added joint body\n    */\n    addSpringJoint(body1, body2, distance, k, damping)\n    {\n        let joint = {};\n        joint.body1 = body1;\n        joint.body2 = body2;\n        joint.type = \"spring\";\n        joint.distance = distance;\n        joint.k = k;\n        joint.damping = damping;\n        joint.enabled = true;\n        this.joints.push(joint);\n        return joint;\n    }\n\n    /**\n    * addStringJoint\n    * @method addStringJoint\n    * @param {Mesh} body1\n    * @param {Mesh} body2\n    * @param {Number} distance\n    * @return {Body} the added joint body\n    */\n    addStringJoint(body1, body2, distance)\n    {\n        let joint = {};\n        joint.body1 = body1;\n        joint.body2 = body2;\n        joint.type = \"string\";\n        joint.distance = distance;\n        joint.enabled = true;\n        this.joints.push(joint);\n        return joint;\n    }\n\n    /**\n    * addGravityJoint\n    * @method addGravityJoint\n    * @param {Mesh} body1\n    * @param {Mesh} body2\n    * @return {Body} the added joint body\n    */\n    addGravityJoint(body1, body2)\n    {\n        let joint = {};\n        joint.body1 = body1;\n        joint.body2 = body2;\n        joint.type = \"gravity\";\n        joint.enabled = true;\n        this.joints.push(joint);\n        return joint;\n    }\n\n    /**\n    * addElectrostaticsJoint\n    * @method addElectrostaticsJoint\n    * @param {Mesh} body1\n    * @param {Mesh} body2\n    * @param {Number} charge1\n    * @param {Number} charge2\n    * @return {Body} the added joint body\n    */\n    addElectrostaticsJoint(body1, body2, charge1, charge2)\n    {\n        let joint = {};\n        joint.body1 = body1;\n        joint.body2 = body2;\n        joint.type = \"electrostatics\";\n        joint.charge1 = charge1;\n        joint.charge2 = charge2;\n        joint.enabled = true;\n        this.joints.push(joint);\n        return joint;\n    }\n\n    /**\n    * setGlobalGravity\n    * @method setGlobalGravity\n    * @param {Vector3} vector\n    */\n    setGlobalGravity(vector)\n    {\n        this.globalgravity = vector;\n    }\n\n    /**\n    * setGlobalWind\n    * @method setGlobalWind\n    * @param {Vector3} vector\n    */\n    setGlobalWind(vector)\n    {\n        this.globalwind = vector;\n    }\n}\n\n// module exports\nexport { PhysicsEngine };\n","import {debug} from '../helpers/Debug';\n\nclass Engine3D\n{\n    /**\n     * Engine3D class contains the technical elements that bind Mobilizing.js API to a 3D rendering library. Currently, it's Three.js that is used to acheive 3D rendering. In the future, we can imagine to use an other library or a home made Engine.\n     *\n     * @class Engine3D\n     * @constructor\n     * @param {Canvas} canvas the canvas to use, if any, otherwise the Engine produce one.\n     * @param {Context} context the Mobilizing.js context to use, if any.\n     */\n    constructor(params)\n    {\n\n        //we try to use the canvas\n        //try\n        if (params.canvas)\n        {\n            debug.log(\"try to attach the Canvas...\",canvas);\n            //Mobilizing.renderer = new THREE.WebGLRenderer({canvas: document.getElementById('canvas')}); //FIXME : Ejecta\n            //this.renderer = new THREE.WebGLRenderer({canvas: document.getElementById(canvas)});\n            this.renderer = new THREE.WebGLRenderer({canvas: canvas, /*antialias: true, preserveDrawingBuffer: true*/});\n            this.engine = \"webgl\";\n\n            if(this.renderer.devicePixelRatio === undefined)\n            {\n                this.renderer.devicePixelRatio = window.devicePixelRatio;\n            }\n            this.renderer.setPixelRatio( window.devicePixelRatio ? window.devicePixelRatio : 1 ); //force retina\n            this.renderer.setSize( canvas.width/window.devicePixelRatio, canvas.height/window.devicePixelRatio);\n\n            canvas.style.width = canvas.width/window.devicePixelRatio +\"px\";\n            canvas.style.height = canvas.height/window.devicePixelRatio +\"px\";\n            this.canvas = canvas;\n            this.canvas.retinaResolutionEnabled = true;\n\n            this.windowWidth = this.canvas.clientWidth;\n            this.windowHeight = this.canvas.clientHeight;\n            debug.log(\"existing CANVAS\",this.renderer);\n        }\n        else\n        {\n            debug.log(\"retrieve Canvas failed, create a new canvas\");\n\n            //this.renderer = new THREE.WebGLRenderer({antialias: true, preserveDrawingBuffer: true, alpha:true});\n            this.renderer = new THREE.WebGLRenderer();\n\n            this.engine = \"webgl\";\n            this.renderer.setPixelRatio( window.devicePixelRatio ? window.devicePixelRatio : 1 ); //force retina\n            \n            if(this.renderer.devicePixelRatio === undefined)\n            {\n                this.renderer.devicePixelRatio = window.devicePixelRatio;\n            }\n            this.renderer.setSize( window.innerWidth, window.innerHeight);\n\n            document.body.appendChild( this.renderer.domElement );\n            this.canvas = this.renderer.domElement;\n            this.canvas.retinaResolutionEnabled = true;\n\n            this.windowWidth = window.innerWidth;\n            this.windowHeight = window.innerHeight;\n        }\n\n        debug.log(\"engine = \" + this.engine);\n        this.renderer.setClearColor(0x000000, 1.0);\n        this.renderer.autoClear = true; //false\n\n        debug.log(\"window pixel ratio = \" + window.devicePixelRatio);\n\n        /*\n        this.renderer.setPixelRatio( window.devicePixelRatio ); //force retina\n        this.renderer.setSize( window.innerWidth, window.innerHeight);*/\n    }\n\n    /**\n    * Returns the current Engine rendering canvas\n    * @method getCanvas\n    * @return {Canvas} the canvas being used.\n    */\n    getCanvas()\n    {\n        return this.canvas;\n    }\n\n}\n\n// module exports\nexport { Engine3D };","import {_Math} from '../helpers/Math';\nimport {_DOM} from '../helpers/DOM';\nimport {debug} from '../helpers/Debug';\nimport {Component} from '../Component';\nimport {singletonize} from '../helpers/Misc';\nimport {getOrDefault} from '../helpers/Misc';\nimport {Color} from \"../core/Color\";\n\nclass Renderer3D extends Component\n{\n    /**\n     * Renderer3D is a Three js based renderer.\n     * \n     *\n     * @example\n     *     //to do\n     *\n     * @class Renderer3D\n     * @constructor\n     * @extends Component\n     * @param {Object} params Config parameters\n     * @param {Context} params.context The Mobilizing context\n    */\n    constructor(params)\n    {\n        super(params);\n        this.canvas = getOrDefault(params, \"canvas\", undefined);\n        this.scenes = [];\n        this.cameras = [];\n        this.fog = undefined;\n        this.setCurrentScene(\"default\");\n        this.engine = new Mobilizing.Engine3D({canvas: this.canvas}); //3D engine creation - we pass the Canvas\n\n        //we must register the canvas when made internally by Mobilizing/Three\n        if(this.canvas)\n        {\n            this.fullscreen = false;\n            debug.log(\"got canvas from runner to context\", this.canvas);\n        }\n        else\n        {\n            this.canvas = this.engine.canvas;\n            this.fullscreen = true;\n            debug.log(\"got canvas from Engine\", this.canvas);\n        }\n\n        //==================================================================\n\n        //window management\n        window.addEventListener(\"orientationchange\", event => this.onWindowResize(event), false);\n        window.addEventListener(\"resize\", event => this.onWindowResize(event), false );\n\n        // deal with the page getting resized or scrolled\n        window.addEventListener(\"scroll\", event => this.updateCanvasPosition(event), false);\n        window.addEventListener(\"resize\", event => this.updateCanvasPosition(event), false);\n\n        this.canvasPosition = this.getCanvasPosition();\n    }\n\n    /*setup()\n    {\n    }*/\n\n    /*on(){\n        super.on();\n    }\n\n    off(){\n        super.off();\n    }*/\n\n    /**\n     * @method update\n     */\n    update()\n    {\n        this.render();\n    }\n\n    //deprecated\n    setClearColor(color, alpha)\n    {\n        this.engine.renderer.setClearColor(color,alpha);\n    }\n\n    /**\n    * Activates the rendering of projected shadows\n    * @method setEnableShadowMap\n    * @param {Boolean} state\n    */\n    setEnableShadowMap(state)\n    {\n        this.engine.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n        this.engine.renderer.shadowMapEnabled = state;\n    }\n\n    /**\n     * Tells the context to use this scene (defined by a string) or create it and switch to it.\n     * @method setCurrentScene\n     * @param {String} name\n     */\n    setCurrentScene(name)\n    {\n        this.scene = this.scenes[name];\n\n        if (this.scene === undefined)\n        {\n            this.scene = new THREE.Scene();\n            this.scenes[name] = this.scene;\n            debug.log(\"current scene is : \", this.scene);\n        }\n    }\n\n    /**\n     * Adds on object to the current scene\n     * @method addToCurrentScene\n     * @param {Object} object A Mesh or Light to add the scene\n     */\n    addToCurrentScene(object)\n    {\n        this.scene.add(object.transform.entity);\n    }\n\n    /**\n     * Remove from the current scene\n     * @method removeFromCurrentScene\n     * @param {Object} object the object to remove\n     */\n    removeFromCurrentScene(object)\n    {\n        this.scene.remove(object.transform.entity);\n    }\n\n    /**\n     * Clears this renderer : remove all cameras and scene objects\n     * \n     * @method addCamera\n     * @param {Camera} cam the camera to add\n     */\n    clear()\n    {\n        console.log(\"scene=\" , this.scene);\n        for(var obj in this.scene)\n        {\n            var o =this.scene[obj];\n            console.log(\"key \" , obj);\n            console.log(\"removing \" , o);\n            //this.removeFromCurrentScene(o);\n            this.scene.remove(o);\n            \n        }\n        this.scene.children = [];\n\n        this.cameras = [];\n    }\n\n    /**\n     * Adds a camera to the current context\n     * \n     * @method addCamera\n     * @param {Camera} cam the camera to add\n     */\n    addCamera(cam)\n    {\n        this.cameras.push(cam);\n    }\n\n    /**\n     * Removes the camera from the current context\n     * \n     * @method removeCamera\n     * @param {Camera} cam\n     */\n    removeCamera(cam)\n    {\n        this.cameras.splice( this.cameras.indexOf(cam), 1 );\n    }\n\n    /**\n     * Defines the type and color of the fog to be used for rendering the scene\n     * \n     * @method setFog\n     * @param {String} type one of \"linear\", \"exp\"\n     * @param {Color} color the fog color\n     */\n    setFog(type, color)\n    {\n        if(!color)\n        {\n            color = Color.black.clone();\n        }\n\n        switch(type)\n        {\n            case \"linear\" :\n                this.fog = new THREE.Fog(color.getHex());\n                this.fog.type = \"linear\";\n                break;\n\n            case \"exp\" :\n                this.fog = new THREE.FogExp2(color.getHex());\n                this.fog.type = \"exp\";\n                break;\n\n            default :\n                this.fog = new THREE.Fog(color.getHex());\n                this.fog.type = \"linear\";\n                break;\n                break;\n        }\n        this.scene.fog = this.fog;\n    }\n\n    /**\n     * Defines the near distance of the linear fog. Default is 1.\n     * \n     * @method setFogNear\n     * @param {Number} near\n     */\n    setFogNear(near)\n    {\n        if(this.fog.type === \"linear\")\n        {\n            this.fog.near = near;\n        }\n    }\n\n    /**\n     * Defines the far distance of the linear fog. Default is 1000.\n     * \n     * @method setFogFar\n     * @param {Number} far\n     */\n    setFogFar(far)\n    {\n        if(this.fog.type === \"linear\")\n        {\n            this.fog.far = far;\n        }\n    }\n\n    /**\n     * Defines the density of the exponential fog.  Default is 0.00025.\n     * \n     * @method setFogDensity\n     * @param {Number} density\n     */\n    setFogDensity(val)\n    {\n        if(this.fog.type === \"exp\")\n        {\n            this.fog.density = val;\n        }\n    }\n\n    /**\n     * Defines the fog color\n     * \n     * @method setFogColor\n     * @param {Color} color\n     */\n    setFogColor(color)\n    {\n        this.fog.color = color;\n    }\n\n\n    onWindowResize()\n    {\n        if(this.fullscreen)\n        {\n            this.cameras.forEach( cam => {\n\n                if(cam.type === \"perspective\"){\n\n                    var w = this.engine.renderer.domElement.width/this.engine.renderer.devicePixelRatio;\n                    var h = this.engine.renderer.domElement.height/this.engine.renderer.devicePixelRatio;\n                    cam.setAspect((w*cam.viewport.width) / (h*cam.viewport.height));\n\n                }else if(cam.type === \"ortho\"){\n\n                    cam.setOrthoPlanes(window.innerWidth/-2,\n                                       window.innerWidth/2,\n                                       window.innerHeight/2,\n                                       window.innerHeight/-2);\n                }\n            });\n            this.engine.renderer.setSize( window.innerWidth, window.innerHeight);\n        }\n    }\n\n    /**\n     * Renders all the camera in the context\n     * @method render\n     */\n    render()\n    {\n        //rendu de toutes les caméras\n        //debug.log(\"render \" + this.cameras.length + \" cams\");\n        //simple insertion index sorting\n        for (var l=0; l<this.cameras.length; ++l)\n        {\n            this.cameras[l].sort = false;\n            if (this.cameras[l].index === undefined)\n            {\n                this.cameras[l].index = 0;\n            }\n        }\n        \n        var sorted_cameras = [];\n        var min_val = 9999;\n        var min_cam = null;\n        \n        for (var i=0;i<this.cameras.length; ++i)\n        {\n            //recherche de l'élément le plus petit pas encore trié\n            min_val = 9999;\n            min_cam = null;\n            for (var j=0;j<this.cameras.length; ++j)\n            {\n                var cam_candidate = this.cameras[j];\n                //debug.log(\"evaluating cam.index=\" + cam_candidate.index);\n                if (cam_candidate.index <= min_val && !cam_candidate.sort)\n                {\n                    min_cam = cam_candidate;\n                    min_val = cam_candidate.index;\n                }\n            }\n            \n            if(min_cam)\n            {\n                min_cam.sort = true;\n                //debug.log(\"push cam with index=\" + min_val);\n                sorted_cameras.push(min_cam);\n            }\n        }\n        \n        for (var k=0; k<sorted_cameras.length; ++k)\n        {\n            //debug.log(\"render \" + k);\n            var cam = sorted_cameras[k];\n            \n            if (cam.transform.getVisible() && (cam.dirty||cam.autorender))\n            {\n                var w = this.engine.renderer.domElement.width / this.engine.renderer.devicePixelRatio;\n                var h = this.engine.renderer.domElement.height /this.engine.renderer.devicePixelRatio;\n                if (cam.type !== \"cube\")\n                {\n                    cam.setAspect((w * cam.viewport.width) / (h * cam.viewport.height));\n                }\n                var viewport_x = w*cam.viewport.x;\n                var viewport_y = h*cam.viewport.y;\n                var viewport_w = w*cam.viewport.width;\n                var viewport_h = h*cam.viewport.height;\n                this.engine.renderer.setViewport(viewport_x, viewport_y, viewport_w, viewport_h);\n                this.engine.renderer.setScissor(viewport_x, viewport_y, viewport_w, viewport_h);\n                this.engine.renderer.setScissorTest(true);\n                this.engine.renderer.autoClear = cam.autoclear;\n\n                for (var ks in this.scenes)\n                {\n                    if (this.logLevel === 1)\n                    {\n                        debug.log(\"render cam/scene \", cam, ks);\n                    }\n                    if (cam.layer === ks) //si la scène a le même nom que le layer de la caméra\n                    {\n                        if (cam.renderTexture !== undefined)\n                        {\n                            this.engine.renderer.render(this.scenes[ks], cam._camera, cam.renderTexture._engineTexture, cam.autoClear);\n                        }\n                        else if (cam.type === \"cube\")\n                        {\n                            cam._camera.updateCubeMap( this.engine.renderer, this.scenes[ks] );\n                        }\n                        else\n                        {\n                            this.engine.renderer.render(this.scenes[ks], cam._camera);\n                        }\n                        cam.dirty = false;\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n    * Returns the current canvas\n    * \n    * @method getCanvas\n    * @return {Object} the canvas\n    */\n    getCanvas()\n    {\n        return this.canvas;\n    }\n\n    /**\n    * Returns the current canvas'size as {width, height}\n    * \n    * @method getCanvasSize\n    * @return {Object} the size of the canvas as {width, height}\n    */\n    getCanvasSize()\n    {\n        return { width: this.canvas.width/window.devicePixelRatio,\n                height: this.canvas.height/window.devicePixelRatio};\n    }\n\n    /**\n    * Get the canvas position as {x, y}\n    * \n    * @method getCanvasPosition\n    * @return {Object} the position of the canvas as {x, y} \n    */\n    getCanvasPosition()\n    {\n        return _DOM.getElementPosition(this.canvas);\n    }\n\n    /**\n    * Update the canvas position in screen\n    * \n    * @method updateCanvasPosition\n    */\n    updateCanvasPosition()\n    {\n        this.canvasPosition = this.getCanvasPosition();\n    }\n}\n\n\nRenderer3D = singletonize(Renderer3D);\n\n// module exports\nexport { Renderer3D };\n","import {_Math} from '../helpers/Math';\nimport {debug} from '../helpers/Debug';\nimport {Component} from '../Component';\nimport {singletonize} from '../helpers/Misc';\n\nclass RendererAudio extends Component\n{\n    /**\n     * RendererAudio is a Web Audio API based renderer for playing sound.\n     *\n     * @example\n     *     //to do\n     *\n     * @class RendererAudio\n     * @constructor\n     * @extends Component\n     * @param {Object} params Config parameters\n    */\n    constructor(params)\n    {\n        super(params);\n\n        this.renderer = this.getContext();\n        this.audioContext = undefined;\n\n        //web Audio API\n        if (this.params === undefined || this.params.audioEnabled)\n        {\n            if (window.AudioContext !== undefined)\n            {\n                this.audioContext = new window.AudioContext();\n            }\n            else if (window.webkitAudioContext !== undefined)\n            {\n                this.audioContext = new window.webkitAudioContext();\n            }\n\n            //hack to reset the SR\n            if (this.audioContext)\n            {\n                if (this.audioContext.sampleRate !== 44100)\n                {\n                    var buffer = this.audioContext.createBuffer(1, 1, 44100);\n                    var dummy = this.audioContext.createBufferSource();\n                    dummy.buffer = buffer;\n                    dummy.connect(this.audioContext.destination);\n                    dummy.start(0);\n                    dummy.disconnect();\n                    this.audioContext.close();\n\n                    if (window.AudioContext !== undefined)\n                    {\n                        this.audioContext = new window.AudioContext();\n                    }\n                    else if (window.webkitAudioContext !== undefined)\n                    {\n                        this.audioContext = new window.webkitAudioContext();\n                    }\n                }\n\n                this.audioOutputNode = this.audioContext.createGain();\n                this.audioOutputNode.connect(this.audioContext.destination);\n            }\n        }\n\n        this.listener = this.audioContext.listener;\n\n        if(this.listener.forwardX)\n        {\n            this.listener.forwardX.value = 0;\n            this.listener.forwardY.value = 0;\n            this.listener.forwardZ.value = -1;\n            this.listener.upX.value = 0;\n            this.listener.upY.value = 1;\n            this.listener.upZ.value = 0;\n        }\n        else\n        {\n            this.listener.setOrientation(0,0,-1,0,1,0);\n        }\n\n    }\n\n    beep(frequency)\n    {\n        let freq = (frequency) ? frequency : 440;\n        var osc = this.audioContext.createOscillator();\n        //this.audioOutputNode.gain.value = 0;\n        osc.connect(this.audioOutputNode);\n        osc.frequency.value = freq;\n        osc.start(0);\n        osc.stop(this.audioContext.currentTime + 0.3);\n    }\n\n    setListenerTransform(transform)\n    {\n        this.listener.transform = transform;\n    }\n\n    /*setup()\n    {\n    }\n\n    on()\n    {\n        super.on();\n    }\n\n    off()\n    {\n        super.off();\n    }\n    */\n    update()\n    {\n        super.update();\n\n        if(this.listener.transform)\n        {\n            var pos = this.listener.transform.getLocalPosition();\n            this.listener.setPosition(pos.x, pos.y, pos.z);\n        }\n    }\n}\n\n\nRendererAudio = singletonize(RendererAudio);\n\n// module exports\nexport { RendererAudio };","import {getOrDefault} from '../helpers/Misc';\nimport {debug} from '../helpers/Debug';\n\nclass Font\n{\n    /**\n     Font are not managed in Mobilizing.js like in a usual DOM context as we are using WebGL. To be able to use both bitmap rendered font and 3D vector rendering, we use openType.js (https://nodebox.github.io/opentype.js/ big thanks to Frederik!) to load any web compilant font and the use it in other classes (like {{#crossLink \"Label\"}}{{/crossLink}} or {{#crossLink \"Mesh\"}}{{/crossLink}})\n     @class Font\n     @constructor\n     @param {Object} params\n     @param {Mixed} params.fontFile the font file already loaded, must be loaded with response type setted to arraybuffer\n    */\n    constructor(params)\n    {\n        this._fontFile = getOrDefault(params, \"fontFile\", undefined);\n        this._font = opentype.parse(this._fontFile);\n    }\n\n    /**\n    * Return the underlying Font.js object to work with it outside of Mobilizing.Font\n    * @private\n    * @method getFont\n    * @return {Object} Font.js object\n    */\n    getFont()\n    {\n        return this._font;\n    }\n\n    /**\n    * Calculates the size (in pixels) that should take the string with this font at the given fontSize. Handy for Label creation.\n    * @method getTextSize\n    * @param {String} text the string to use for the size computing\n    * @param {Number} fontSize the text font size to use\n    * @return {Object.width, Object.height} width and height\n    */\n    getTextSize(text, fontSize)\n    {\n        let kerning, fontScale, glyphs, i, glyph, options, kerningValue;\n        let ymax = [];\n\n        if (!this._font.supported)\n        {\n            return;\n        }\n        let x = 0;\n        let y = 0;\n        fontSize = fontSize !== undefined ? fontSize : 72;\n        options = options || {};\n        kerning = options.kerning === undefined ? true : options.kerning;\n        fontScale = 1 / this._font.unitsPerEm * fontSize;\n        glyphs = this._font.stringToGlyphs(text);\n\n        for (i = 0; i < glyphs.length; i += 1)\n        {\n            glyph = glyphs[i];\n            //callback(glyph, x, y, fontSize, options);\n            ymax.push( (glyph.getMetrics().yMax - glyph.getMetrics().yMin) * fontScale);\n            if (glyph.advanceWidth)\n            {\n                x += glyph.advanceWidth * fontScale;\n            }\n            if (kerning && i < glyphs.length - 1)\n            {\n                kerningValue = this._font.getKerningValue(glyph, glyphs[i + 1]);\n                x += kerningValue * fontScale;\n            }\n        }\n        return({width: x, height: Math.max.apply(0,ymax) });\n    }\n}\n\n// module exports\nexport { Font };","import {Transform} from './Transform';\n\n/*\n * LODGroup Class\n *\n * @class LODGroup\n */\n\nclass LODGroup\n{\n\n    constructor()\n    {\n        this.transform = new Transform(this/*.light*/);\n        this.bias = 1;\n        this.factor = -0.1;\n    }\n\n    //process LOD\n    process(position)\n    {\n        var thisposition = this.transform.getWorldPosition();\n        var distance = this.getDistance(position, thisposition);\n        var lod = this.bias+distance*this.factor;\n\n    }\n\n\n    getDistance(p1,p2)\n    {\n        var d = Math.sqrt((p1.x-p2.x)*(p1.x-p2.x) + (p1.y-p2.y)*(p1.y-p2.y)+ (p1.z-p2.z)*(p1.z-p2.z));\n        return d;\n    }\n\n    applyLOD(lod)\n    {\n\n\n    }\n\n}\n\n// module exports\nexport { LODGroup };","import {getOrDefault} from '../helpers/Misc';\nimport {Font} from '../scene/Font';\nimport {Color} from '../core/Color';\n\n/**\n * StyledLetter is a class that helps to represents a letter with its style for later drawing.\n * @class StyledLetter\n * @constructor\n * @param {Object} params Parameters Object\n * @param {String} params.letter the letter's string (character)\n * @param {Number} params.size the size of the font\n * @param {Font} params.font a Mobilizing font reference\n * @param {Color} params.color a Mobilizing Color\n */\nclass StyledLetter\n{\n    constructor(params)\n    {\n        this.letter = getOrDefault(params, \"letter\", \"\");\n        this.size = getOrDefault(params, \"size\", 40);\n        this.font = getOrDefault(params, \"font\", undefined);//mobilizing font\n        this.path; //openType Path\n        this.boundingBox; //derived from path\n\n        this.color = getOrDefault(params, \"color\", Color.black.clone());\n\n        this.x = 0;\n        this.y = 0;\n        this.width = 0;\n        this.height = 0;\n\n        if(this.font)\n        {\n            this.update();\n        }\n    }\n\n    /**\n    * Updates properties according to the new settings\n    * @method update\n    */\n    update()\n    {\n        let size = this.font.getTextSize(this.letter, this.size);\n        this.width = size.width;\n        this.height = size.height;\n\n        this.path = this.font.getFont().getPath(this.letter, this.x, this.y, this.size);\n        this.path.fill = \"#\" + this.color.getHexString(); //this.color;\n        this.boundingBox = this.path.getBoundingBox();\n    }\n    /**\n    * Defines the letter's string\n    * @method setLetter\n    * @param {String} letter\n    */\n    setLetter(val)\n    {\n        this.letter = val;\n    }\n    /**\n    * Defines the letter's x coord\n    * @method setX\n    * @param {Number} x\n    */\n    setX(val)\n    {\n        this.x = val;\n    }\n    /**\n    * Defines the letter's y coord\n    * @method setY\n    * @param {Number} y\n    */\n    setY(val)\n    {\n        this.y = val;\n    }\n    /**\n    * Defines the letter's font size\n    * @method setSize\n    * @param {Number} size\n    */\n    setSize(val)\n    {\n        this.size = val;\n    }\n    /**\n    * Defines the letter's color\n    * @method setColor\n    * @param {Color} color\n    */\n    setColor(color)\n    {\n        this.color = color;\n    }\n    /**\n    * Defines the letter's font\n    * @method setFont\n    * @param {Font} font\n    */\n    setFont(font)\n    {\n        this.font = font;\n    }\n}\n\n/**\n * StyledTextElement is a simple class to organise text elements extacted from HTML text. It contains an array of StyledLetter.\n * @class StyledTextElement\n * @constructor\n * @param {Object} params Parameters Object\n * @param {String} params.text the text string (character)\n * @param {Number} params.size the size of the font\n * @param {Font} params.font a Mobilizing font reference\n * @param {Color} params.color a Mobilizing Color\n */\nclass StyledTextElement\n{\n    constructor(params)\n    {\n        this.text = getOrDefault(params, \"text\", \"\");\n        this.font = getOrDefault(params, \"font\", undefined);\n        this.size = getOrDefault(params, \"size\", 40);\n        this.color = getOrDefault(params, \"color\", Color.black.clone());\n        \n        this.path;\n        this.boundingBox;\n\n        this.line = 0;\n\n        this.x = 0;\n        this.y = 0;\n        this.width = 0;\n        this.height = 0;\n\n        this.styledLetters = [];\n\n        if(this.font)\n        {\n            this.update();\n        }\n    }\n    /**\n    * Updates properties according to the new settings (including styledLetters array properties)\n    * @method update\n    */\n    update()\n    {\n        let size = this.font.getTextSize(this.text, this.size);\n        this.width = size.width;\n        this.height = size.height;\n\n        this.path = this.font.getFont().getPath(this.text, this.x, this.y, this.size);\n        this.path.fill = \"#\" + this.color.getHexString(); //this.color;\n        this.boundingBox = this.path.getBoundingBox();\n\n        let baseWidth = 0;\n\n        for(let i=0; i<this.styledLetters.length; i++)\n        {\n            let styledLetter = this.styledLetters[i];\n            styledLetter.font = this.font;\n            if(i === 0)\n            {\n                styledLetter.setX(this.x);\n                baseWidth = styledLetter.width;\n            }\n            else\n            {\n                styledLetter.setX(this.x + baseWidth);\n                baseWidth += styledLetter.width;\n            }\n            styledLetter.setY(this.y);\n            styledLetter.setSize(this.size);\n            styledLetter.setColor(this.color);\n            styledLetter.update();\n        }\n    }\n    /**\n    * Defines the letter's font\n    * @method setFont\n    * @param {Font} font\n    */\n    setFont(font)\n    {\n        this.font = font;\n    }\n    /**\n    * Defines the letter's color\n    * @method setColor\n    * @param {Color} color\n    */\n    setColor(color)\n    {\n        this.color = color;\n    }\n    /**\n    * Defines the letter's x\n    * @method setX\n    * @param {Number} x\n    */\n    setX(val)\n    {\n        this.x = val;\n    }\n    /**\n    * Defines the letter's y\n    * @method setY\n    * @param {Number} y\n    */\n    setY(val)\n    {\n        this.y = val;\n    }\n    /**\n    * Defines the letter's font size\n    * @method setSize\n    * @param {Font} size\n    */\n    setSize(val)\n    {\n        this.size = val;\n    }\n    /**\n    * Defines the letter's path\n    * @method setPath\n    * @param {Path} openType.js object's Path\n    */\n    setPath(val)\n    {\n        this.path = val;\n    }\n    /**\n    * Defines the letter's text string\n    * @method setText\n    * @param {String} text\n    */\n    setText(val)\n    {\n        this.text = val;\n        this.styledLetters = [];\n\n        for(let i=0; i<this.text.length; i++)\n        {\n            let char = this.text.charCodeAt(i);\n            let styledLetter = new StyledLetter({letter: String.fromCharCode(char),\n                                                 font: this.font,\n                                                 size: this.size,\n                                                 color: this.color\n                                                });\n            this.styledLetters.push(styledLetter);\n        }\n    }\n}\n\nclass TextLine\n{\n    /**\n    * TextLine is a thin layer class to organise text elements extacted from HTML text in lines. It gives the possibility to easily compute the global size of the line. Used in RichText.\n    * @class TextLine\n    * @constructor\n    */\n    constructor()\n    {\n        this.styledTextElements = [];\n        this.width = 0;\n    }\n}\n\nexport { StyledLetter, StyledTextElement, TextLine };","import {Base} from '../Base';\nimport {getOrDefault} from '../helpers/Misc';\nimport {debug} from '../helpers/Debug';\nimport {Loader} from '../helpers/Loader';\nimport {Font} from '../scene/Font';\nimport {Color} from '../core/Color';\nimport {EventEmitter} from '../helpers/EventEmitter';\nimport {StyledTextElement, StyledLetter, TextLine} from '../text/TextUtils';\n\n/**\n* Triggered when the canvas has been redrawn, useful to synchronise Texture update and canvas refresh\n* @event drawn\n*/\nconst EVT_DRAWN = \"drawn\";\n\nconst TEXT_ALIGN_LEFT = \"left\";\nconst TEXT_ALIGN_RIGHT = \"right\";\nconst TEXT_ALIGN_CENTER = \"center\";\n\nclass RichText extends Base\n{\n    /**\n    * RichText class uses standard HTML Text to format text drawn with a certain style in a Canvas. Supported HTML style tags are <b>, <strong>, <i>, <em>, <br>, <p>, <font> with attributes color and size. TODO : support of face attribute in <font>. Default font are predefined.\n    * @class RichText\n    * @extends Base\n    * @constructor\n    * @param {Object} params Parameters Object\n    * @param {HTMLNode} params.htmlText the html text to draw in the canvas\n    * @param {Number} [params.width=512] width of the inner canvas\n    * @param {Number} [params.height=512] height of the inner canvas\n    * @param {Number} [params.lineHeight=1] line height for the text\n    * @param {Number} [params.margins=10] white space (margin) in pixel on all left, top, right and bottom of the canvas. Text will be drawn within these boundaries with automatic newline management. \n    * @param {Number} [params.marginLeft=10] white space (margin) in pixel on left side.\n    * @param {Number} [params.marginTop=10] white space (margin) in pixel on top side.\n    * @param {Number} [params.marginRight=10] white space (margin) in pixel on right side.\n    * @param {Number} [params.marginBottom=10] white space (margin) in pixel on bottom side.\n    * @param {Number} [params.textSize=20] size, in pixels, of the text\n    * @param {Color} [params.textColor=black] color the text default color\n    * @param {Color} [params.textAlign=\"left\"] text alignment in the canvas (margins included), can be one of \"left\", \"center\", \"right\".\n    * @param {Color} [params.backgroundColor=white] color the background color\n    * @param {Boolean} [params.drawBoundingBox=false] tell to draw the bounding boxes of every text blocs or not\n    * @param {Number} [params.boundingBoxStrokeWidth=1] the lineWidth to use for bounding boxes drawing\n    * @param {URL} params.fontURL url for the regular font file\n    * @param {URL} params.fontItalicURL url for the italic font file\n    * @param {URL} params.fontBoldURL url for the bold font file\n    * @param {URL} params.fontBoldItalicURL url for the bold-italic font file\n    * \n    */\n    constructor(params)\n    {\n        super(params);\n\n        this._width = getOrDefault(params, \"width\", 512);\n        this._height = getOrDefault(params, \"height\", 512);\n        this._backgroundColor = getOrDefault(params, \"backgroundColor\", Color.white.clone());\n        this._lineHeight = getOrDefault(params, \"lineHeight\", 1);\n        \n        this._margins = {left: 0, right:0, top:0, bottom:0};\n        let margins = getOrDefault(params, \"margins\", 10);\n        this._margins.left = getOrDefault(params, \"marginLeft\", margins);\n        this._margins.right = getOrDefault(params, \"marginRight\", margins);\n        this._margins.top = getOrDefault(params, \"marginTop\", margins);\n        this._margins.bottom = getOrDefault(params, \"marginBottom\", margins);\n        \n        this._textSize = getOrDefault(params, \"textSize\", 20);\n        this._textColor = getOrDefault(params, \"textColor\", Color.black.clone());\n        this._textAlign = getOrDefault(params, \"textAlign\", TEXT_ALIGN_LEFT);\n        this._boundingBoxStrokeWidth = getOrDefault(params, \"boundingBoxStrokeWidth\", 1);\n        this._drawBoundingBox = getOrDefault(params, \"drawBoundingBox\", false);\n\n        this._fontURL = getOrDefault(params, \"fontURL\", \"fonts/Raleway-Regular.ttf\");\n        this._fontItalicURL = getOrDefault(params, \"fontItalicURL\", \"fonts/Raleway-Regular-Italic.ttf\");\n        this._fontBoldURL = getOrDefault(params, \"fontBoldURL\", \"fonts/Raleway-Bold.ttf\");\n        this._fontBoldItalicURL = getOrDefault(params, \"fontBoldItalicURL\", \"fonts/Raleway-Bold-Italic.ttf\");\n\n        this._canvas = document.createElement(\"canvas\");\n        this._canvas.width = this._width;\n        this._canvas.height = this._height;\n        this._canvasContext = this._canvas.getContext(\"2d\");\n\n        this._canvas.events = new EventEmitter({scope:this._canvas});\n\n        /*document.body.appendChild(this._canvas);\n        this._canvas.style.position = \"absolute\";*/\n\n        this._text = getOrDefault(params, \"text\", undefined);\n\n        if(this._text)\n        {\n            this._DOMText = document.createElement(\"div\")\n            this._DOMText.innerHTML = this._text;\n            this.styledText = this.parseDOMTree(this._DOMText);\n        }\n        else\n        {\n            console.error(\"no html text provided\");\n        }\n\n        //for internal use\n        this._lines = [];\n\n        //loading font chain\n        Loader.loadArrayBuffer(this._fontURL, (data) => {\n            this._defaultFontFile = data;\n\n            Loader.loadArrayBuffer(this._fontItalicURL, (data) => {\n                this._defaultItalicFontFile = data;\n\n                Loader.loadArrayBuffer(this._fontBoldURL, (data) => {\n                    this._defaultBoldFontFile = data;\n\n                    Loader.loadArrayBuffer(this._fontBoldItalicURL, (data) => {\n                        this._defaultBoldItalicFontFile = data;\n\n                        this.setup();\n                    });\n                });\n            });\n        });\n\n    }\n\n    /**\n    * Setup bloc called after default font loading\n    * @private\n    * @method setup\n    */\n    setup()\n    {\n        this._defaultFont = new Font({fontFile: this._defaultFontFile});\n        this._defaultItalicFont = new Font({fontFile: this._defaultItalicFontFile});\n        this._defaultBoldFont = new Font({fontFile: this._defaultBoldFontFile});\n        this._defaultBoldItalicFont = new Font({fontFile: this._defaultBoldItalicFontFile});\n\n        this.render();\n    }\n\n    /**\n    * Get canvas width\n    * @method getWidth\n    * @return {Number} canvas width\n    */\n    getWidth()\n    {\n        return this._width;\n    }\n    /**\n    * Get canvas height\n    * @method getHeight\n    * @return {Number} canvas height\n    */\n    getHeight()\n    {\n        return this._height;\n    }\n\n    /**\n    * Get the canvas\n    * @method getCanvas\n    * @return {Canvas} canvas\n    */\n    getCanvas()\n    {\n        return this._canvas;\n    }\n\n    /**\n    * Stater method to process the html tree. Manage internally the array used afterward to contain all StyledTextElement.\n    * @method parseDOMTree\n    * @param {DOMNodeObject} baseNode\n    * @return {Array} the resulting StyledTextElement array\n    */\n    parseDOMTree(baseNode)\n    {\n        var styledText = [];\n\n        this.processDOMTree(baseNode, styledText);\n        //console.log(styledText);\n        return styledText;\n    }\n\n    /**\n    * Recursive process of an html tree from it's main node. This method return a linear list (in the original text strings order) of StyledTextElement in order to cumulate all the tags a piece of string is attach to and the attributes of its immediate parent tag.\n    * @method processDOMTree\n    * @param {DOMNodeObject} baseNode\n    * @param {Array} destArray the array of destination\n    */\n    processDOMTree(baseNode, destArray)\n    {\n        let i = 0;\n        let node;\n\n        //lazy <p> support : <p> has automatic margin, top and bottom, of 1 line-height, which is 2 <br> ;-)\n        //TODO : support <p> top and bottom margin ?\n        if(baseNode.tagName === \"P\")\n        {\n            if(baseNode.previousElementSibling.tagName === \"P\")\n            {\n                baseNode.innerHTML = baseNode.innerHTML + \"<br>\";\n            }\n            else\n            {\n                baseNode.innerHTML = \"<br><br>\" + baseNode.innerHTML + \"<br>\";\n            }\n        }\n\n        while(node = baseNode.childNodes[i])\n        {\n\n            let children = node.childNodes.length;\n\n            if(children >= 1){\n                this.processDOMTree(node, destArray);\n            }\n            else\n            {\n                //split the textContent\n                let words = node.textContent.split(/\\s/);\n\n                //StyledTextElement array construction loop\n                for(let w = 0; w < words.length; w++)\n                {\n                    let el = new StyledTextElement();\n                    //surchage StyledTextElement\n                    el.attributes = [];\n                    el.tags = [];\n                    el.setText(words[w]);\n\n                    //reconstruct white space, lost after split, take first place, \\n and \".\" is first as conditions\n                    if( w !== 0)\n                    {\n                        el.text = \" \" + el.text;\n                    }\n\n                    //manage attributes at parent level as it's how it's done\n                    if(node.parentNode.attributes)\n                    {\n                        for(let a=0; a<node.parentNode.attributes.length; a++)\n                        {\n                            el.attributes.push({name:node.parentNode.attributes[a].name,\n                                                value:node.parentNode.attributes[a].value});\n                        }\n                    }\n\n                    if(node.tagName){\n                        el.tags.push(node.tagName);\n                    }\n\n                    let tempNode = node;\n                    while(tempNode.parentNode)\n                    {\n                        if(tempNode.parentNode.tagName !== \"DIV\")//avoid to take the main enclosing span\n                        {\n                            el.tags.push(tempNode.parentNode.tagName);\n                        }\n                        tempNode = tempNode.parentNode;\n                    }\n                    destArray.push(el);\n                }\n            }\n            i++;\n        }\n\n        return destArray;\n    }\n\n\n    /**\n    * Render the input HTML text parsed in an array of StyledTextElement in the current canvas\n    * @method render\n    */\n    render()\n    {\n        //background color\n        if(this._backgroundColor !== Color.transparent.makeRGBAStringWithAlpha(0))\n        {\n            //console.log(this._backgroundColor, Color.transparent.makeRGBAStringWithAlpha(0));\n            this._canvasContext.fillStyle = \"#\" + this._backgroundColor.getHexString();\n            this._canvasContext.fillRect(0,0, this._width, this._height);\n        }\n        \n\n        //x position of drawing (letter pos in x)\n        var letterXOffset = this._margins.left;\n        //y position of drawing (letter pos in y, or baseline)\n        var lineYOffset = this._margins.top;\n        //number of lines in the canvas\n        var lineCount = 0;\n\n        for(let i=0; i<this.styledText.length; i++)\n        {\n            let el = this.styledText[i];\n\n            //select the font to use\n            let currentFont = this._defaultFont;\n\n            //define the font based on associated tags\n            if(el.tags.indexOf(\"B\") >= 0 || el.tags.indexOf(\"STRONG\") >= 0)\n            {\n                currentFont = this._defaultBoldFont;\n            }\n            if (el.tags.indexOf(\"I\") >= 0 || el.tags.indexOf(\"EM\") >= 0)\n            {\n                currentFont = this._defaultItalicFont;\n            }\n            if (el.tags.indexOf(\"B\") >= 0 && el.tags.indexOf(\"I\") >= 0 ||\n                el.tags.indexOf(\"STRONG\") >= 0 && el.tags.indexOf(\"EM\") >= 0)\n            {\n                currentFont = this._defaultBoldItalicFont;\n            }\n\n            let size = this._textSize;\n\n            //test for new line <br> and add a new line to lineCount\n            if(el.tags.indexOf(\"BR\") >= 0)\n            {\n                lineYOffset += size * this._lineHeight;\n                letterXOffset = this._margins.left;\n                //increment the lineNb\n                lineCount++;\n                console.log(\"lineYOffset\",lineYOffset);\n            }\n\n            let color = this._textColor;\n\n            //is it the 1st run ?  place the baseline to the margin + font size\n            if(lineYOffset === this._margins.top)\n            {\n                lineYOffset += size;\n            }\n\n            //test for new line from canvas width limit and reset offsets and add a new line to lineCount\n            let tempWidth = letterXOffset + currentFont.getTextSize(el.text, size).width;\n\n            if(tempWidth > this._width - this._margins.right)\n            {\n                lineYOffset += size * this._lineHeight;\n                letterXOffset = this._margins.left;\n                //to erase first space and avoid unused whitespace at line start\n                el.text = el.text.replace(/^\\s/, \"\");\n                //increment the lineNb\n                lineCount++;\n            }\n\n            //manage font tag attributes\n            //TODO : manage font changes!!\n            if(el.attributes)\n            {\n                for(let j=0; j<el.attributes.length; j++)\n                {\n                    if(el.attributes[j].name === \"color\")\n                    {\n                        color = new Color(el.attributes[j].value);\n                    }\n                    if(el.attributes[j].name === \"size\")\n                    {\n                        size = Number(el.attributes[j].value);\n                    }\n                }\n            }\n            //set the font to use\n            el.setFont(currentFont);\n            /*el.setPath(currentFont.getFont().getPath(el.text, letterXOffset, lineYOffset, size));*/\n            let fontTextSize = currentFont.getTextSize(el.text, size);\n\n            //store info in the object\n\n            el.line = lineCount;\n            el.setX(letterXOffset);\n\n            el.setY(lineYOffset);\n\n            el.setSize(size);\n            //el.setColor(\"#\" + color.getHexString());\n            el.setColor(color);\n            el.update();//refresh\n\n            //populate the lines object for later align computation\n            if(this._lines[lineCount])\n            {\n                let lineObj = this._lines[lineCount];\n                lineObj.styledTextElements.push(el);\n                lineObj.width += el.width;\n            }\n            else\n            {\n                let lineObj = new TextLine();\n                lineObj.styledTextElements.push(el);\n                lineObj.width += el.width;\n\n                this._lines.push(lineObj);\n            }\n\n            //update the x offset for next el\n            letterXOffset += fontTextSize.width;\n        }\n\n        //console.log(this._lines);\n\n        //text-align loop, we adjust x positions of every text bloc\n        for(let i=0; i<this._lines.length; i++)\n        {\n            let xDiff;\n            let line = this._lines[i];\n\n            //compute the x difference between current and desired align\n            switch(this._textAlign)\n            {\n                case TEXT_ALIGN_CENTER :\n                    {\n                        xDiff = (this._width/2) - (this._margins.left + line.width/2);\n                    }\n                    break;\n\n                case TEXT_ALIGN_RIGHT :\n                    {        \n                        xDiff = (this._width-this._margins.left) - (this._margins.right + line.width);\n                    }\n                    break;\n            }\n\n            if(xDiff !== undefined)\n            {\n                for(let j=0; j<line.styledTextElements.length; j++)\n                {\n                    let el = line.styledTextElements[j];\n                    el.setX(el.x + xDiff);\n                    el.update();//refresh\n                }\n            }\n\n        }\n\n        //draw loop\n        for(let i=0; i<this.styledText.length; i++)\n        {\n            let el = this.styledText[i];\n            el.path.draw(this._canvasContext);\n\n            if(this._drawBoundingBox)\n            {\n                let boundingBox = el.path.getBoundingBox();\n                this._canvasContext.beginPath();\n                this._canvasContext.moveTo(boundingBox.x1, boundingBox.y1);\n                this._canvasContext.lineTo(boundingBox.x2, boundingBox.y1);\n                this._canvasContext.lineTo(boundingBox.x2, boundingBox.y2);\n                this._canvasContext.lineTo(boundingBox.x1, boundingBox.y2);\n                this._canvasContext.lineTo(boundingBox.x1, boundingBox.y1 - this._boundingBoxStrokeWidth/2);\n                this._canvasContext.lineWidth = this._boundingBoxStrokeWidth;\n                this._canvasContext.stroke();\n            }\n        }\n\n        //emit a custom event on the canvas to refresh texture when used\n        this._canvas.events.trigger(EVT_DRAWN);\n    }\n\n}\n\n// module exports\nexport { RichText };\n","import * as THREE from 'three';\nimport {getOrDefault, getOrExec} from '../helpers/Misc';\nimport {debug} from '../helpers/Debug';\nimport {StyledLetter, StyledTextElement} from \"../text/TextUtils\";\n\nclass CanvasTexture\n{\n    /**\n     * CanvasTexture Class simplifies the creation of texture from an HTML5 canvas. Any valid canvas can be used to create a texure that can then be attached to a material.\n     * Some helpers static methods are implemented to quickly creates some commons shapes (rectangles, circle).\n     * Stroke and fill colors can be changed on the fly if update methods is called afterward\n     *\n     * @class CanvasTexture\n     * @constructor\n     * @param {Object} params an object containing all the possible parameters for this class. Use it like in the following example. Possible parameters are lisited below.\n     * @example\n     *     //TODO\n     *\n     * @param {Canvas} [params.canvas = a canvas will be created internally if undefined] the canvas to use\n     * @param {Context} [params.context] the Mobilizing context to use\n     * @param {Number} [params.width = 100] width the width of the canvas\n     * @param {Number} [params.height = 100] height the height of the canvas\n     * @param {Number} [params.strokeWidth = 1] strokeWidth as an integer\n     * @param {Color} [params.strokeColor] strokeColor as a Mobilizing Color\n     * @param {Number} [params.strokeOpacity = 1] strokeOpacity as a float between 0 and 1\n     * @param {Color} [params.fillColor] fillColor as a Mobilizing Color\n     * @param {Number} [params.fillOpacity = 1] fillOpacity as a float between 0 and 1\n    */\n    constructor(params)\n    {\n        this._strokeWidth = getOrDefault(params, \"strokeWidth\", 1);\n        this._strokeColor = getOrDefault(params, \"strokeColor\", undefined);\n        this._strokeOpacity = getOrDefault(params, \"strokeOpacity\", 1);\n        this._fillColor = getOrDefault(params, \"fillColor\", undefined);\n        this._fillOpacity = getOrDefault(params, \"fillOpacity\", 1);\n\n        this._width = getOrDefault(params, \"width\", 100);\n        this._height = getOrDefault(params, \"height\", 100);\n\n        this._canvas = getOrExec(params, \"canvas\", () => {\n            let canvas = document.createElement(\"canvas\");\n            canvas.width = this._width;\n            canvas.height = this._height;\n            return canvas;\n        });\n\n        this._texture = new THREE.Texture(this._canvas);\n        this._texture.needsUpdate = true;\n        //avoid smoothing of pixels\n        this._texture.minFilter = THREE.NearestFilter;\n        this._texture.magFilter = THREE.NearestFilter;\n        this._texture.generateMipmaps = false;\n\n        this._canvasContext = this._canvas.getContext(\"2d\");\n\n        this.update();\n    }\n\n    /**\n    * Get this texture base canvas\n    * @method getCanvas\n    * @return canvas {Canvas}\n    */\n    getCanvas()\n    {\n        return this._canvas;\n    }\n\n    /**\n    * Get this texture base canvas context, to directly daw on it\n    * @method getCanvasContext\n    * @return canvasContext {CanvasContext}\n    */\n    getCanvasContext()\n    {\n        return this._canvasContext;\n    }\n\n    /**\n    * Fills the canvas with the given color\n    * @method fillWithColor\n    * @param {Color} color Mobilizing Color to use\n    */\n    fillWithColor(color)\n    {\n        this.setFillColor(color);\n        this.update();\n        this._canvasContext.fillRect(0,0, this._width, this._height);\n        this._texture.needsUpdate = true;\n    }\n\n    /**\n    * resizeCanvas resizes and refresh the canvasContext interally\n    * @method resizeCanvas\n    * @param {Number} width\n    * @param {Number} height\n    */\n    resizeCanvas(width, height)\n    {\n        this._canvas.width = width;\n        this._canvas.height = height;\n        this._canvasContext = this._canvas.getContext(\"2d\");\n    }\n\n    /**\n    * Get the canvas's width\n    * @method getWidth\n    * @return width {Number}\n    */\n    getWidth()\n    {\n        return this._width;\n    }\n\n    /**\n    * Get the canvas's height\n    * @method getHeight\n    * @return height {Number}\n    */\n    getHeight()\n    {\n        return this._height;\n    }\n\n    /**\n    * @method setStrokeColor\n    * @param {Color} c new stroke width\n    */\n    setStrokeColor(c)\n    {\n        this._strokeColor = c;\n    }\n\n    /**\n    * @method setFillColor\n    * @param {Color} c new stroke width\n    */\n    setFillColor(c)\n    {\n        this._fillColor = c;\n    }\n\n    /**\n    * @method setStrokeWidth\n    * @param {Number} w new stroke width\n    */\n    setStrokeWidth(w)\n    {\n        this._strokeWidth = w;\n    }\n\n    /**\n    * Updates the current canvas so that it reflects graphically all the changes done (colors, strokeWidth, etc.)\n    * Should be called after the changes has been given.\n    * @method update\n    */\n    update()\n    {\n        var tempStrokeColor, tempFillColor;\n\n        if(this._strokeColor)\n        {\n            tempStrokeColor = this.toRGBAColorString(this._strokeColor, this._strokeOpacity);\n        }\n        else\n        {\n            tempStrokeColor = \"rgba(0,0,0,0)\";\n        }\n        if(this._fillColor)\n        {\n            tempFillColor = this.toRGBAColorString(this._fillColor, this._fillOpacity);\n        }\n        else\n        {\n            tempFillColor = \"rgba(0,0,0,0)\";\n        }\n\n        debug.log(\"this._strokeColor\",this._strokeColor,\"this._fillColor\",this._fillColor);\n        debug.log(\"tempStrokeColor\",tempStrokeColor,\"tempFillColor\",tempFillColor);\n\n        this._canvasContext.strokeStyle = tempStrokeColor;\n        this._canvasContext.fillStyle = tempFillColor;\n        this._canvasContext.lineWidth = this._strokeWidth;\n\n        this._canvasContext.clearRect(0,0,this._width, this._height);\n        this._canvasContext.fill();\n        this._canvasContext.stroke();\n\n        this._texture.needsUpdate = true;\n    }\n\n    /**\n    * Draw an Mobilizing StyledText or StyledLetter in the canvas object and updates it.\n    * \n    * @method drawStyledText\n    * @param {StyledText || StyledLetter} text\n    */\n    drawStyledText(text)\n    {\n        text.path.draw(this._canvasContext);\n        this._texture.needsUpdate = true;\n    }\n\n    /**\n    * Draw an Image in the canvas object and updates it.\n    * \n    * @method drawImage\n    * @param {Image} image\n    * @param {Number} x x coordinate to start drawing (from upper-left corner)\n    * @param {Number} y y coordinate to start drawing (from upper-left corner)\n    * @param {Number} [width=canvas.width] the destination width to draw to\n    * @param {Number} [height=canvas.height]  the destination height to draw to\n    */\n    drawImage(image, x, y, width, height)\n    {\n        this._canvasContext.drawImage(image,\n                                      (x) ? x : 0,\n                                      (y) ? y : 0,\n                                      (width) ? width : this._width,\n                                      (height) ? height : this._height);\n\n        this._texture.needsUpdate = true;\n    }\n\n    /**\n    * toRGBAColorString makes a css rgba color from a Mobilizing Color and an alpha value (0:1)\n    * @private\n    * @method toRGBAColorString\n    * @param {Color} color\n    * @param {Number} alpha\n    */\n    toRGBAColorString(color,alpha)\n    {\n        var c = \"rgba(\"+Math.floor(color.r*255)+\",\"+Math.floor(color.g*255)+\",\"+Math.floor(color.b*255)+\",\"+ alpha +\")\";\n        return c;\n    }\n\n    /**\n    * CreateRect prepares a canvas and a path to draw a rectangle\n    * @static\n    * @method CreateRect\n    * @param {Object} params object of paramaters\n    * @param {Number} params.width\n    * @param {Number} params.height\n    * @param {Number} params.strokeWidth\n    * @param {Color} params.strokeColor\n    * @param {Color} params.fillColor\n    */\n    static CreateRect(params)\n    {\n        let width = getOrDefault(params, \"width\", 100);\n        let height = getOrDefault(params, \"height\", 100);\n        let strokeWidth = getOrDefault(params, \"strokeWidth\", 1);\n        let strokeColor = getOrDefault(params, \"strokeColor\", 0);\n        let fillColor = getOrDefault(params, \"fillColor\", 0);\n        let fillOpacity = getOrDefault(params, \"fillOpacity\", 1);\n        let strokeOpacity = getOrDefault(params, \"strokeOpacity\", 1);\n\n        let canvas = document.createElement(\"canvas\");\n        canvas.width = width; canvas.height = height;\n        let ctx = canvas.getContext(\"2d\");\n        ctx.lineWidth = strokeWidth;\n        ctx.beginPath();\n        ctx.lineTo(0,0);\n        ctx.lineTo(width,0);\n        ctx.lineTo(width,height);\n        ctx.lineTo(0,height);\n        ctx.lineTo(0,0);\n        ctx.closePath();\n\n        ctx.fill();\n        ctx.stroke();\n\n        //reset params\n        params = {};\n\n        params.canvas = canvas;\n        params.width = width;\n        params.height = height;\n        params.strokeWidth = strokeWidth;\n        params.strokeColor = strokeColor;\n        params.fillColor = fillColor;\n        params.fillOpacity = fillOpacity;\n        params.strokeOpacity = strokeOpacity;\n\n        let obj = new CanvasTexture(params);\n\n        return obj;\n    }\n\n    /**\n    * CreateCircle prepares a canvas and a path to draw a circle\n    * @static\n    * @method CreateCircle\n    * @param {Object} params object of paramaters\n    * @param {Number} params.radius\n    * @param {Number} params.strokeWidth\n    * @param {Color} params.strokeColor\n    * @param {Color} params.fillColor\n    */\n    static CreateCircle(params)\n    {\n        var radius = getOrDefault(params, \"radius\", 100);\n        var strokeWidth = getOrDefault(params, \"strokeWidth\", 1);\n        var strokeColor = getOrDefault(params, \"strokeColor\", 0);\n        var fillColor = getOrDefault(params, \"fillColor\", 0);\n        var fillOpacity = getOrDefault(params, \"fillOpacity\", 1);\n        var strokeOpacity = getOrDefault(params, \"strokeOpacity\", 1);\n\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = radius+strokeWidth; canvas.height = radius+strokeWidth;\n        var ctx = canvas.getContext(\"2d\");\n        ctx.strokeStyle = strokeColor ? strokeColor.getHexString() : undefined;\n        ctx.fillStyle = fillColor ? fillColor.getHexString() : undefined;\n        ctx.lineWidth = strokeWidth;\n        //ctx.rect(0,0,canvas.width,canvas.height);\n        ctx.beginPath();\n        ctx.arc(radius/2 + strokeWidth/2, radius/2 + strokeWidth/2, radius/2, 0, 2 * Math.PI, false);\n        ctx.closePath();\n\n        ctx.fill();\n        ctx.stroke();\n\n        document.body.appendChild(canvas);\n\n        //reset params\n        params = {};\n\n        params.canvas = canvas;\n        params.width = radius;\n        params.height = radius;\n        params.strokeWidth = strokeWidth;\n        params.strokeColor = strokeColor;\n        params.fillColor = fillColor;\n        params.fillOpacity = fillOpacity;\n        params.strokeOpacity = strokeOpacity;\n\n        var obj = new CanvasTexture(params);\n\n        return obj;\n    }\n\n}\n\n// module exports\nexport { CanvasTexture };","import {debug} from '../helpers/Debug';\n\nclass DOMNodeTexture\n{\n    /*\n     * DOMNodeTexture Class gives an easy way to inject HTML node into Mobilizing.js thanks to domvas.js, a small library that \"paint\" the content of an HTML element tree to a canvas. Mus be mapped to a Mesh via a Matirial texture field.\n     * Be warned that this class will give a result ONLY in FireFox and Chrome as Safari's security is too high for the painted canvas to be used as a WebGL Texture (security error is raised and can't be avoided)\n     *\n     * @class DOMNodeTexture\n     * @constructor\n     * @param {DOM Node} node the HTML node to be rasterized\n     */\n    constructor(node)\n    {\n        //this.context = context;\n\n        this.canvas = document.createElement(\"canvas\");\n        this.canvas.width = 512;\n        this.canvas.height = 512;\n\n        var ctx = this.canvas.getContext(\"2d\");\n        ctx.fillStyle = \"rgba(0,0,255,255)\";\n        ctx.lineTo(0,0);\n        ctx.lineTo(this.canvas.width,0);\n        ctx.lineTo(this.canvas.width,this.canvas.height);\n        ctx.lineTo(0,this.canvas.height);\n        ctx.lineTo(0,0);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        document.body.appendChild(this.canvas);\n\n        var img = new Image();\n        img.src = this.canvas.toDataURL(\"image/png\");\n        //img.crossOrigin = 'use-credentials';\n\n        var imgEl = document.createElement(\"img\");\n        imgEl.src = img.src;\n        document.body.appendChild(imgEl);\n\n        this.texture = new THREE.Texture(img);\n        this.texture.needsUpdate = true;\n        //add to the document so that css can be computed\n        document.body.appendChild(node);\n\n        //dom to image\n        var self = this;\n\n        domvas.toImage(node, function(){\n\n            ctx.drawImage(this, 0, 0);\n\n            img.src = self.canvas.toDataURL(\"image/png\");\n            imgEl.src = img.src;\n\n            //console.log(self, self.texture);\n            self.update();\n\n        });\n\n        //no need to keep the node in the document\n        //document.body.removeChild(node);\n    }\n\n    /*\n    * Updates the texture accroding to the HTML element.\n    * @private\n    * @method update\n    */\n    update(){\n        var img = new Image();\n        img.src = this.canvas.toDataURL();\n        this.texture.image = img;\n        this.texture.needsUpdate = true;\n    }\n\n    /*\n    * Helper static fonction to add an existing css style to an HTML element on the fly. You can define classes in a css sheet and  attribute them to any HTML Node with this method.\n    * @static\n    * @method addCSSToNode\n    * @param {DOM Node} el the HTML element to apply the CSS class to\n    * @param {String} cssName the CSS class name without the starting \".\"\n    */\n    static addCSSToNode(el, cssName){\n\n        var cssRules = document.styleSheets[0].cssRules;\n\n        if(cssRules){\n            for(var i=0; i<cssRules.length; i++){\n\n                var selector = cssRules[i].selectorText;\n\n                if(selector){\n                    if(selector.indexOf(cssName) > 0){\n                        //apply css\n                        el.classList.add(cssName);\n                        //debug.info(\"css\",cssName,\"to\",el);\n                        return;\n                    }\n                }else{\n                    //debug.info(\"no selectorText in this css\",cssRules[i]);\n                }\n            }\n        }\n        console.error(\"no css class of this name found. Remove the . if any in your argument\");\n    }\n\n}\n\n// module exports\nexport { DOMNodeTexture };","import {Texture} from './Texture';\nimport {debug} from '../helpers/Debug';\n\n/**\n * The ImageSequenceTexture represents a special kind of 2D Texture that is built from a sequence of pictures that you can play at a given rate and with a given play mode.\n *\n * @class ImageSequenceTexture\n */\n\nclass ImageSequenceTexture\n{\n    //var currentTime     = 0;\n    //var playing        = false;\n\n    /**\n    @method constructor\n    @param {Object} context The Mobilizing Context.\n    */\n    constructor(context)\n    {\n        this.currentTime    = 0;\n        this.playing        = false;\n        this.frameRate      = 10;\n        this.context        = context;\n        this.textures       = [];\n        //\n        this.sequenceMode   = 'FORWARD';\n        this.direction      = 1;\n        this.lapsToDo       = -1;\n        this.frameCount     = 0;\n        this.laps           = 0;\n        this.currentFrame   = 0;\n\n    }\n\n    /**\n    Load an image sequence from a wild card URL (the * sign will be replaced by an index starting from min and ending at max).\n\n    @method load\n    @param {String} urlbase wild card base URL. This can be a relative or absolute URL, and can be local or online, depending on your Browser cross domain policies.\n    @param {Integer} min starting index.\n    @param {Integer} max ending index.\n    */\n    load(urlbase, min, max)\n    {\n        for (var i=min;i<=max;++i)\n        {\n            var t = new Texture({context:this.context});\n            var file = urlbase.replace(\"*\", \"\"+i+\"\");\n            t.loadFromFile(file, true);\n            this.textures.push(t);\n        }\n        this.frameCount = this.textures.count;\n        this.enterFrame = 0;\n        this.currentFrame = 0;\n        this.outFrame = max;\n    }\n\n    /**\n    Set the starting frame of the current loaded sequence.\n    @method setEnterFrame\n    @param {Integer} frame starting frame.\n    */\n    setEnterFrame(frame)\n    {\n        if(frame >=0 && frame < this.frameCount){\n            this.enterFrame = frame;\n            this.currentFrame = this.enterFrame;\n        }else{\n            this.enterFrame = 0;\n            this.currentFrame = 0;\n            debug.log(\"ERROR enterFrame %i is out of sequence bounds - back to 0\",frame);\n        }\n    }\n\n    /**\n    Set the ending frame of the current loaded sequence.\n    @method setOutFrame\n    @param {Integer} frame ending frame.\n    */\n    setOutFrame(frame)\n    {\n        if(frame >=this.enterFrame && frame < this.frameCount)\n        {\n            this.outFrame = frame;\n        }\n        else\n        {\n            this.outFrame = this.frameCount-1;\n            debug.log(\"ERROR outFrame %i is out of sequence bounds - back to frameCount\",frame);\n        }\n    }\n\n    /**\n    Set the sequence playing mode.\n    @method setMode\n    @param {String} mode playing mode : \"FORWARD\", BACKWARD\", \"PINGPONG\", \"RANDOM\".\n    */\n    setMode(mode)\n    {\n        this.sequenceMode = mode;\n    }\n\n    /**\n    update the Image sequence. You have to call this once per frame for the Image sequence Texture to update and run its own logic.\n    @method update\n    */\n    update()\n    {\n        if (!this.playing)\n        {\n            return;\n        }\n        this.currentTime += this.context.Time.deltaTime;\n\n        if (this.currentTime > 1/this.frameRate)\n        {\n            this.currentTime -= 1/this.frameRate;\n            //this.currentFrame = Math.floor(this.currentTime*this.frameRate) % this.textures.length;\n            if(this.sequenceMode === 'FORWARD')\n            {\n                if(this.laps >= 0 && this.laps < this.lapsToDo)\n                {\n                    this.currentFrame++;\n                    this.currentFrame %= this.outFrame+1;\n\n                    if(this.currentFrame === 0)\n                    {\n                        this.currentFrame = this.enterFrame;\n                    }\n\n                    if(this.currentFrame === this.outFrame)\n                    {\n                        this.laps++;\n                    }\n                }\n                else if(this.lapsToDo < 0)\n                {\n                    this.currentFrame++;\n                    this.currentFrame %= this.outFrame+1;\n                    if(this.currentFrame === 0)\n                    {\n                        this.currentFrame = this.enterFrame;\n                    }\n                }\n                if(this.lapsToDo === this.laps)\n                {\n                    this.stop();\n                }\n                debug.log(\"currentFrame = \" + this.currentFrame);\n            }\n            else if(this.sequenceMode === 'BACKWARD')\n            {\n                if(this.laps >= 0 && this.laps < this.lapsToDo)\n                {\n                    this.currentFrame--;\n\n                    if(this.currentFrame < this.enterFrame)\n                    {\n                        this.currentFrame = this.outFrame;\n                    }\n                    if(this.currentFrame === this.enterFrame)\n                    {\n                        this.laps++;\n                    }\n\n                }\n                else if(this.lapsToDo < 0)\n                {\n                    this.currentFrame--;\n\n                    if(this.currentFrame < this.enterFrame)\n                    {\n                        this.currentFrame = this.outFrame;\n                    }\n                }\n\n                if(this.lapsToDo === this.laps)\n                {\n                    this.stop();\n                }\n                debug.log(\"currentFrame = \" + this.currentFrame);\n            }\n            else if(this.sequenceMode === 'PINGPONG')\n            {\n\n                if(this.laps >= 0 && this.laps < this.lapsToDo)\n                {\n                    this.currentFrame += this.direction;\n\n                    //protection against border over\n                    if(this.currentFrame < 0)\n                    {\n                        this.currentFrame = 0;\n                    }\n                    if(this.currentFrame > this.outFrame)\n                    {\n                        this.currentFrame = this.outFrame;\n                    }\n\n                    if(this.currentFrame >= this.outFrame)\n                    {\n                        this.direction = -this.direction;\n                        this.laps++;\n                    }\n                    if(this.currentFrame <= this.enterFrame)\n                    {\n                        this.direction = -this.direction;\n                        this.laps++;\n                    }\n                }\n                else if(this.lapsToDo < 0)\n                {\n                    this.currentFrame += this.direction;\n                    if(this.currentFrame >= this.outFrame)\n                    {\n                        this.direction = -this.direction;\n                    }\n                    if(this.currentFrame <= this.enterFrame)\n                    {\n                        this.direction = -this.direction;\n                    }\n                }\n\n                if(this.lapsToDo === this.laps)\n                {\n                    this.stop();\n                }\n                debug.log(\"currentFrame = \" + this.currentFrame);\n            }\n            else if(this.sequenceMode === 'RANDOM')\n            {\n                this.currentFrame = Math.floor(Math.random()*(this.outFrame-this.enterFrame)+this.enterFrame);\n                debug.log(\"currentFrame = \" + this.currentFrame);\n            }\n        }\n    }\n\n    /**\n    Get the current Image Sequence frame Texture.\n    @method getCurrentTexture\n    @return {Texture} the texture\n    */\n    getCurrentTexture()\n    {\n        return this.textures[this.currentFrame];\n    }\n\n    /**\n    play the Image Sequence.\n    @method play\n    */\n    play()\n    {\n        this.playing = true;\n    }\n\n    /**\n    pause the Image Sequence.\n    @method pause\n    */\n    pause()\n    {\n        this.playing = false;\n    }\n\n    /**\n    stop the Image Sequence. The image frame is resetted.\n    @method stop\n    */\n    stop()\n    {\n        this.currentTime    = 0;\n        this.currentFrame   = 0;\n        this.playing        = false;\n        this.laps           = 0;\n    }\n\n    /**\n    Loop the image sequence for a given number of iterations (once play() is called).\n    @method loop\n    @param {Number} count : -1 means infinity.\n    */\n    loop(count)\n    {\n        this.lapsToDo = count;\n    }\n\n\n}\n\n// module exports\nexport { ImageSequenceTexture };","import * as THREE from 'three';\nimport {getOrDefault} from \"../helpers/Misc\";\n\nclass RenderTexture\n{\n    /**\n     * RenderTexture are 3D camera rendered bitmap pictures loaded in the graphic card memory so they can be mapped on a geometry surface. Usually, texture are mapped through a Material. Keep in mind that WebGL, as an implementation of OpenGL, shares the same kind of limitations : textures sources should be power of 2 (even if here, Three.js is doing the job of resizing for you if they're not).\n     *\n     * @class RenderTexture\n     * @constructor\n     * @param {Object} params the parameters object\n     * @param {Number} params.width the width of this texture\n     * @param {Number} params.height the height of this texture\n     */\n    constructor(params)\n    {\n        this._width = getOrDefault(params, \"width\", 512);\n        this._height = getOrDefault(params, \"height\", 512);\n        this._engineTexture = new THREE.WebGLRenderTarget(this._width,\n                                                          this._height,\n                                                          {minFilter: THREE.LinearFilter,\n                                                           magFilter: THREE.NearestFilter,\n                                                           format: THREE.RGBFormat}\n                                                         );\n        this._texture = this._engineTexture.texture;\n    }   \n\n    getTexture()\n    {\n        return this._engineTexture.texture;\n    }\n}\n\n// module exports\nexport { RenderTexture };","import {getOrDefault} from '../helpers/Misc';\nimport {Device} from '../helpers/Device';\nimport {CanvasTexture} from './CanvasTexture';\nimport {debug} from '../helpers/Debug';\n\nclass VideoTexture\n{\n    /**\n     * VideoTexture Class give the possibility to use a movie file directly as a texture. Therefore, this class contains some movie media fonctions to manage time (play, pause, stop, etc). The texture must be mapped on an Mesh via a Material (setTexture()).\n     *\n     * @class VideoTexture\n     * @constructor\n     * @param {Object} params params The parameters object\n     * @param {Video} params.video the html5 video object to use for this VideoTexture\n     * @param {Number} [params.fps = 30] the fps to use for this video playback, used only with iOS devices. NB : this parameter will not change the playback speed of the video, it will only affect it's picture update frequency.\n     * @param {Boolean} [params.loop = false] whether the video should loop after playback end\n     * @param {Boolean} [params.autoPlay = false] whether the video should play at construction\n     * \n     * @example\n     *    //TODO\n     */\n    constructor(params)\n    {\n        this._video = getOrDefault(params, \"video\", undefined);\n        this._loop = getOrDefault(params, \"loop\", false);\n        this._autoPlay = getOrDefault(params, \"autoPlay\", false);\n        this._fps = getOrDefault(params, \"fps\", 30);\n\n        //special treatment for iOS as we can't access the video without an automatic fullscreen\n        this._isIOS = (Device.getOS() === \"iOS\");\n\n        this._isPlaying = false;\n        this._bufferedPourcent = {start:0,end:0};\n\n        //iOS specifics, we must create a canvas to render in or we'll go fullscreen\n        if(this._isIOS)\n        {\n            this._autoPlay = false;//no autoplay on iOS\n            this._videoCanvasTexture = new CanvasTexture({width:this._video.videoWidth,\n                                                          height:this._video.videoHeight});\n        }\n        //to have some events to work with\n        this._video.addEventListener(\"progress\", this.onLoadProgess.bind(this));\n        this._video.addEventListener(\"ended\", this.onVideoEnded.bind(this));\n\n        if(!this._isIOS)\n        {\n            this._texture = new THREE.Texture( this._video );\n            this._texture.generateMipmaps = false;\n            this._texture.minFilter = THREE.NearestFilter;\n            this._texture.magFilter = THREE.NearestFilter;\n        }\n        else\n        {\n            this._texture = this._videoCanvasTexture._texture;\n        }\n\n        if(this._autoPlay && !this._isIOS)\n        {\n            this.play();\n        };\n    }\n\n    /**\n    * Defines a \"load progress\" behavior. User can access the result of the progress through the bufferedPourcent property (videoTexture.bufferedPourcent) which is an object constructed like this : this._bufferedPourcent = {start:<Number>, end: <Number>}. FIXME : should map to the orginal list produced by HTML5 TimeRange object\n    * @private\n    * @method onVideoSrcLoaded\n    * @param {Event} e\n    */\n    onLoadProgess(e)\n    {\n        var timeRange = this.getBuffered();\n        debug.log(\"progress\",timeRange,this.getDuration());\n\n        if(timeRange)\n        {\n            if(timeRange.length >= 1)\n            {\n                this._bufferedPourcent = {start:this.getBuffered().start(0) * 100 / this.getDuration(),\n                                          end:this.getBuffered().end(0)* 100 / this.getDuration()};\n            }\n        }\n    }\n\n    /**\n    * Ended event to manage loop playback\n    * @private\n    * @method onVideoEnded\n    * @param {Event} e\n    */\n    onVideoEnded(e)\n    {\n        if(this._loop)\n        {\n            this.play();\n        }\n        else\n        {\n            this.stop();\n        }\n    }\n\n    /**\n    * Set Loop on or off for this video\n    * @method setLoop\n    * @param {Boolean} val\n    */\n    setLoop(val)\n    {\n        this._loop = val;\n    }\n\n    /**\n    * updates the video texture, should be done everytime an update is desired (i.e. every frame)\n    * @method update\n    */\n    update()\n    {\n        //if ( this._video.readyState === this._video.HAVE_ENOUGH_DATA || this._video.readyState === this._video.HAVE_METADATA )\n        if (this._video.readyState >= this._video.HAVE_FUTURE_DATA)\n        {\n            if(this._isIOS && this._isPlaying){\n\n                var time = Date.now();\n                var elapsed = (time - this.lastTime) / 1000;\n\n                if(elapsed >= (1 / this._fps) )\n                {\n\n                    this._video.currentTime = this._video.currentTime + elapsed;\n                    this.lastTime = time;\n\n                    this._videoCanvasTexture.drawImage(this._video);\n                    // Resync audio and video if they drift more than 300ms apart\n                    /* if(this.audio && Math.abs(this.audio.currentTime - this._video.currentTime) > 0.3){\n                        this.audio.currentTime = this._video.currentTime;\n                    }*/\n                }\n            }\n\n            if (!this._isIOS && this._texture)\n            {\n                this._texture.needsUpdate = true;\n            }\n        }\n    }\n\n    /**\n    * Play the video\n    * @method play\n    */\n    play()\n    {\n        if(!this._isIOS)\n        {\n            this._video.play();\n        }\n        else\n        {\n            this.lastTime = Date.now();\n        }\n        this._isPlaying = true;\n    }\n\n    /**\n    * Pause the video\n    * @method pause\n    */\n    pause()\n    {\n        this._video.pause();\n        this._isPlaying = false;\n    }\n\n    /**\n    * Stop the video\n    * @method stop\n    */\n    stop()\n    {\n        this._video.pause();\n        this._video.currentTime = 0;\n        this._isPlaying = false;\n    }\n\n    /**\n    * Get playing state\n    * @method getIsPlaying\n    * @return {Boolean} playing state\n    */\n    getIsPlaying()\n    {\n        return this._isPlaying;\n    }\n\n    /**\n    * Gets the current time of this video\n    * @method getCurrentTime\n    * @return {Number} the current time of this video in seconds\n    */\n    getCurrentTime()\n    {\n        return this._video.currentTime;\n    }\n    /**\n    * Gets the current buffered part of this video\n    * @method getBuffered\n    * @return {Object} the current buffered part as a TimeRange Object {length:Number, start:Number, end:Number}\n    */\n    getBuffered()\n    {\n        return this._video.buffered;\n    }\n\n    /**\n    * Set the current time of this video\n    * @method setCurrentTime\n    * @param {Number} t the current time (in second) to\n    */\n    setCurrentTime(t)\n    {\n        if(this._video.currentTime < this._video.duration){\n            this._video.currentTime = t;\n        }else{\n            this._video.currentTime = this._video.duration;\n        }\n    }\n\n    /**\n    * Get the duration of the video file in seconds\n    * @method getDuration\n    * @return {Number} duration\n    */\n    getDuration()\n    {\n        return this._video.duration;\n    }\n\n    /**\n    * Set the playback rate of the video. See https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/playbackRate for more details\n    * @method setPlaybackRate\n    * @param {Number} r the playback rate\n    */\n    setPlaybackRate(r)\n    {\n        this._video.playbackRate = r;\n    }\n\n    /**\n    * Get the current playback rate\n    * @method getPlaybackRate\n    * @return {Number} the playback rate\n    */\n    getPlaybackRate()\n    {\n        return this._video.playbackRate;\n    }\n\n    /**\n    * Get the current video width\n    * @method getWidth\n    * @return {Number} the video width\n    */\n    getWidth()\n    {\n        return this._video.videoWidth;\n    }\n\n    /**\n    * Get the current video height\n    * @method getHeight\n    * @return {Number} the video height\n    */\n    getHeight()\n    {\n        return this._video.videoHeight;\n    }\n}\n\n// module exports\nexport { VideoTexture };","import {getOrDefault} from '../helpers/Misc';\nimport {debug} from '../helpers/Debug';\nimport {Component} from '../Component';\n\nclass Timer extends Component\n{\n    /**\n    *A timer is a time manager that gives the possibily to schedule a function every <i>n</i> ms.\n    *\n    *@class Timer\n    *@constructor\n    *@param {Object} params Config parameters\n    *@param {Number} params.interval the number of millisecond to wait before the next timer's fire\n    *@param {Function} params.callback the function to fires every time the timer's interval is passed. Can be an anonymous fonction or not.\n    *@example\n    *    var myTimer = new Timer({interval: 200, callback: function(){\n    *                    //your code here\n    *                } });\n    *    myTimer.start();\n    */\n    constructor(params)\n    {\n        super(params);\n\n        debug.log(\"constructor post super\");\n        \n        this.interval = getOrDefault(params, \"interval\", 100);//milliseconds\n        this.callback = getOrDefault(params, \"callback\", null);//this is a function\n    }\n\n    /**\n    * Setup the timer with the current time\n    * \n    * @method setup\n    */\n    setup(){\n        this.startTime = new Date().getTime();\n        this.currentTime = new Date().getTime();\n    }\n\n    /**\n    * Activate the component\n    *\n    * @method on\n    */\n    /*on(){\n        super.on();\n        \n    }*/\n\n    /**\n    * Deactivate the component\n    *\n    * @method off\n    */\n    off(){\n        super.off();\n\n        this.stop();\n    }\n    \n    /**\n    * Starts the timer\n    * \n    * @method start\n    */\n    start(){\n        if(this._active){\n            this.startTime = new Date().getTime();\n            this.currentTime = new Date().getTime();\n        }else{\n            debug.info(\"component is off\");\n        }\n    }\n    \n    /**\n    * Starts the timer\n    * \n    * @method stop\n    */\n    stop(){\n        this.startTime = 0;\n        this.currentTime = 0;\n    }\n    /**\n    * Updates the timer's state\n    * \n    * @method update\n    */\n    update(){\n\n        if(this._active){\n\n            this.currentTime = new Date().getTime();\n            var tempInterval = this.currentTime - this.startTime;\n\n            if(tempInterval >= this.interval){\n                this.callback();\n                this.reset();\n            }\n        }\n        \n    }\n\n    /**\n    * Resets the timer\n    * @method reset\n    */\n    reset(){\n        this.startTime = new Date().getTime();\n        this.currentTime = new Date().getTime();\n    }\n}\n\n/*window.requestAnimationFrame = window.requestAnimationFrame\n                            || window.mozRequestAnimationFrame\n                            || window.webkRequestAnimationFrame\n                            || window.msRequestAnimationFrame;*/\n\n\n// module exports\nexport { Timer };","import {_Math} from '../helpers/Math';\nimport {debug} from '../helpers/Debug';\nimport {Component} from '../Component';\nimport {getOrDefault} from '../helpers/Misc';\n\nclass NTP extends Component\n{\n    /*\n    * The NTP class provides methods to control time synchronization related operations.\n    * \n    * @example\n    *    //TODO\n    *\n    * @class NTP\n    * @constructor\n    */\n    constructor(params)\n    {\n        super(params);\n\n        this._startTime = getOrDefault(params, \"startTime\",0);\n        this._timeScale = getOrDefault(params, \"scale\",1);\n        this._smoothingFactor = getOrDefault(params, \"smoothingFactor\", 0.9);\n        this._NTPEnabled = getOrDefault(params, \"NtpEnabled\", false);\n\n        this._currentTime = 0;\n        this._deltaTime = 0;\n        this._timeOffsetSmooth = 0;\n        this._lastTime = new Date().getTime();\n\n        this._offset = 0;\n    }\n\n    /**\n    * Setup for this time instance\n    * \n    * @method setup\n    */\n    setup()\n    {\n        this._lastTime = new Date().getTime();\n\n        this._offset = this._lastTime - this._startTime;\n\n        if (this._NTPEnabled)\n        {\n            var socket = new WebSocket('ws://ntp.surexposition.mobi:8000/');\n            ntp_websockets.init(socket);//how to import this vendor ?\n            //debug.log(\"WebSocket init\");\n            setInterval(function(){\n                this._offset = ntp_websockets.offset();\n            }, 1000);\n        }\n    }\n\n\n    start()\n    {\n        this._startTime = new Date().getTime();\n    }\n\n    pause()\n    {\n\n    }\n\n    reset()\n    {\n        this._startTime = 0;\n    }\n\n\n    /**\n    * updates this time instance\n    * \n    * @method update\n    */\n    update()\n    {\n        if(this.getStatus())//the component must be on, else we \"stop\" the time\n        {\n            let currentTime = new Date().getTime();\n            this._deltaTime = (currentTime - this._currentTime)/1000;\n            this._currentTime = currentTime;\n        }\n    }\n\n    /**\n    * Set the current timeScale, useful to slower time down\n    * \n    * @method setTimeScale\n    * @param {Number} scale\n    */\n    setTimeScale(scale)\n    {\n        this._timeScale = scale;\n    }\n\n    /**\n    * Get the current timeScale\n    * \n    * @method getTimeScale\n    * @return {Number} scale\n    */\n    getTimeScale()\n    {\n        return this._timeScale;\n    }\n\n    /**\n    * Get the current timeDelta (difference of time between 2 frames) at the current timeScale\n    * \n    * @method getDelta\n    * @return {Number} the current timeDelta at the current timeScale\n    */\n    getDelta()\n    {\n        return this._deltaTime * this._timeScale;\n    }\n\n    /**\n    * Gets the current Time object's time\n    * \n    * @method getTime\n    * @return {Number} the current time\n    */\n    getTime()\n    {\n        return (this._currentTime + this._offset) * this._timeScale;\n    }\n\n    /**\n    * Gets a smoothed time, useful to avoid hard transitions when time passed faster than the computing time.\n    * \n    * @method getTimeSmooth\n    * @return {Number} the current time smoothed with an offset\n    */\n    getTimeSmooth()\n    {\n        this._timeOffsetSmooth = this._timeOffsetSmooth * this._startTime + this._offset * (1-this._startTime);\n        return (this._currentTime + this._timeOffsetSmooth) * this._timeScale;\n    }\n\n    /**\n    * Gets the current Time object underlying Date Object time\n    * \n    * @method getDateTime\n    * @return {Number} the current Date Object raw getTime() result\n    */\n    getDateTime()\n    {\n        return new Date().getTime();\n    }\n\n    /**\n    * Resync the current Time object with the given ntp server\n    * \n    * @method resync\n    */\n    resync()\n    {\n        if (this._NTPEnabled)\n        {\n            ntp_websockets.resync();\n        }\n    }\n}\n\n// module exports\nexport { NTP };\n","import {Component} from '../Component';\nimport {getOrDefault, getOrExec} from '../helpers/Misc';\nimport {Pointer} from \"../helpers/Pointer\";\nimport {Mouse} from \"../input/Mouse\";\n\nconst EVT_PRESS = 'press';\nconst EVT_RELEASE = 'release';\n\nclass Clickable extends Component\n{\n    /**\n    * Makes a Mesh clickable\n    *\n    * @class Clickable\n    * @constructor\n    * @param {Object} params parameters object\n    * @param {Pointer} params.pointer\n    * @param {Camera} params.camera\n    * @param {onPress} params.onPress\n    * @param {onRelease} params.onRelease\n    * @param {onEnter} params.onEnter\n    * @param {onLeave} params.onLeave\n    */\n    constructor(params)\n    {\n        super(params);\n\n        this.pointer = getOrDefault(params, \"pointer\", undefined);\n        this.onPress = getOrDefault(params, \"onPress\", function(){});\n        this.onRelease = getOrDefault(params, \"onRelease\", function(){});\n        this.onEnter = getOrDefault(params, \"onEnter\", function(){});\n        this.onLeave = getOrDefault(params, \"onLeave\", function(){});\n\n        this.camera = params.camera;\n        this.target = getOrDefault(params, \"target\", undefined);\n\n        this.picked = false;\n        this.hovered = false;\n    }\n\n    /**\n    * Setup for this clickable instance\n    * \n    * @method setup\n    */\n    setup()\n    {\n        super.setup();\n\n        let context = this.getContext();\n\n        if(!this.pointer)\n        {\n            let mouse = new Mouse();\n            context.addComponent(mouse);\n            mouse.setup();\n            mouse.on();\n\n            this.pointer = new Pointer();\n            this.pointer.add(mouse);\n            context.addComponent(this.pointer);\n            this.pointer.setup();\n            this.pointer.on();\n            //console.log(mouse,context);\n        }\n\n        this.pointer.events.on(\"on\", event => {\n\n            let pick = this.target.transform.pick(this.camera, event.x, event.y);\n\n            if(pick)\n            {\n                this.picked = true;\n                this.onPress();\n            }\n            else\n            {\n                this.picked = false;\n            }\n        });\n\n        this.pointer.events.on(\"off\", event => {\n\n            let pick = this.target.transform.pick(this.camera, event.x, event.y);\n\n            if(this.picked === true)\n            {\n                this.onRelease();\n            }\n\n        });\n\n        this.pointer.events.on(\"moved\",event => {\n\n            let pick = this.target.transform.pick(this.camera, event.x, event.y);\n\n            if(pick)\n            {\n                this.picked = true;\n                if(!this.hovered)\n                {\n                    this.onEnter();\n                    this.hovered = true;\n                }\n            }\n            else\n            {\n                if(this.picked) //avoid useless recall\n                {\n                    this.onLeave();\n                    this.hovered = false;\n                    this.picked = false;\n                }\n            }\n        });\n    }\n\n}\n\n// module exports\nexport { Clickable };\n","import {getOrDefault} from '../helpers/Misc';\nimport {Mesh} from '../shape/Mesh';\nimport {Color} from '../core/Color';\nimport {EventEmitter} from '../helpers/EventEmitter';\nimport {Vector3} from '../core/Vector3';\nimport {Vector2} from '../core/Vector2';\nimport {Matrix4} from '../core/Matrix4';\nimport {debug} from '../helpers/Debug';\nimport {Pointer} from '../helpers/Pointer';\nimport {Component} from '../Component';\nimport {Clickable} from './Clickable';\nimport {_Math} from '../helpers/Math';\nimport {RichText} from \"../text/RichText\";\nimport {Texture} from \"../texture/Texture\";\n\nconst BT_STATE_PRESSED = \"pressed\";\n\nconst BT_STATE_RELEASED = \"released\";\n\nclass Button extends Component\n{\n    /**\n     * A Button is a special kind of 3D object that is clickable and that you can use to build Graphical User Interfaces (GUI).\n     *\n     * @class Button\n     * @constructor\n     * @param {Object} params parameters object.\n     * @param {Camera} params.camera the camera used for picking.\n     * @param {String} params.text text to render (can be empty).\n     * @param {Number} params.textSize the text size\n     * @param {Object} params.font font to use.\n     * @param {Number} params.width width in pixels.\n     * @param {Number} params.height height in pixels.\n     * @param {Number} params.cutOff the size of the cutOff\n     * @param {Color} params.strokeColor\n     * @param {Color} params.fillColor\n     * @param {Color} params.pressFillColor\n     * @param {Color} params.hoverFillColor\n     * @param {Function} [params.onPress]\n     * @param {Function} [params.onRelease]\n     * @param {Function} [params.onEnter]\n     * @param {Function} [params.onLeave]\n     * @param {URL} [params.fontURL] url for the regular font file\n     * @param {URL} [params.fontItalicURL] url for the italic font file\n     * @param {URL} [params.fontBoldURL] url for the bold font file\n     * @param {URL} [params.fontBoldItalicURL] url for the bold-italic font file\n     * @example\n     *     //TODO\n     */\n    constructor(params)\n    {\n        super(params);\n\n        this.camera = params.camera;// requiered\n        this.pointer = getOrDefault(params, \"pointer\", undefined);\n        this.mesh = getOrDefault(params, \"mesh\", undefined);\n        this.width = getOrDefault(params, \"width\", 3);\n        this.height = getOrDefault(params, \"height\", 1);\n        this.radius = getOrDefault(params, \"radius\", undefined);\n        this.sideCount = getOrDefault(params, \"sideCount\", 6);\n\n        this.cutOff = getOrDefault(params, \"cutOff\", this.height / 3);\n        this.strokeWidth = getOrDefault(params, \"strokeWidth\", 0.1);\n\n        this.strokeColor = getOrDefault(params, \"strokeColor\", Color.mobilizing.clone());\n        this.fillColor = getOrDefault(params, \"fillColor\", Color.white.clone());\n        this.pressFillColor = getOrDefault(params, \"pressFillColor\", Color.mobilizing.clone());\n        this.hoverFillColor = getOrDefault(params, \"hoverFillColor\", Color.mobilizingAlternate.clone());\n\n        this.onPress = getOrDefault(params, \"onPress\", function(){});\n        this.onRelease = getOrDefault(params, \"onRelease\", function(){});\n        this.onEnter = getOrDefault(params, \"onEnter\", function(){});\n        this.onLeave = getOrDefault(params, \"onLeave\", function(){});\n\n        this._fontURL = getOrDefault(params, \"fontURL\", \"fonts/Raleway-Regular.ttf\");\n        this._fontItalicURL = getOrDefault(params, \"fontItalicURL\", \"fonts/Raleway-Regular-Italic.ttf\");\n        this._fontBoldURL = getOrDefault(params, \"fontBoldURL\", \"fonts/Raleway-Bold.ttf\");\n        this._fontBoldItalicURL = getOrDefault(params, \"fontBoldItalicURL\", \"fonts/Raleway-Bold-Italic.ttf\");\n\n        this.text = getOrDefault(params, \"text\", undefined);\n        this.textSize = getOrDefault(params, \"textSize\", 40);\n        //main node\n        this.root = new Mesh({primitive: \"node\"});\n\n        this.transform = this.root.transform;\n\n        //to get the state\n        this.state = BT_STATE_RELEASED;\n        \n        //create the texture from text\n        if(this.text)\n        {\n            //FIXME -> quand on a un radius pour le poly faire une texture carré\n            let canvasWidth;\n            if(this.width < 100)\n            {\n                canvasWidth = 512;\n            }\n            else\n            {\n                canvasWidth = this.width;\n            }\n\n            let canvasHeight;\n            if(this.height < 100)\n            {\n                canvasHeight = canvasWidth / (this.width / this.height);\n            }\n            else\n            {\n                canvasHeight = this.height;\n            }\n\n            if(this.radius)\n            {\n                let twoSquareThree = 2 / Math.sqrt(3);\n                canvasHeight = canvasWidth * twoSquareThree;\n            }\n\n            //label normal state\n            let richText = new Mobilizing.RichText({width: canvasWidth,\n                                                    height: canvasHeight,\n                                                    text: this.text,\n                                                    marginTop:canvasHeight/2 - this.textSize/2,\n                                                    backgroundColor: Color.transparent.makeRGBAStringWithAlpha(0),\n                                                    textColor: Color.mobilizing.clone(),\n                                                    textAlign: \"center\",\n                                                    textSize: this.textSize,\n                                                    fontURL: this._fontURL,\n                                                    fontItalicURL: this._fontItalicURL,\n                                                    fontBoldURL: this._fontBoldURL,\n                                                    fontBoldItalicURL: this._fontBoldItalicURL});\n\n            //label pressed state\n            let pressRichText = new Mobilizing.RichText({width: canvasWidth,\n                                                         height: canvasHeight,\n                                                         text: this.text,\n                                                         marginTop:canvasHeight/2 - this.textSize/2,\n                                                         backgroundColor: Color.transparent.makeRGBAStringWithAlpha(0),\n                                                         textColor: Color.white.clone(),\n                                                         textAlign: \"center\",\n                                                         textSize: this.textSize,\n                                                         fontURL: this._fontURL,\n                                                         fontItalicURL: this._fontItalicURL,\n                                                         fontBoldURL: this._fontBoldURL,\n                                                         fontBoldItalicURL: this._fontBoldItalicURL});\n\n            this.textTexture = new Texture({canvas: richText.getCanvas()});\n            this.pressTextTexture = new Texture({canvas: pressRichText.getCanvas()});\n            /*document.body.appendChild(richText.getCanvas());\n            richText.getCanvas().style.position = \"absolute\";\n            richText.getCanvas().style.top = \"0px\";\n            richText.getCanvas().style.left = \"0px\";*/\n        }\n        //construct the default mesh & stroke\n        if(!this.mesh)\n        {\n            this.generateDefaultMesh();\n        }\n\n        this.root.transform.addChild(this.mesh.transform);\n    }\n\n    setup()\n    {\n        super.setup();\n        let context = this.getContext();\n\n        this.clickable = new Clickable({camera: this.camera,\n                                        target: this.mesh,\n                                        pointer: this.pointer,\n                                        onPress: () =>\n                                        {\n                                            if(this._active)\n                                            {\n                                                this.mesh.material.setColor(this.pressFillColor);\n                                                if(this.pressTextTexture)\n                                                {\n                                                    this.texturedMesh.material.setTexture(this.pressTextTexture);\n                                                }\n                                                this.onPress();\n                                                this.state = BT_STATE_PRESSED;\n                                            }\n                                        },\n\n                                        onRelease: () =>\n                                        {\n                                            if(this._active)\n                                            {\n                                                this.mesh.material.setColor(this.hoverFillColor);\n                                                if(this.textTexture)\n                                                {\n                                                    this.texturedMesh.material.setTexture(this.textTexture);\n                                                }\n                                                this.onRelease();\n                                                this.state = BT_STATE_RELEASED;\n                                            }\n                                        },\n\n                                        onEnter: () =>\n                                        {\n                                            if(this._active)\n                                            {\n                                                this.mesh.material.setColor(this.hoverFillColor);\n                                                this.onEnter();\n                                            }\n                                        },\n\n                                        onLeave: () =>\n                                        {\n                                            if(this._active)\n                                            {\n                                                this.mesh.material.setColor(this.fillColor);\n                                                if(this.textTexture)\n                                                {\n                                                    this.texturedMesh.material.setTexture(this.textTexture);\n                                                }\n                                                this.onLeave();\n                                            }\n                                        }\n                                       });\n        context.addComponent(this.clickable);\n        this.clickable.setup();\n        this.on();\n    }\n\n    /**\n    * Activate the button\n    * @method on\n    */\n    on()\n    {\n        super.on();\n        this.mesh.material.setOpacity(1);\n        this.strokeMesh.material.setOpacity(1);\n        if(this.text)\n        {\n            this.texturedMesh.material.setOpacity(1);\n        }\n    }\n    /**\n    * deactivate the button, set its opacity to 30 %\n    * @method off\n    */\n    off()\n    {\n        super.off();\n        this.mesh.material.setOpacity(.3);\n        this.strokeMesh.material.setOpacity(.3);\n        if(this.text)\n        {\n            this.texturedMesh.material.setOpacity(.3);\n        }\n    }\n    \n    update()\n    {\n        \n    }\n\n    /**\n    * Generate the vertices and meshes for the default button. Called internally only\n    * @private\n    * @method generateDefaultMesh\n    */\n    generateDefaultMesh()\n    {\n        //vertices\n        let w = this.width/2;\n        let h = this.height/2;\n        //this.cutOff = h/2;\n        //let cutOffXOffset = 0;\n\n        this.vertex = [];\n\n        //manage special case of squared size : will be an hexagon!\n        if(this.radius)\n        {\n\n            let parts = this.sideCount;\n            let radius = this.radius;\n\n            for(let i=0; i<parts; i++){\n                //arc(a, b, c, d, start, stop, mode)\n                this.vertex.push(\n                    new Vector2( Math.cos(_Math.degToRad(360/parts/2) + (Math.PI*2/parts) * i) * radius,\n                                Math.sin(_Math.degToRad(360/parts/2) + (Math.PI*2/parts) * i) * radius)\n                )\n            }\n        }\n        else\n        {\n            this.vertex.push(new Vector2(-w + this.cutOff, h));\n            this.vertex.push(new Vector2( w - this.cutOff, h));\n            this.vertex.push(new Vector2( w, h - this.cutOff));\n            this.vertex.push(new Vector2( w, -h + this.cutOff));\n            this.vertex.push(new Vector2( w - this.cutOff, -h));\n            this.vertex.push(new Vector2(-w + this.cutOff, -h));\n            this.vertex.push(new Vector2(-w, -h + this.cutOff));\n            this.vertex.push(new Vector2(-w, h - this.cutOff));\n        }\n\n        //console.log(this.vertex);\n\n        this.topLeftIndex = 0;\n        this.topRightIndex = 1;\n        this.bottomRightIndex = 4;\n        this.bottomLeftIndex = 5;\n\n        this.mesh = new Mesh({primitive: \"custom\"});\n        this.mesh.generateFillMesh(this.vertex);\n        this.mesh.material.setTransparent(true);\n\n        if(this.text)\n        {\n            this.texturedMesh = new Mesh({primitive: \"custom\"});\n            this.texturedMesh.generateFillMesh(this.vertex);\n            this.texturedMesh.material.setTransparent(true);\n            this.texturedMesh.material.setTexture(this.textTexture);\n            this.root.transform.addChild(this.texturedMesh.transform);\n        }\n\n        this.strokeMesh = Mesh.generateStrokeMesh(this.mesh, this.strokeWidth);\n        this.strokeMesh.material.setColor(this.strokeColor);\n        this.strokeMesh.material.setTransparent(true);\n\n        this.root.transform.addChild(this.strokeMesh.transform);\n    }\n\n    /**\n    * Adapt a corner of the shape, for grouping buttons together\n    * @method adaptCorner\n    * @param {String} mode cutOff, straight\n    * @param {String} corner topLeft, topRight, bottomRight,bottomLeft\n    */\n    adaptCorner(mode, corner)\n    {\n        if(this.width !== this.height)\n        {\n            switch(corner)\n            {\n                case \"topLeft\" :\n\n                    var vertex = this.mesh._geometry.vertices[this.topLeftIndex];\n                    if(mode === \"straight\")\n                    {\n                        vertex.x = -this.width/2;\n                    }\n                    else if(mode === \"cutOff\")\n                    {\n                        vertex.x = -this.width/2 + this.cutOff;\n                    }\n                    this.mesh.updateMesh();\n                    this.regenerateStrokeGeometry(this.mesh);\n\n                    break;\n\n                case \"topRight\" :\n\n                    var vertex = this.mesh._geometry.vertices[this.topRightIndex];\n                    if(mode === \"straight\")\n                    {\n                        vertex.x = this.width/2;\n                    }\n                    else if(mode === \"cutOff\")\n                    {\n                        vertex.x = this.width/2 - this.cutOff;\n                    }\n                    this.mesh.updateMesh();\n                    this.regenerateStrokeGeometry(this.mesh);\n\n                    break;\n\n                case \"bottomRight\" :\n\n                    var vertex = this.mesh._geometry.vertices[this.bottomRightIndex];\n                    if(mode === \"straight\")\n                    {\n                        vertex.x = this.width/2;\n                    }\n                    else if(mode === \"cutOff\")\n                    {\n                        vertex.x = this.width/2 - this.cutOff;\n                    }\n                    this.mesh.updateMesh();\n                    this.regenerateStrokeGeometry(this.mesh);\n\n                    break;\n\n                case \"bottomLeft\" :\n\n                    var vertex = this.mesh._geometry.vertices[this.bottomLeftIndex];\n                    if(mode === \"straight\")\n                    {\n                        vertex.x = -this.width/2;\n                    }\n                    else if(mode === \"cutOff\")\n                    {\n                        vertex.x = -this.width/2 + this.cutOff;\n                    }\n                    this.mesh.updateMesh();\n                    this.regenerateStrokeGeometry(this.mesh);\n\n                    break;\n            }\n            this.mesh.generateFlatUVs();\n        }\n    }\n\n    /**\n    * regenerate the geometry of the mesh for further update\n    * @method regenerateStrokeGeometry\n    * @private\n    * @param {Mesh} the mesh to regenerate the stroke for \n    */\n    regenerateStrokeGeometry(mesh)\n    {\n        this.strokeMesh.updateStroke(mesh, this.strokeWidth);\n    }\n\n    /**\n    * Can be used to simulate a pressed event when necessary (i.e. when a keyboard event should modify the button state).\n    *\n    * @method fakePress\n    */\n    fakePress()\n    {\n        this.fakePressed = true;\n    }\n\n    /*update()\n    {\n\n    }*/\n\n}\n\n// module exports\nexport { Button };","import {getOrDefault} from '../helpers/Misc';\nimport {Mesh} from '../shape/Mesh';\nimport {Color} from '../core/Color';\nimport {EventEmitter} from '../helpers/EventEmitter';\nimport {Vector3} from '../core/Vector3';\nimport {debug} from '../helpers/Debug';\nimport {Component} from '../Component';\nimport {_Math} from '../helpers/Math';\nimport {Button} from './Button';\n\nclass ButtonGroup extends Component\n{\n    /**\n     * ButtonGroup organize an array of Buttons with different layout patterns. Make it easier to build menu.\n     *\n     * @class ButtonGroup\n     * @constructor\n     * @param {Object} params Parameters object.\n     * @param {Number} params.row for grid based layout, the maximum nb of rows\n     * @param {Number} params.columns for grid based layout, the maximum nb of columns\n     * @param {String} params.mode layout mode. One of grid, honeycomb\n     * @param {Array} params.buttons The list of buttons to layout.\n     * \n     * @example\n     *     //TODO\n     */\n    constructor(params)\n    {\n        /*\n         * index d'élement => position\n         * plusieurs implémentations de positionement\n         * - grille simple à plusieurs sens\n         * - fleur / spirale\n         * - clavier\n         * - custom\n         */\n        super(params);\n\n        let rows = getOrDefault(params, \"rows\", 3);\n        let columns = getOrDefault(params, \"columns\", 2);\n        let mode = getOrDefault(params, \"mode\", \"grid\");\n        let offsetType = getOrDefault(params, \"offsetType\", \"even\");\n\n        this.buttons = getOrDefault(params, \"buttons\", []);\n        this.orderedIndices = [];\n\n        this.width = 0;\n        this.height = 0;\n\n        this.root = new Mesh({'primitive': \"node\"});\n        this.transform = this.root.transform;\n\n        if(this.buttons.length > 0)\n        {\n            //add objects to this group root\n            for(let i=0; i < this.buttons.length; i++)\n            {\n                this.root.transform.addChild(this.buttons[i].transform);\n            }\n\n            this.organize(mode, columns, offsetType);\n        }\n    }\n\n    /*setup()\n    {\n        super.setup();\n        let context = this.getContext();\n    }*/\n\n    /*add(button)\n    {\n        this.buttons.push(button);\n        button.setName(this.buttons.length-1);\n    }*/\n\n    /**\n    * Generic organize method to switch between various layout modes\n    * @private\n    * @method organize\n    * @param {String} mode grid, HoneyComb (for HoneyComb layout)\n    */\n    organize(mode, columns, offsetType)\n    {\n        /*let mode = getOrDefault(params, \"mode\", \"grid\");\n        let rows = getOrDefault(params, \"rows\", 2);\n        let columns = getOrDefault(params, \"columns\", 3);*/\n\n        //console.log(mode, columns, offsetType);\n\n        switch(mode)\n        {\n            case \"grid\":\n                let indices = this.organizeGrid(columns);\n                this.positionGrid(indices);\n                break;\n        }\n        switch(mode)\n        {\n            case \"honeycomb\": // bee honeycomb!\n                let indices = this.organizeGrid(columns);\n                this.positionHoneyComb(indices, offsetType);\n                break;\n        }\n    }\n\n    /**\n    * Organize the buttons to place in the grid. Each button is associated to an index.\n    * @private\n    * @method organizeGrid\n    * @param {Number} columns \n    * @return {Array} indices List of objects like this: {index:i,position: new Vector3(), isTop: false, isBottom: false, isLeft: false, isRight: false}, that will help to compute positions and Mesh deformations\n    */\n    organizeGrid(columns)\n    {\n        let tempIndices = [];\n\n        for(let i=0; i < this.buttons.length; i++)\n        {\n            if(i === 0 || i % columns === 0)\n            {\n                tempIndices[tempIndices.length] = [];\n            }\n            tempIndices[tempIndices.length-1].push({index:i,\n                                                    position: new Vector3(),\n                                                    isTop: false,\n                                                    isBottom: false,\n                                                    isLeft: false,\n                                                    isRight: false});\n        }\n        return tempIndices;\n    }\n    /**\n    * Compute position and set position flags for each button\n    * @private\n    * @method positionGrid\n    * @param {Array} indices given from organizeGrid\n    */\n    positionGrid(indices)\n    {\n        let index = 0;\n\n        for(let i=0; i < indices.length; i++) //line nb\n        {\n            let line = indices[i];\n\n            for(let j=0; j < line.length; j++) // column nb\n            {\n                let bt = this.buttons[line[j].index];\n                line[j].position.x = j * (bt.width + bt.strokeWidth);\n                line[j].position.y = i * -(bt.height + bt.strokeWidth);\n\n                //manage placement by strings\n                if(i === 0)\n                {\n                    line[j].isTop = true;\n                }\n                if(i === indices.length-1)\n                {\n                    line[j].isBottom = true;\n                }\n                if(j === 0)\n                {\n                    line[j].isLeft = true;\n                }\n                if(j === line.length-1)\n                {\n                    line[j].isRight = true;\n\n                    //for corner with no vertical neighbor but a line under\n                    if(index + line.length > this.buttons.length-1)\n                    {\n                        line[j].isBottom = true;\n                    }\n                }\n                this.orderedIndices.push(line[j]);\n                index++;\n            }\n        }\n\n        //console.log(this.orderedIndices);\n        this.renderGrid();\n    }\n\n    renderGrid()\n    {\n        for(let i=0; i < this.orderedIndices.length; i++)\n        {\n            let order = this.orderedIndices[i];\n            let bt = this.buttons[i];\n\n            bt.transform.setLocalPosition( order.position );\n\n            //one column singularity\n            if(order.isTop && order.isLeft && !order.isBottom && order.isRight){\n\n                let nextOrder = this.orderedIndices[i+1];\n                \n                if(!nextOrder.isTop && nextOrder.isLeft && !nextOrder.isBottom && nextOrder.isRight){\n                    bt.adaptCorner(\"straight\", \"bottomRight\");\n                    bt.adaptCorner(\"straight\", \"bottomLeft\");\n                }\n            }\n\n            //one line only\n            if(order.isTop && order.isLeft && order.isBottom && !order.isRight){\n                bt.adaptCorner(\"straight\", \"topRight\");\n                bt.adaptCorner(\"straight\", \"bottomRight\");\n            }\n            if(order.isTop && !order.isLeft && order.isBottom && !order.isRight){\n                bt.adaptCorner(\"straight\", \"topRight\");\n                bt.adaptCorner(\"straight\", \"bottomRight\");\n                bt.adaptCorner(\"straight\", \"topLeft\");\n                bt.adaptCorner(\"straight\", \"bottomLeft\");\n            }\n            if(order.isTop && !order.isLeft && order.isBottom && order.isRight){\n                bt.adaptCorner(\"straight\", \"topLeft\");\n                bt.adaptCorner(\"straight\", \"bottomLeft\");\n            }\n            //several lines\n            //middle\n            if(order.isTop && !order.isLeft && !order.isBottom && !order.isRight){\n                bt.adaptCorner(\"straight\", \"topRight\");\n                bt.adaptCorner(\"straight\", \"bottomRight\");\n                bt.adaptCorner(\"straight\", \"topLeft\");\n                bt.adaptCorner(\"straight\", \"bottomLeft\");\n            }\n            //top\n            if(order.isTop && order.isLeft && !order.isBottom && !order.isRight){\n                bt.adaptCorner(\"straight\", \"topRight\");\n                bt.adaptCorner(\"straight\", \"bottomRight\");\n                bt.adaptCorner(\"straight\", \"bottomLeft\");\n            }\n\n            if(order.isTop && !order.isLeft && !order.isBottom && order.isRight){\n                bt.adaptCorner(\"straight\", \"topLeft\");\n                bt.adaptCorner(\"straight\", \"bottomLeft\");\n                bt.adaptCorner(\"straight\", \"bottomRight\");\n            }\n            //other middle\n            if(!order.isTop && !order.isBottom){\n                bt.adaptCorner(\"straight\", \"topRight\");\n                bt.adaptCorner(\"straight\", \"bottomRight\");\n                bt.adaptCorner(\"straight\", \"topLeft\");\n                bt.adaptCorner(\"straight\", \"bottomLeft\");\n            }\n            //bottom\n            if(!order.isTop && order.isLeft && order.isBottom && order.isRight){\n                bt.adaptCorner(\"straight\", \"topLeft\");\n                bt.adaptCorner(\"straight\", \"topRight\");\n            }\n            if(!order.isTop && order.isLeft && order.isBottom && !order.isRight){\n                bt.adaptCorner(\"straight\", \"topLeft\");\n                bt.adaptCorner(\"straight\", \"topRight\");\n                bt.adaptCorner(\"straight\", \"bottomRight\");\n            }\n            if(!order.isTop && !order.isLeft && order.isBottom && order.isRight){\n                bt.adaptCorner(\"straight\", \"topLeft\");\n                bt.adaptCorner(\"straight\", \"topRight\");\n                bt.adaptCorner(\"straight\", \"bottomLeft\");\n            }\n            if(!order.isTop && !order.isLeft && order.isBottom && !order.isRight){\n                bt.adaptCorner(\"straight\", \"topRight\");\n                bt.adaptCorner(\"straight\", \"bottomRight\");\n                bt.adaptCorner(\"straight\", \"topLeft\");\n                bt.adaptCorner(\"straight\", \"bottomLeft\");\n            }\n        }\n        this.computeSize();\n    }\n\n    positionHoneyComb(indices, offsetType)\n    {\n        let index = 0;\n\n        for(let i=0; i < indices.length; i++) //line nb\n        {\n            let line = indices[i];\n\n            for(let j=0; j < line.length; j++) // column nb\n            {\n                let bt = this.buttons[line[j].index];\n\n                /*let halfWidthSquared = Math.pow(bt.mesh.getBoundingBox().getSize().x / 2, 2);\n                let twoSquareThree = 2 / Math.sqrt(3);\n                let polyHeight = bt.mesh.getBoundingBox().getSize().x * twoSquareThree;\n                let interval = Math.sqrt( Math.pow( polyHeight * Math.sin(Math.PI/6), 2) - halfWidthSquared) + polyHeight * Math.sin(Math.PI/6);*/\n\n                let interval = bt.mesh.getBoundingBox().getSize().y * 3/4;\n\n                line[j].position.x = j * (bt.mesh.getBoundingBox().getSize().x + bt.strokeWidth);\n                line[j].position.y = i * -(interval + bt.strokeWidth);\n\n                if(i % 2 === 1)\n                {\n                    if(offsetType === \"odd\")\n                    {\n                        line[j].position.x -= (bt.mesh.getBoundingBox().getSize().x + bt.strokeWidth)/2;\n                    }\n                    else\n                    {\n                        line[j].position.x += (bt.mesh.getBoundingBox().getSize().x + bt.strokeWidth)/2;   \n                    }\n                }\n                this.orderedIndices.push(line[j]);\n                index++;\n            }\n        }\n        this.renderHoneyComb();\n    }\n\n    renderHoneyComb()\n    {\n        for(let i=0; i < this.orderedIndices.length; i++)\n        {\n            let order = this.orderedIndices[i];\n            let bt = this.buttons[i];\n\n            bt.transform.setLocalPosition( order.position );\n        }\n        this.computeSize();\n    }\n\n    computeSize()\n    {\n        let bbox = this.buttons[0].mesh.getBoundingBox();\n        bbox.expandByObject(this.root.transform.entity);\n        //console.log(bbox);\n        this.width = bbox.getSize().x;\n        this.height = bbox.getSize().y;\n        //console.log(this.width, this.height);\n    }\n\n    //TODO : flower menu with cube coordinates (http://www.redblobgames.com/grids/hexagons)\n\n}\n\n// module exports\nexport { ButtonGroup };","import {Base} from '../Base';\nimport {getOrDefault} from '../helpers/Misc';\nimport {debug} from '../helpers/Debug';\nimport {_Math} from '../helpers/Math';\nimport {Loader} from '../helpers/Loader';\nimport {Font} from '../scene/Font';\nimport {Color} from '../core/Color';\nimport {EventEmitter} from '../helpers/EventEmitter';\nimport {StyledTextElement, StyledLetter, TextLine} from '../text/TextUtils';\n\n/**\n* Triggered when the canvas has been redrawn, useful to synchronise Texture update and canvas refresh\n* @event drawn\n*/\nconst EVT_DRAWN = \"drawn\";\n\nclass TextField extends Base\n{\n    /**\n    * TextField.\n    *\n    * @class TextField\n    * @constructor\n    * @param {Object} params Config parameters\n    * @param {String} params.text the String to display\n    * @param {Font} params.font font Mobilizing.Font object\n    * @param {Number} [params.fontSize = 20] fontSize font size\n    * @param {Number} [params.lineMaxCharCount = 40] lineMaxCharCount the maximum number of characters a line should count\n    * @param {Color} [params.color = Color.white] color the text color\n    * @param {Color} params.backgroundColor backgroundColor backgroundColor of the text\n    * @param {Number} [params.width = 300] width of the label\n    * @param {Number} [params.height = 100] height of the label\n    * \n    * @example\n    *    //TODO\n    */\n    constructor(params)\n    {\n        super(params);\n\n        this.setName( getOrDefault(params, \"name\", undefined) );\n        this._ready = false;\n\n        this._styledLetters = [];\n        this._maxCharCount = getOrDefault(params, \"maxCharCount\", 1000);\n        this._maxLineCount = getOrDefault(params, \"maxLineCount\", 1);\n        this._size = getOrDefault(params, \"size\", 20);\n        this._color = getOrDefault(params, \"color\", Color.gray);\n        this._backgroundColor = getOrDefault(params, \"backgroundColor\", Color.white);\n        this._lineHeight = getOrDefault(params, \"lineHeight\", 1);\n\n        this._margins = getOrDefault(params, \"margins\", 10);\n\n        this._width = getOrDefault(params, \"width\", 300);\n        this._height = getOrDefault(params, \"height\", 100);// to compute from font ?\n\n        //this.mesh = new Mesh({primitive: \"plane\", width: 1, height:1, material:this.material});\n        this._fontURL = getOrDefault(params, \"fontURL\", \"fonts/Raleway-Regular.ttf\");\n        this._fontItalicURL = getOrDefault(params, \"fontItalicURL\", \"fonts/Raleway-Regular-Italic.ttf\");\n        this._fontBoldURL = getOrDefault(params, \"fontBoldURL\", \"fonts/Raleway-Bold.ttf\");\n        this._fontBoldItalicURL = getOrDefault(params, \"fontBoldItalicURL\", \"fonts/Raleway-Bold-Italic.ttf\");\n\n        this._font = getOrDefault(params, \"font\", undefined);\n        //to easily switch fonts in rendering process\n        this._currentFont = this._font;\n\n        this._cursorColor = getOrDefault(params, \"cursorColor\", this._color);\n        this._cursorWidth = getOrDefault(params, \"cursorWidth\", 2);\n        this._blinkTime = getOrDefault(params, \"blinkTime\", 300);\n        this._blinkState = false;\n        setInterval( this.onBlink.bind(this), this._blinkTime);\n\n        this._cursorIndex = -1;//to get the position of the cursor from the letters!\n        this._cursorX = 0;\n        this._cursorY = 0;\n\n        this._canvas = document.createElement(\"canvas\");\n        this._canvas.width = this._width;\n        this._canvas.height = this._height;\n        this._canvasContext = this._canvas.getContext(\"2d\");\n\n        this._canvas.events = new EventEmitter({scope:this._canvas});\n\n        //        document.body.appendChild(this._canvas);\n        //        this._canvas.style.position = \"absolute\";\n\n        //loading font chain\n        Loader.loadArrayBuffer(this._fontURL, (data) => {\n            this._defaultFontFile = data;\n\n            Loader.loadArrayBuffer(this._fontItalicURL, (data) => {\n                this._defaultItalicFontFile = data;\n\n                Loader.loadArrayBuffer(this._fontBoldURL, (data) => {\n                    this._defaultBoldFontFile = data;\n\n                    Loader.loadArrayBuffer(this._fontBoldItalicURL, (data) => {\n                        this._defaultBoldItalicFontFile = data;\n\n                        this.setup();\n                    });\n                });\n            });\n        });\n    }\n\n    /**\n    * Setup bloc called after default font loading\n    * @private\n    * @method setup\n    */\n    setup()\n    {\n        this._defaultFont = new Font({fontFile: this._defaultFontFile});\n        this._defaultItalicFont = new Font({fontFile: this._defaultItalicFontFile});\n        this._defaultBoldFont = new Font({fontFile: this._defaultBoldFontFile});\n        this._defaultBoldItalicFont = new Font({fontFile: this._defaultBoldItalicFontFile});\n\n        this._currentFont = this._defaultFont;\n\n        this.render();\n    }\n\n    /**\n    * Set the font.\n    * @method setFont\n    * @param {Font} font Mobilizing font to use for the next letter\n    */\n    setFont(font)\n    {\n        this._currentFont = font;\n    }\n    /**\n    * Set the size of the next letter\n    * @method setSize\n    * @param {Number} size the new size of the font\n    */\n    setSize(val)\n    {\n        this._size = val;\n    }\n    /**\n    * Set the color of the next letter\n    * @method setColor\n    * @param {Color} color the new Mobilizing Color\n    */\n    setColor(val)\n    {\n        this._color = val;\n    }\n\n    /**\n    * add a letter to the field content. Styles (font, color, etc) should be defined before calling this method.\n    * @method setText\n    * @param {String} letter the letter to add\n    */\n    addLetter(val)\n    {\n        let char = val.charCodeAt(0);\n        let letter = String.fromCharCode(char);\n        //manage new line feed\n        if(val === \"\\n\")\n        {\n            letter = val;\n        }\n        \n        let styledLetter = new StyledLetter({letter: letter,\n                                             font: this._currentFont,\n                                             size: this._size,\n                                             color: this._color\n                                            });\n        this._styledLetters.splice(this._cursorIndex+1, 0, styledLetter);\n\n        this.moveCursorForward();\n\n        this.render();\n    }\n\n    /**\n    * Delete the letter currently before the cursor (or under selection when implemented)\n    * @method delete\n    */\n    delete()\n    {\n        if(this._cursorIndex >= 0)\n        {\n            this._styledLetters.splice(this._cursorIndex, 1);\n            //console.log(\"delete\",this._cursorIndex,this._styledLetters);\n            this.moveCursorBack();\n        }\n    }\n\n    /**\n    * Cursor blink callback\n    * @method onBlink\n    * @private\n    */\n    onBlink()\n    {\n        this._blinkState = !this._blinkState;\n        //console.log(\"blink\",this._blinkState);\n        this.render();\n    }\n\n    /**\n    * Moves the cursor to the next letter\n    * @method moveCursorForward\n    */\n    moveCursorForward()\n    {\n        this._cursorIndex++;\n        if(this._cursorIndex > this._styledLetters.length-1)\n        {\n            this._cursorIndex = this._styledLetters.length-1;\n        }\n        if(this._styledLetters.length === 0)\n        {\n            this._cursorIndex = -1;\n        }\n        this.render();\n        //console.log(\"++this._cursorIndex\",this._cursorIndex);\n    }\n\n    /**\n    * Moves the cursor to the pevious letter\n    * @method moveCursorBack\n    */\n    moveCursorBack()\n    {\n        this._cursorIndex--;\n        if(this._cursorIndex < -1)\n        {\n            this._cursorIndex = -1;\n        }\n        this.render();\n        //console.log(\"--this._cursorIndex\",this._cursorIndex);\n    }\n    /**\n    * Moves the cursor to the given index of the letter\n    * @method moveCursorTo\n    * @param {Number} index\n    */\n    moveCursorTo(index)\n    {\n        if(index >= -1 && index < this._styledLetters.length){\n            this._cursorIndex = index;\n            this.render();\n        }\n    }\n    /**\n    * Pick the letter situated under the given x,y coordinates\n    * @method pickLetter\n    * @param {Number} x\n    * @param {Number} y\n    */\n    pickLetter(x,y)\n    {\n        for(let i=0; i<this._styledLetters.length; i++)\n        {\n            let el = this._styledLetters[i];\n            let bbox = el.path.getBoundingBox();\n            let rect = [{x:bbox.x1, y:bbox.y1}, {x:bbox.x2, y:bbox.y1},\n                        {x:bbox.x2, y:bbox.y2}, {x:bbox.x1, y:bbox.y2}];\n\n            if(_Math.pointIsInside(x,y, rect))\n            {\n                return {index:i, letter:this._styledLetters[i]};\n            };\n        }\n    }\n\n    /**\n    * Renders the canvas\n    * @method render\n    */\n    render()\n    {\n        //background color\n        this._canvasContext.fillStyle = \"#\" + this._backgroundColor.getHexString();\n        this._canvasContext.fillRect(0,0, this._width, this._height);\n\n        //x position of drawing (letter pos in x)\n        var letterXOffset = this._margins;\n        //y position of drawing (letter pos in y, or baseline)\n        var lineYOffset = this._margins;\n\n        for(let i=0; i<this._styledLetters.length; i++)\n        {\n            if(i < this._maxCharCount)\n            {\n                let el = this._styledLetters[i];\n\n                //is it the 1st run ?  place the baseline to the margin + font size\n                if(lineYOffset === this._margins)\n                {\n                    lineYOffset += el.size;\n                }\n\n                //test for new line from canvas width limit and reset offsets and add a new line to lineCount\n                let tempWidth = letterXOffset + el.width;\n\n                if(tempWidth > this._width - this._margins)\n                {\n                    lineYOffset += el.size;\n                    letterXOffset = this._margins;\n                }\n                //test for new line feed\n                if(el.letter === \"\\n\")\n                {\n                    lineYOffset += el.size;\n                    letterXOffset = this._margins;\n                }\n\n                el.setX(letterXOffset);\n                el.setY(lineYOffset);\n                el.update();//refresh\n                el.path.draw(this._canvasContext);\n\n                //update the x offset for next el\n                letterXOffset += el.width;\n            }\n        }\n\n        //draw the cursor\n        if(this._blinkState)\n        {\n            let el = this._styledLetters[this._cursorIndex];\n\n            if(el)\n            {\n                let boundingBox = el.path.getBoundingBox();\n\n                this._canvasContext.beginPath();\n\n                //console.log(el);\n\n                if(el.height < 1)//manage blank space\n                {\n                    this._canvasContext.moveTo(el.x + el.width, el.y);\n                    this._canvasContext.lineTo(el.x + el.width, el.y);\n                    this._canvasContext.lineTo(el.x + el.width, el.y - this._size);\n                }\n                else //use path boundingBox\n                {\n                    this._canvasContext.moveTo(boundingBox.x2, boundingBox.y1);\n                    this._canvasContext.lineTo(boundingBox.x2, boundingBox.y1);\n                    this._canvasContext.lineTo(boundingBox.x2, boundingBox.y2);\n                }\n            }\n            else //we don't have a letter, it's the start of the text\n            {\n                this._canvasContext.beginPath();\n                this._canvasContext.moveTo(this._margins, this._margins);\n                this._canvasContext.lineTo(this._margins, this._margins);\n                this._canvasContext.lineTo(this._margins, this._margins + this._size);\n            }\n\n            this._canvasContext.lineWidth = this._cursorWidth;\n            this._canvasContext.strokeStyle = \"#\" + this._cursorColor.getHex();\n            this._canvasContext.stroke();\n        }\n\n        //emit a custom event on the canvas to refresh texture when used\n        this._canvas.events.trigger(EVT_DRAWN);\n    }\n\n    /**\n    * Get canvas width\n    * @method getWidth\n    * @return {Number} canvas width\n    */\n    getWidth()\n    {\n        return this._width;\n    }\n    /**\n    * Get canvas height\n    * @method getHeight\n    * @return {Number} canvas height\n    */\n    getHeight()\n    {\n        return this._height;\n    }\n\n    /**\n    * Get the canvas\n    * @method getCanvas\n    * @return {Canvas} canvas\n    */\n    getCanvas()\n    {\n        return this._canvas;\n    }\n}\n\n// module exports\nexport { TextField };","import * as THREE from 'three';\n\nimport {_DOM} from '../helpers/DOM';\nimport {Component} from '../Component';\nimport {ComponentProxy} from '../ComponentProxy';\nimport {Context} from '../Context';\nimport {debug} from '../helpers/Debug';\n\nclass EasyContext extends Context\n{\n    /*\n    * @class EasyContext\n    * @param {Object} scriptinstance the user's script instance that should be used by this context\n    * @constructor\n    */\n    constructor(params)\n    {\n        super(params); \n    }\n\n    /*\n    * Initiate the context by instanciating objects needed for the Mobilizing lib to work well! That is :\n    *\n    *     static Time Object\n    *     Scenes array (context.scenes)\n    *     Cameras array (context.cameras)\n    *     Engine object\n    *     device object (context.device)\n    *     Canvas for rendering (context.canvas)\n    *     Input object (context.input)\n    *\n    * @method init\n    * @param {Canvas} canvas The canvas to use as a rendering surface\n    * @param {JSON object} params inputDisabled to disable input\n    */\n    init(params)\n    {\n        if (params === undefined)\n            params = {};\n        super.init(params);\n        params.context = this;\n        this.audio      = this.addComponent(new Mobilizing.RendererAudio(params));\n        this.renderer   = this.addComponent(new Mobilizing.Renderer3D(params));\n        this.physics    = this.addComponent(new Mobilizing.PhysicsEngine(params));\n        this.time       = this.addComponent(new Mobilizing.Time(params));\n        this.touch      = this.addComponent(new Mobilizing.input.Touch({context:this}));\n    }\n    \n    /*\n    * Update all the context object that needs it (Time, Animation, Input)\n    * @method update\n    * @param {Canvas} canvas\n    */\n    update(canvas)\n    {\n        super.update(canvas);\n    }\n\n    getMainRenderer()\n    {\n        return this.renderer;\n    }\n\n    \n    getRenderingSurface()\n    {\n        return this.canvas;\n    }\n\n    getTouchSurface()\n    {\n        return this.canvas;\n    }\n    \n    /*\n    * Tells the context to use this scene (defined by a string) or create it and switch to it.\n    * @method setCurrentScene\n    * @param {String} name\n    */\n    setCurrentScene(name)\n    {\n        this.renderer.setCurrentScene(name);\n    }\n\n    /*\n    * Adds on object to the current scene\n    * @method addToCurrentScene\n    * @param {Object} object A Mesh or Light to add the ce scène\n    */\n    addToCurrentScene(object)\n    {\n        this.renderer.addToCurrentScene(object);\n    }\n\n\n    /*\n    * Remove from the current scene\n    * @method removeFromCurrentScene\n    * @param {Object} object the object to remove\n    */\n    removeFromCurrentScene(object)\n    {\n\n        this.renderer.removeFromCurrentScene(object);\n    }\n\n    clear()\n    {\n        this.renderer.clear();\n    }\n\n    /*\n    * Adds a camera to the current context\n    * @method addCamera\n    * @param {Camera} cam the camera to add\n    */\n    addCamera(cam)\n    {\n        this.renderer.addCamera(cam);\n    }\n\n    /*\n    * Removes the camera from the current context\n    * @method removeCamera\n    * @param {Camera} cam\n    */\n    removeCamera(cam)\n    {\n        this.renderer.removeCamera(cam);\n    }\n\n    /*\n    * Returns the current canvas'size as {width, height}\n    * @method getCanvasSize\n    * @return {Object} the size of the canvas as {width, height}\n    */\n    getCanvasSize(){\n        return { width: this.canvas.width/window.devicePixelRatio,\n                height: this.canvas.height/window.devicePixelRatio};\n    }\n\n    \n    \n    //move to RendererAudio\n    beep(frequency)\n    {\n        this.audio.beep(frequency);\n    }\n\n\n    // Helper function to get an element's exact position\n    getCanvasPosition(){\n        return _DOM.getElementPosition(this.canvas);\n    }\n\n    updateCanvasPosition() {\n        this.canvasPosition = this.getCanvasPosition();\n    }\n\n\n    \n    \n\n    /*\n     * Creates a Mobilizing Cube\n     * @method createCube\n     * @return {Object} a Mobilizing cube\n    */\n    createCube()\n    {\n        //var cube = new Mobilizing.Cube(...arguments);\n        var cube = new Mobilizing.Mesh({primitive:\"box\"});\n        this.addToCurrentScene(cube);\n        return cube;\n    }\n\n    /*\n     * Creates a Mobilizing sphere\n     * @method createSphere\n     * @return {Object} a Mobilizing sphere\n     */\n    createSphere()\n    {\n        //var sphere = new Mobilizing.Sphere(...arguments);\n        var sphere = new Mobilizing.Mesh({primitive:\"sphere\"});\n        //var sphere = Mobilizing.Mesh.CreateSphere(1,100,100);\n        this.addToCurrentScene(sphere);\n        return sphere;\n    }\n\n\n    /*\n     * Creates a Mobilizing Plane\n     * @method createPlane\n     * @return {Object} a Mobilizing Plane\n     */\n    createPlane(width, height)\n    {\n        //var plane = Mobilizing.Mesh.CreatePlane(width, height);\n        var plane = new Mobilizing.Mesh({primitive:\"plane\"});\n        this.addToCurrentScene(plane);\n        return plane;\n    }\n\n    /*\n     * Creates a Mobilizing Light\n     * @method createLight\n     * @return {Object} a Mobilizing light\n     */\n    createLight()\n    {\n        var light = new Mobilizing.Light(...arguments);\n        this.addToCurrentScene(light);\n        return light;\n    }\n\n    /*\n     * Creates a Mobilizing label\n     * @method createLabel\n     * @return {Object} a Mobilizing label\n     */\n    createLabel(params)\n    {\n        params.context = this;\n        var label = new Mobilizing.Label(params);\n        this.addToCurrentScene(label);\n        return label;\n    }\n\n    /*\n     * Creates a Mobilizing label\n     * @method createLabel\n     * @return {Object} a Mobilizing label\n     */\n    createMesh(params)\n    {\n        params.context = this;\n        var mesh = new Mobilizing.Mesh(params);\n        this.addToCurrentScene(mesh);\n        return mesh;\n    }\n\n    /*\n     * Creates a Mobilizing Camera\n     * @method createCamera\n     * @return {Object} a Mobilizing camera\n     */\n    createCamera()\n    {\n        var cam = new Mobilizing.Camera(...arguments);\n        this.addCamera(cam);\n        this.addToCurrentScene(cam);\n        return cam;\n    }\n\n\n    /*\n     * Creates a Mobilizing Camera\n     * @method createCameraX\n     * @param {Object} params A multi purpose parametrization object\n     * @return {Object} a Mobilizing camera\n     */\n    createCameraX(params)\n    {\n        //DEPRECATED\n        var cam = new Mobilizing.Camera(params.type);\n        this.addCamera(cam);\n        this.addToCurrentScene(cam);\n\n        if (params.fov !== undefined)\n        {\n            cam.setFOV(params.fov);\n        }\n        if (params.position !== undefined)\n        {\n            cam.transform.setLocalPosition(params.position);\n        }\n        if (params.layer !== undefined)\n        {\n            cam.layer = params.layer;\n        }\n\n        return cam;\n    }\n\n\n\n\n    /*\n     * Creates a Text Label\n     * @method createTextLabel\n     * @return {Object} a Mobilizing Label\n     */\n    createTextLabel(text, font, fontSize, width, height, color, backgroundColor, texture, hasBackground)\n    {\n        var labelTest = new Mobilizing.Label(text, font, width, height);\n        labelTest.style.fontSize    = fontSize;\n        labelTest.style.color       = color;\n        if (backgroundColor !== undefined)\n        {\n            labelTest.style.hasBackground = true;\n            labelTest.style.backgroundColor = backgroundColor;\n        }\n        else\n        {\n            labelTest.style.hasBackground = false;\n        }\n        //labelTest.style.textAlign = align;//\"center|end|left|right|start\"\n        labelTest.style.textAlign = \"center\";//\"center|end|left|right|start\"\n        if (texture !== undefined)\n        {\n            labelTest.material.texture = texture;\n            labelTest.transform.setLocalScale(width,height,1);\n        }\n        else\n        {\n            labelTest.render();\n        }\n\n        this.addToCurrentScene(labelTest);\n        return labelTest;\n    }\n\n\n    /*\n     * Creates a Mobilizing Video Quad\n     * @method createVideoQuad\n     * @return {Object} a Mobilizing Video Quad\n     */\n    createVideoQuad(url)\n    {\n        var quad = new Mobilizing.Mesh({primitive:\"plane\"});\n\n        quad.vt = new Mobilizing.VideoTexture();\n        quad.vt.loadFromFile(url);\n        quad.material.setTexture(quad.vt);\n        this.addToCurrentScene(quad);\n        return quad;\n    }\n\n    /*\n     * Loads a Mobilizing Font\n     * @method loadFont\n     * @return {Object} a Mobilizing Font\n     */\n    loadFont(url)\n    {\n        var font = new Mobilizing.Font(url, this);\n        return font;\n    }\n\n\n    loadObj3dModel (model_url, texture_url)\n    {\n        //load model from OBJ file\n        var model = new Mobilizing.Mesh();\n        model.material = new Mobilizing.Material({type:\"lambert\"});\n        model.updateMaterial();\n        model.loadFromFile(model_url, this.onObjLoaded.bind(this));\n        //load texture\n        var tex = new Mobilizing.Texture({context:this});\n        tex.loadFromFile(texture_url);\n        //apply texture to model\n        model.material.setTexture(tex);\n        //mob.addToCurrentScene(model); //doing this before the completed loading may result in an no rendering, we have to do that in the callback given to loadFromFile()\n        //console.log(\"added to current scene\");\n        return model;\n    }\n\n    onObjLoaded (model)\n    {\n        //we add the just loaded model to the 3D scene\n        this.addToCurrentScene(model);\n    }\n\n\n    /*\n     * Creates a Mobilizing Audio source\n     * @method createAudioSource\n     * @return {Object} a Mobilizing Audio source\n     */\n    createAudioSource(url)\n    {\n        var source  = new Mobilizing.AudioSource(this);\n        source.set3D(false);\n        var sound   = new Mobilizing.AudioBuffer(this);\n        sound.loadFromURL(url, this.onBufferLoaded.bind(this));\n        return source;\n    }\n\n    onBufferLoaded (source, buffer)\n    {\n        //source.setBuffer(sound);\n        //source.play();\n    }\n\n\n    /*\n     * Creates a Mobilizing Texture\n     * @method createTexture\n     * @return {Object} a Mobilizing texture\n     */\n    createTexture()\n    {\n        var texture = new Mobilizing.Texture({context:this});\n        return texture;\n    }\n\n    /*\n     * Creates a Mobilizing Texture\n     * @method createTextureFromCubeCamera\n     * @return {Object} a Mobilizing texture\n     */\n    createTextureFromCubeCamera(camera)\n    {\n        var texture = new Mobilizing.Texture({context:this});\n        texture.cube = camera._camera.renderTarget; //FIXME\n        texture.cube.minFilter = THREE.LinearMipMapLinearFilter;\n        return texture;\n    }\n\n\n    /*\n     * Loads a Mobilizing Texture\n     * @method loadFont\n     * @return {Object} a Mobilizing Texture\n     */\n    loadTexture(url, asynchro)\n    {\n        var texture = new Mobilizing.Texture({context:this});\n        texture.loadFromFile(url, asynchro);\n        return texture;\n    }\n\n\n    /*\n     * Creates a Mobilizing Button\n     * @method createTextButton\n     * @return {Object} a Mobilizing Button\n     */\n    createTextButton(text, width, height, font, fontSize, position, scale)\n    {\n        var button = Mobilizing.Button.CreateButton(undefined, text, font, fontSize, position, width, height, undefined, undefined,this);\n        button.transform.setLocalScale(scale);\n        this.addToCurrentScene(button);\n        return button;\n    }\n}\n\n// module exports\nexport { EasyContext };\n","export var version = \"<@VERSION@>\";\nexport var revision = \"<@REVISION@>\";\n\nexport * from './Mobilizing/audio/AudioBuffer';\nexport * from './Mobilizing/audio/AudioSource';\n\nexport * from './Mobilizing/core/Color';\nexport * from './Mobilizing/core/Euler';\nexport * from './Mobilizing/core/Matrix3';\nexport * from './Mobilizing/core/Matrix4';\nexport * from './Mobilizing/core/Quaternion';\nexport * from './Mobilizing/core/Rect';\nexport * from './Mobilizing/core/Vector2';\nexport * from './Mobilizing/core/Vector3';\n\nexport * from './Mobilizing/helpers/Animation';\nexport * from './Mobilizing/helpers/Csg';\nexport * from './Mobilizing/helpers/Debug';\nexport * from './Mobilizing/helpers/Device';\nexport * from './Mobilizing/helpers/BatteryStatus';\n\nimport {Keyboard} from './Mobilizing/input/Keyboard';\nimport {Mouse} from './Mobilizing/input/Mouse';\nimport {Touch} from './Mobilizing/input/Touch';\nimport {Motion} from './Mobilizing/input/Motion';\nimport {Orientation} from './Mobilizing/input/Orientation';\nimport {GPS} from './Mobilizing/input/GPS';\nexport var input = {\n    'Keyboard': Keyboard,\n    'Mouse': Mouse,\n    'Touch': Touch,\n    'Motion': Motion,\n    'Orientation': Orientation,\n    'GPS': GPS\n};\n\nexport {GPSUtils} from './Mobilizing/input/GPS';\n\nexport {_Math as math} from './Mobilizing/helpers/Math';\nexport * from './Mobilizing/helpers/MeshFX';\nexport * from './Mobilizing/helpers/Midi';\nexport * from './Mobilizing/helpers/Profiler';\nexport * from './Mobilizing/helpers/Runner';\nexport * from './Mobilizing/helpers/Loader';\nexport * from './Mobilizing/helpers/Pointer';\nexport * from './Mobilizing/helpers/DOM';\n\nexport {getOrDefault} from './Mobilizing/helpers/Misc';\n\nimport {Ajax} from './Mobilizing/net/Ajax';\nimport {PubSub} from './Mobilizing/net/PubSub';\nexport var net = {\n    'Ajax': Ajax,\n    'PubSub': PubSub\n};\n\nexport * from './Mobilizing/physics/PhysicsEngine';\n\nexport * from './Mobilizing/renderer/Engine3D';\nexport * from './Mobilizing/renderer/Renderer3D';\nexport * from './Mobilizing/renderer/RendererAudio';\n\nexport * from './Mobilizing/scene/Camera';\nexport * from './Mobilizing/scene/Font';\nexport * from './Mobilizing/scene/Light';\nexport * from './Mobilizing/scene/LODGroup';\nexport * from './Mobilizing/scene/Material';\nexport * from './Mobilizing/scene/Transform';\n\nexport * from './Mobilizing/shape/Label';\nexport * from './Mobilizing/shape/Mesh';\n\nexport * from './Mobilizing/text/TextUtils';\nexport * from './Mobilizing/text/RichText';\n\nexport * from './Mobilizing/texture/CanvasTexture';\nexport * from './Mobilizing/texture/DOMNodeTexture';\nexport * from './Mobilizing/texture/ImageSequenceTexture';\nexport * from './Mobilizing/texture/RenderTexture';\nexport * from './Mobilizing/texture/Texture';\nexport * from './Mobilizing/texture/VideoTexture';\n\nexport * from './Mobilizing/time/Time';\nexport * from './Mobilizing/time/Timer';\nexport * from './Mobilizing/time/NTP';\n\nexport * from './Mobilizing/ui/Button';\nexport * from './Mobilizing/ui/ButtonGroup';\nexport * from './Mobilizing/ui/Clickable';\nexport * from './Mobilizing/ui/TextField';\n\nexport * from './Mobilizing/Context';   \nexport * from './Mobilizing/context/EasyContext';\n"],"names":["getOrDefault","object","key","defaultValue","undefined","getOrExec","fn","args","getOrCreate","cls","singletonize","def","instance","AudioBuffer","params","renderer","arrayBuffer","decodedCallback","audioContext","decodeAudioData","buffer","bind","Base","_context","_name","_id","Date","now","Math","floor","random","context","name","EventEmitter","_scope","listeners","type","callback","push","Array","i","len","length","splice","data","forEach","listener","call","Component","_active","_setupDone","events","_nexts","component","AudioSource","panner","createPanner","panningModel","distanceModel","refDistance","maxDistance","rolloffFactor","coneInnerAngle","coneOuterAngle","coneOuterGain","is3D","loop","val","enabled","transform","pos","getLocalPosition","setPosition","x","y","z","play","stop","source","createBufferSource","connect","destination","playing","start","Color","r","g","b","a","string","color","THREE","green","blue","red","white","darkGray","gray","lightGray","black","cyan","magenta","yellow","lightRed","lightGreen","lightBlue","mobilizing","mobilizingDark","mobilizingLight","mobilizingAlternate","transparent","makeRGBAStringWithAlpha","Euler","Matrix3","Matrix4","Quaternion","Rect","width","height","array","Vector2","memX","memY","one","zero","Vector3","_Math","from","to","value","low1","high1","low2","high2","degreeToRadiansFactor","PI","radianToDegreesFactor","x1","y1","x2","y2","sqrt","dest","amount","min","max","points","j","oddNodes","line1","line2","a1","b1","c1","a2","b2","c2","t","_debugEnabled","window","location","search","Debug","label","doLog","console","log","apply","arguments","warn","info","error","debug","Time","_startTime","getTime","_timeScale","_currentTime","_deltaTime","reset","getStatus","lastTime","scale","EVT_START","EVT_UPDATE","EVT_RESTART","EVT_STOP","EVT_RESUME","EVT_FINISH","Animation","_target","target","_from","_to","_duration","duration","_easing","Easing","linear","_repeat","_yoyo","_delay","_time","_timesPlayed","_direction","onStart","onUpdate","onRestart","onStop","onResume","onFinish","on","getContext","addComponent","setup","_isPlaying","prop","trigger","update","time","getAbsoluteDelta","map","animation","pow","abs","easeInQuad","easeOutQuad","easeInCubic","easeOutCubic","easeInQuart","easeOutQuart","easeInQuint","easeOutQuint","sin","easeOutBounce","easeInBounce","Material","texture","_material","MeshBasicMaterial","wireframe","ShaderMaterial","fragmentShader","vertexShader","uniforms","shader","ShaderLib","UniformsUtils","clone","replace","MeshLambertMaterial","shading","FlatShading","MeshPhongMaterial","SmoothShading","LineBasicMaterial","SpriteMaterial","side","DoubleSide","_texture","cube","envMap","trans","op","opacity","sided","FrontSide","alphaTest","bool","depthWrite","depthTest","linewidth","shininess","emissive","needsUpdate","specular","blending","dispose","Camera","fov","cubeResolution","near","far","position","canvasSize","getCanvasSize","_camera","PerspectiveCamera","innerWidth","innerHeight","OrthographicCamera","CubeCamera","Transform","setLocalPosition","viewport","layer","verticalshift","horizontalshift","autorender","autoclear","autoupdatematrix","dirty","renderTexture","updateProjectionMatrix","clearColor","vec","lookAt","ratio","aspect","w","h","setViewOffset","left","right","top","bottom","zoom","children","cam","newPos","tan","degToRad","c","d","e","m","projectionMatrix","set","setAspect","getAspect","setZoom","getZoom","setFarPlane","setNearPlane","getNearPlane","Light","light","PointLight","distance","DirectionalLight","normalize","AmbientLight","SpotLight","Object3D","intensity","angle","arg1","arg2","arg3","updateMatrixWorld","penumbra","castShadow","shadow","mapSize","camera","Texture","_image","_canvas","fromImage","fromCanvas","image","canvas","magFilter","minFilter","setNeedsUpdate","u","v","repeat","wrapS","wrapT","offset","premultiplyAlpha","mapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","Label","setName","font","material","_text","_lineMaxCharCount","style","Style","_width","_height","fontSize","textAlign","mesh","Mesh","primitive","backgroundColor","hasBackground","setLocalScale","needsComputeTextSize","precLine","_textSize","setTexture","render","backgroundTexture","shadowColor","shadowBlur","document","createElement","retinaResolutionEnabled","fillStyle","backgroundColorAlpha","drawImage","fillRect","clearRect","finaltext","l","word","ll","first","SpaceLeft","strings","split","path","lastLine","nbLines","k","s","getTextSize","textHorizontalMargin","textVerticalAlign","textVerticalMargin","cursorx","cursory","getFont","getPath","fill","getHexString","draw","text","align","labelTest","obj","mobObject","entity","vector","q","quaternion","temp","matrixAutoUpdate","mat","multiplyMatrices","matrix","applyMatrix","updateMatrix","rotation","radToDeg","setLocalEulerAngles","arg","getLocalEulerAngles","tempVec","setFromMatrixPosition","matrixWorld","targetList","nx","ny","raycaster","Raycaster","ray","setFromCamera","intersects","intersectObjects","point","uv","widthHalf","heightHalf","project","child","add","indexOf","remove","index","renderOrder","visible","_geometry","constructPlane","constructQuad","constructBox","constructCube","constructSphere","constructCircle","constructCylinder","constructIcosahedron","constructOctahedron","constructText","constructNode","constructLine","constructSprite","constructArc","constructCustom","dynamic","point1","point2","vertices","segments","widthSegments","heightSegments","attachMaterial","point3","point4","rectShape","moveTo","lineTo","size","depthSegments","depth","radius","phiStart","phiLength","thetaStart","thetaLength","radiusTop","radiusBottom","radiusSegments","openEnded","detail","threeFont","curveSegments","weight","bevelEnabled","center","startAngle","endAngle","uvScale","createArc","shape","closePath","geometry","constructMesh","generateFlatUVs","uvs","bounds","getBoundingBox","faces","face","setUVs","inflateValue","generateStrokeShape","setVertices","updateMesh","boundingBox","computeBoundingBox","bbox","setFromObject","boundingSphere","computeBoundingSphere","getBoundingSphere","end","dir","subVectors","crossVectors","p1","p2","p3","p4","uv1","uv2","uv3","uv4","pushQuad","setColor","setWireframe","innerpoints","outerpoints","interval","starta","enda","cos","createDiscSector","pushTriangle","pushUV","verticesNeedUpdate","i1","i2","i3","elementsNeedUpdate","faceVertexUvs","uvsNeedUpdate","n1","n2","n3","faceVertexNormals","normalsNeedUpdate","v1","v2","v3","v4","computeFaceNormals","computeVertexNormals","erase","colors","vertexColors","colorsNeedUpdate","makeTranslation","makeScale","makeRotationX","makeRotationY","makeRotationZ","tempMesh","tempTransform","getLocalScale","setLocalRotation","getLocalRotation","updateMaterial","receiveShadow","innerGeom","outterGeom","tempOutterGeom","rot","geometryIsCW","pt0","pt1","pt2","v01","v12","rotate90CCW","rotate90CW","d01","multiplyScalar","d12","ptx0","ptx10","ptx12","ptx2","newPoint","intersectionPoint","outterPath","innerPath","holes","dot","strokeMesh","strokeColor","sizeX","sizeY","sizeZ","typeface","hsegments","vsegments","EdgesMesh","_params","threshold","Csg","mobMesh1","mobMesh2","csgMesh1","ThreeBSP","csgMesh2","newBSP","subtract","BSPGeom","toGeometry","newMobMesh","union","intersect","MOBILE","DESKTOP","OS_REGEX","Map","_STATICS","Device","os","osVersion","regex","test","navigator","userAgent","exec","appVersion","browser","appName","version","majorVersion","versionOffset","ix","substring","nameOffset","lastIndexOf","toLowerCase","toUpperCase","parseInt","isNaN","parseFloat","parseOSData","parseBrowserData","cordova","screen","getScreenWidth","getScreenHeight","EVT_CHARGING_CHANGED","EVT_LEVEL_CHANGED","EVT_CHARGING_TIME_CHANGED","EVT_DISCHARGING_TIME_CHANGED","BatteryStatus","_manager","_batteryAvailable","getBattery","then","onBatteryManager","manager","removeEventListener","onChargingChange","event","onChargingTimeChange","onLevelChange","onDischargingTimeChange","addEventListener","charging","chargingTime","dischargingTime","level","EVT_KEY_DOWN","EVT_KEY_PRESS","EVT_KEY_UP","Keyboard","onKeyDown","onKeyPress","onKeyUp","_isPressed","_keyDownCode","String","fromCharCode","keyCode","preventDefault","_DOM","el","tagName","xScroll","scrollLeft","documentElement","yScroll","scrollTop","offsetLeft","clientLeft","offsetTop","clientTop","offsetParent","EVT_MOUSE_UPDATE","EVT_MOUSE_MOVE","EVT_MOUSE_OVER","EVT_MOUSE_OUT","EVT_MOUSE_PRESS","EVT_MOUSE_DRAG","EVT_MOUSE_RELEASE","EVT_MOUSE_CLICK","EVT_MOUSE_DBLCLICK","EVT_MOUSE_WHEEL","Mouse","_x","_y","_pX","_pY","_dragStartX","_dragStartY","_wheelDeltaX","_wheelDeltaY","_wheelDeltaZ","_pressed","_wheelActivated","_resetWheel","onMouseMove","onMouseOver","onMouseOut","onMouseDown","onMouseUp","onClick","onDblClick","onWheel","getPX","getPY","getX","getY","Window","getElementPosition","clientX","clientY","isPressed","button","deltaX","deltaY","deltaZ","getDeltaX","getDeltaY","getDragOffsetX","getDragOffsetY","getType","WheelEvent","getWheelDeltaX","getWheelDeltaY","getWheelDeltaZ","TouchObject","pX","pY","id","xDelta","yDelta","startX","startY","offsetX","offsetY","EVT_TOUCH_START","EVT_TOUCH_END","EVT_TOUCH_MOVED","EVT_TAP_CHANGED","EVT_PRESSED_CHANGED","Touch","count","pressed","touches","taps","tapsMaxInterval","oldTapTime","pinchTouches","pinchStart","pinch","pinchActive","touchState","touchDown","touchUp","onTouchStart","onTouchEnd","onTouchMove","setPX","setPY","newTouch","changedTouches","touch","identifier","pageX","pageY","setX","setY","up","down","myTouch","touchNb","dist","EVT_ACC","EVT_ACC_GRAVITY","EVT_ACC_GRAVITY_VECTOR","EVT_ROTATION_RATE","Motion","param","_accAvailable","DeviceMotionEvent","rotationRate","acc","userAcc","smoothedAcc","accel","kFilteringFactor","gravityVector","onDeviceMotion","reverse","getOS","acceleration","computeUserAcc","accelerationIncludingGravity","computeGravityVector","alpha","beta","gamma","atan2","factor","EVT_DEVICE_ORIENTATION","EVT_COMPASS_CALIBRATION","Orientation","compassAvailable","DeviceOrientationEvent","compass","deviceRotationMatrix","deviceHeading","deviceAttitude","deviceBank","onDeviceOrientation","onCompassCalibration","screenOrientation","finalQuaternion","deviceEuler","screenTransform","worldTransform","minusHalfAngle","setFromEuler","multiply","createGyroQuaternion","orientation","webkitCompassHeading","heading","_z","cX","cY","cZ","sX","sY","sZ","m11","m12","m13","m21","m22","m23","m31","m32","m33","asin","computeRotationMatrix","updateDeviceRotationMatrix","EVT_LOC_UPDATED","EVT_LOC_ERROR","GPS","_enableHighAccuracy","_maximumAge","_timeout","_GPSAvailable","_location","latitude","longitude","altitude","accuracy","altitudeAccuracy","speed","timestamp","_watchID","positionOptions","enableHighAccuracy","timeout","maximumAge","geolocation","watchPosition","updateLocationCallBack","updateLocationErrorCallBack","clearWatch","coords","code","worldSize","GPSUtils","longitute","lngX","latY","mapCoord","mapWidth","mapHeight","leftLong","bottomLat","rightLong","topLat","topRight","getPixelsCoordsFromOSMLngLat","topLeft","bottomRight","bottomLeft","absCoord","lng","lat","atan","exp","MeshFX","getVertices","noise","Midi","midioutname","out","midiinname","in","onMidiIn","requestMIDIAccess","onMIDIInit","onMIDIReject","midi","midiAccess","hookUpMIDI","onstatechange","err","alert","inputs","values","input","next","done","midiname","onmidimessage","onMIDIMessage","outputs","output","midioutput","message","channel","data1","data2","cc","ccMessage","send","note","vel","NoteOn","NoteOff","Aftertouch","ControlChange","ProgramChange","Profiler","timers","current_frame","last_time","initialize","dt","frame","logTimers","str","EVT_READYSTATE_CHANGE","EVT_PROGRESS","EVT_LOAD","EVT_SUCCESS","EVT_ERROR","Ajax","url","method","headers","async","autoSend","withCredentials","responseType","onReadyStateChange","onProgress","onLoad","onSuccess","onError","_xhr","XMLHttpRequest","url_params","encodeURIComponent","join","setResponseType","setRequestHeader","setWithCredentials","setTimeout","open","getReadyState","OPENED","LOADING","DONE","status","success","header","abort","statusText","readyState","response","responseText","JSON","parse","getResponseText","OBJ","loader","callBack","loadText","parseOBJ","model","lines","toString","words","line","setEmissiveColor","Mobilizing","setSpecularColor","loadTexture","attachTexture","p","clear","normals","resultmtl","parseMTL","pushVertex","vUV","vN","index1","index2","index3","f","pushFace","index4","computeNormals","EVT_REQUEST_START","EVT_REQUEST_LOAD","EVT_REQUEST_ERROR","EVT_COMPLETE","STATUS_PENDING","STATUS_LOADING","STATUS_COMPLETE","LoadRequest","_consumeCallback","consume","_value","_error","Loader","onComplete","_status","_requests","_complete","request","doComplete","processData","ajax","getResponse","setValue","getStatusText","setError","load","Object","assign","img","Image","src","video","autoplay","result","loadImage","Cache","isLoading","addCallback","isCached","get","addKey","addValue","script","head","appendChild","files","callbacks","file","getKey","keys","ComponentProxy","targetScript","preLoad","Context","_components","chainedCall","chained","getChainedComponents","setContext","Runner","run","init","startLoop","consumeAll","stats","begin","onFrameBegin","onFrameEnd","requestAnimationFrame","TOUCH_TYPE","MOUSE_TYPE","PointerObject","state","_deltaX","_deltaY","_state","_type","_component","EVT_ON","EVT_OFF","EVT_MOVED","Pointer","components","pointers","lastActivePointer","setType","pointerKey","pointer","getState","delete","setDeltaX","getComponent","setDeltaY","touchComponent","setComponent","setState","mouseComponent","getID","EVT_CONNECT","EVT_DISCONNECT","PubSub","autoConnect","io","onload","socket","disconnect","emit","off","PhysicsEngine","joints","bodies","iterations","G","ke","relaxationCoeff","body","joint","getDelta","force","forces","body1","body2","sx","velocity","sy","sz","damping","mass","charge1","charge2","previousposition","globalgravity","globalwind","err1","err2","fixed","Engine3D","WebGLRenderer","engine","devicePixelRatio","setPixelRatio","setSize","windowWidth","clientWidth","windowHeight","clientHeight","domElement","setClearColor","autoClear","Renderer3D","scenes","cameras","fog","setCurrentScene","fullscreen","onWindowResize","updateCanvasPosition","canvasPosition","getCanvasPosition","shadowMap","PCFSoftShadowMap","shadowMapEnabled","scene","Scene","o","Fog","getHex","FogExp2","density","setOrthoPlanes","sort","sorted_cameras","min_val","min_cam","cam_candidate","getVisible","viewport_x","viewport_y","viewport_w","viewport_h","setViewport","setScissor","setScissorTest","ks","logLevel","_engineTexture","updateCubeMap","RendererAudio","audioEnabled","AudioContext","webkitAudioContext","sampleRate","createBuffer","dummy","close","audioOutputNode","createGain","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","frequency","freq","osc","createOscillator","currentTime","Font","_fontFile","_font","opentype","kerning","fontScale","glyphs","glyph","options","kerningValue","ymax","supported","unitsPerEm","stringToGlyphs","getMetrics","yMax","yMin","advanceWidth","getKerningValue","LODGroup","bias","thisposition","getWorldPosition","getDistance","lod","StyledLetter","letter","StyledTextElement","styledLetters","baseWidth","styledLetter","char","charCodeAt","TextLine","styledTextElements","EVT_DRAWN","TEXT_ALIGN_LEFT","TEXT_ALIGN_RIGHT","TEXT_ALIGN_CENTER","RichText","_backgroundColor","_lineHeight","_margins","margins","_textColor","_textAlign","_boundingBoxStrokeWidth","_drawBoundingBox","_fontURL","_fontItalicURL","_fontBoldURL","_fontBoldItalicURL","_canvasContext","scope","_DOMText","innerHTML","styledText","parseDOMTree","_lines","loadArrayBuffer","_defaultFontFile","_defaultItalicFontFile","_defaultBoldFontFile","_defaultBoldItalicFontFile","_defaultFont","fontFile","_defaultItalicFont","_defaultBoldFont","_defaultBoldItalicFont","baseNode","processDOMTree","destArray","node","previousElementSibling","childNodes","textContent","attributes","tags","setText","parentNode","tempNode","letterXOffset","lineYOffset","lineCount","currentFont","tempWidth","Number","setFont","fontTextSize","lineObj","xDiff","beginPath","lineWidth","stroke","CanvasTexture","_strokeWidth","_strokeColor","_strokeOpacity","_fillColor","_fillOpacity","generateMipmaps","setFillColor","tempStrokeColor","tempFillColor","toRGBAColorString","strokeStyle","strokeWidth","fillColor","fillOpacity","strokeOpacity","ctx","arc","DOMNodeTexture","toDataURL","imgEl","self","domvas","toImage","cssName","cssRules","styleSheets","selector","selectorText","classList","ImageSequenceTexture","frameRate","textures","sequenceMode","direction","lapsToDo","frameCount","laps","currentFrame","urlbase","loadFromFile","enterFrame","outFrame","mode","deltaTime","RenderTexture","format","VideoTexture","_video","_loop","_autoPlay","_fps","_isIOS","_bufferedPourcent","_videoCanvasTexture","videoWidth","videoHeight","onLoadProgess","onVideoEnded","NearestFilter","timeRange","getBuffered","getDuration","HAVE_FUTURE_DATA","elapsed","pause","buffered","playbackRate","Timer","startTime","tempInterval","NTP","_smoothingFactor","_NTPEnabled","_timeOffsetSmooth","_lastTime","_offset","WebSocket","ntp_websockets","setInterval","resync","Clickable","onPress","onRelease","onEnter","onLeave","picked","hovered","mouse","pick","BT_STATE_PRESSED","BT_STATE_RELEASED","Button","sideCount","cutOff","pressFillColor","hoverFillColor","textSize","root","canvasWidth","canvasHeight","twoSquareThree","richText","marginTop","textColor","fontURL","fontItalicURL","fontBoldURL","fontBoldItalicURL","pressRichText","textTexture","getCanvas","pressTextTexture","generateDefaultMesh","addChild","clickable","texturedMesh","setOpacity","vertex","parts","topLeftIndex","topRightIndex","bottomRightIndex","bottomLeftIndex","generateFillMesh","setTransparent","generateStrokeMesh","corner","regenerateStrokeGeometry","updateStroke","fakePressed","ButtonGroup","rows","columns","offsetType","buttons","orderedIndices","organize","indices","organizeGrid","positionGrid","positionHoneyComb","tempIndices","isTop","isBottom","isLeft","isRight","bt","renderGrid","order","nextOrder","adaptCorner","computeSize","getSize","renderHoneyComb","expandByObject","TextField","_ready","_styledLetters","_maxCharCount","_maxLineCount","_size","_color","_currentFont","_cursorColor","_cursorWidth","_blinkTime","_blinkState","onBlink","_cursorIndex","_cursorX","_cursorY","moveCursorForward","moveCursorBack","rect","pointIsInside","EasyContext","audio","physics","addToCurrentScene","removeFromCurrentScene","addCamera","removeCamera","beep","sphere","plane","setFOV","quad","vt","model_url","texture_url","onObjLoaded","tex","set3D","sound","loadFromURL","onBufferLoaded","renderTarget","asynchro","CreateButton","revision","net"],"mappings":"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"}